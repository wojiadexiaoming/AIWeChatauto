2025-07-21 09:28:40,900 - root - INFO - 应用目录创建完成
2025-07-21 09:28:40,903 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 09:28:40,903 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 09:28:40,904 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 09:28:40,904 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 09:28:40,905 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 09:28:40,906 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 09:28:40,906 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 09:28:40,907 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 09:28:40,908 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 09:28:40,908 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 09:28:40,909 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 09:28:40,910 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 09:28:40,911 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 09:28:41,885 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 09:28:41,886 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 09:28:45,789 - root - INFO - 请求: GET /
2025-07-21 09:28:45,790 - root - INFO - 访问主页面
2025-07-21 09:28:45,858 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:28:45] "GET / HTTP/1.1" 200 -
2025-07-21 09:28:45,898 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 09:28:45,902 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 09:28:45,903 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 09:28:46,084 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:28:46] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 09:28:46,086 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:28:46] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 09:28:46,095 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:28:46] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 09:28:46,168 - root - INFO - 请求: GET /api/get_ip
2025-07-21 09:28:46,169 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:28:46] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 09:28:46,189 - root - INFO - 请求: GET /api/style-templates
2025-07-21 09:28:46,203 - root - INFO - 请求: GET /api/config
2025-07-21 09:28:46,204 - root - INFO - 处理配置请求: GET
2025-07-21 09:28:46,204 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 09:28:46,205 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:28:46,205 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 09:28:46,206 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:28:46] "GET /api/config HTTP/1.1" 200 -
2025-07-21 09:28:46,233 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:28:46] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 09:28:46,368 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 09:28:46,368 - root - INFO - 获取Gemini可用模型列表
2025-07-21 09:28:46,368 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 09:28:46,368 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:28:46,369 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:28:46,369 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 09:28:49,303 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 09:28:49,303 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 09:28:49,304 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 09:29:16,213 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:29:16,214 - root - INFO - 获取生成历史请求
2025-07-21 09:29:16,215 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:29:16,216 - root - INFO - 获取发布历史请求
2025-07-21 09:29:16,218 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:29:16] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:29:16,220 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:29:16] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:29:46,217 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:29:46,218 - root - INFO - 获取生成历史请求
2025-07-21 09:29:46,218 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:29:46,218 - root - INFO - 获取发布历史请求
2025-07-21 09:29:46,219 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:29:46] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:29:46,219 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:29:46] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:30:16,213 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:30:16,214 - root - INFO - 获取生成历史请求
2025-07-21 09:30:16,215 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:30:16,216 - root - INFO - 获取发布历史请求
2025-07-21 09:30:16,219 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:30:16] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:30:16,220 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:30:16] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:30:34,468 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 09:30:34,468 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 09:30:34,468 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 09:30:34,469 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:30:34] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 09:30:34,477 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 09:30:34,478 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 09:30:34,478 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 09:30:34,478 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:30:34,478 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:30:34,479 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 09:30:34,479 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 09:30:34,510 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 09:30:34,720 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 09:30:34,721 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 09:30:34,722 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 09:30:34,722 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 09:30:34,723 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 09:30:34,723 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 09:30:34,724 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 09:30:34,725 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:30:34] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 09:30:34,738 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 09:30:34,738 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 09:30:34,739 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 09:30:34,740 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:30:34,741 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:30:34,741 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 09:30:35,235 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000009CBDF80>, 'json_data': None}
2025-07-21 09:30:35,270 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 09:30:35,270 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 09:30:35,294 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CD4590>
2025-07-21 09:30:35,294 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009CC08D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 09:30:35,314 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CD42F0>
2025-07-21 09:30:35,314 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 09:30:35,315 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 09:30:35,315 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 09:30:35,315 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 09:30:35,315 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 09:30:35,363 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'6a89b18e-c9ce-9aeb-89a0-b925b22310f4'), (b'content-type', b'application/json'), (b'req-cost-time', b'34'), (b'req-arrive-time', b'1753061434770'), (b'resp-start-time', b'1753061434804'), (b'x-envoy-upstream-service-time', b'33'), (b'set-cookie', b'acw_tc=6a89b18e-c9ce-9aeb-89a0-b925b22310f47f39f48ed5b9d26bda61505a1f1bcfc1;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 01:30:34 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 09:30:35,363 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 09:30:35,364 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 09:30:35,381 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 09:30:35,381 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 09:30:35,381 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 09:30:35,381 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '6a89b18e-c9ce-9aeb-89a0-b925b22310f4', 'content-type': 'application/json', 'req-cost-time': '34', 'req-arrive-time': '1753061434770', 'resp-start-time': '1753061434804', 'x-envoy-upstream-service-time': '33', 'set-cookie': 'acw_tc=6a89b18e-c9ce-9aeb-89a0-b925b22310f47f39f48ed5b9d26bda61505a1f1bcfc1;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 01:30:34 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 09:30:35,381 - openai._base_client - DEBUG - request_id: 6a89b18e-c9ce-9aeb-89a0-b925b22310f4
2025-07-21 09:30:35,384 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 09:30:35,384 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 09:30:35,385 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 09:30:35,385 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 09:30:35,385 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 09:30:35,385 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 09:30:35,385 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 09:30:35,386 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:30:35] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 09:30:35,395 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:30:35,396 - root - INFO - 获取生成历史请求
2025-07-21 09:30:35,397 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:30:35] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:30:35,406 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:30:35,407 - root - INFO - 获取发布历史请求
2025-07-21 09:30:35,407 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:30:35] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:30:46,206 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:30:46,207 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:30:46,207 - root - INFO - 获取生成历史请求
2025-07-21 09:30:46,208 - root - INFO - 获取发布历史请求
2025-07-21 09:30:46,209 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:30:46] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:30:46,210 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:30:46] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:31:17,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:31:17,190 - root - INFO - 获取生成历史请求
2025-07-21 09:31:17,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:31:17,192 - root - INFO - 获取发布历史请求
2025-07-21 09:31:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:31:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:31:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:31:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:31:47,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:31:47,179 - root - INFO - 获取生成历史请求
2025-07-21 09:31:47,180 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:31:47,180 - root - INFO - 获取发布历史请求
2025-07-21 09:31:47,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:31:47] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:31:47,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:31:47] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:32:17,194 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:32:17,195 - root - INFO - 获取生成历史请求
2025-07-21 09:32:17,196 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:32:17,198 - root - INFO - 获取发布历史请求
2025-07-21 09:32:17,202 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:32:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:32:17,204 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:32:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:33:17,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:33:17,179 - root - INFO - 获取生成历史请求
2025-07-21 09:33:17,180 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:33:17,180 - root - INFO - 获取发布历史请求
2025-07-21 09:33:17,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:33:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:33:17,917 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:33:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:34:17,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:34:17,183 - root - INFO - 获取生成历史请求
2025-07-21 09:34:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:34:17,186 - root - INFO - 获取发布历史请求
2025-07-21 09:34:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:34:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:34:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:34:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:35:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:35:17,189 - root - INFO - 获取生成历史请求
2025-07-21 09:35:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:35:17,189 - root - INFO - 获取发布历史请求
2025-07-21 09:35:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:35:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:35:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:35:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:36:17,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:36:17,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:36:17,192 - root - INFO - 获取生成历史请求
2025-07-21 09:36:17,193 - root - INFO - 获取发布历史请求
2025-07-21 09:36:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:36:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:36:17,196 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:36:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:37:17,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:37:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:37:17,190 - root - INFO - 获取生成历史请求
2025-07-21 09:37:17,191 - root - INFO - 获取发布历史请求
2025-07-21 09:37:17,196 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:37:17,198 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:37:47,721 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:37:47,722 - root - INFO - 获取生成历史请求
2025-07-21 09:37:47,723 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:37:47,723 - root - INFO - 获取发布历史请求
2025-07-21 09:37:47,724 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:47] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:37:47,725 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:47] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:37:49,013 - root - INFO - 请求: GET /
2025-07-21 09:37:49,013 - root - INFO - 访问主页面
2025-07-21 09:37:49,014 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:49] "GET / HTTP/1.1" 200 -
2025-07-21 09:37:49,054 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 09:37:49,055 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 09:37:49,055 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:49] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 09:37:49,057 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 09:37:49,057 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:49] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 09:37:49,058 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:49] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 09:37:49,108 - root - INFO - 请求: GET /api/get_ip
2025-07-21 09:37:49,108 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:49] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 09:37:49,108 - root - INFO - 请求: GET /api/style-templates
2025-07-21 09:37:49,109 - root - INFO - 请求: GET /api/config
2025-07-21 09:37:49,109 - root - INFO - 处理配置请求: GET
2025-07-21 09:37:49,109 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 09:37:49,110 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:37:49,110 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 09:37:49,111 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:49] "GET /api/config HTTP/1.1" 200 -
2025-07-21 09:37:49,114 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:49] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 09:37:49,250 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 09:37:49,251 - root - INFO - 获取Gemini可用模型列表
2025-07-21 09:37:49,251 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 09:37:49,251 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:37:49,251 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:37:49,254 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 09:37:49,256 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 09:37:49,257 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:37:49] "GET /static/favicon.ico HTTP/1.1" 200 -
2025-07-21 09:37:50,201 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 09:37:50,202 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 09:37:50,202 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 09:39:00,315 - root - INFO - 应用目录创建完成
2025-07-21 09:39:00,316 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 09:39:00,316 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 09:39:00,316 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 09:39:00,316 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 09:39:00,316 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 09:39:00,317 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 09:39:00,317 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 09:39:00,317 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 09:39:00,317 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 09:39:00,317 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 09:39:00,317 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 09:39:00,317 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 09:39:00,318 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 09:39:01,183 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 09:39:01,183 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 09:39:07,463 - root - INFO - 请求: GET /
2025-07-21 09:39:07,463 - root - INFO - 访问主页面
2025-07-21 09:39:07,473 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:07] "GET / HTTP/1.1" 200 -
2025-07-21 09:39:07,559 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 09:39:07,562 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 09:39:07,563 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 09:39:07,748 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:07] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 09:39:07,757 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:07] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 09:39:07,757 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:07] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 09:39:07,840 - root - INFO - 请求: GET /api/get_ip
2025-07-21 09:39:07,841 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:07] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 09:39:07,858 - root - INFO - 请求: GET /api/style-templates
2025-07-21 09:39:07,861 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:07] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 09:39:07,877 - root - INFO - 请求: GET /api/config
2025-07-21 09:39:07,877 - root - INFO - 处理配置请求: GET
2025-07-21 09:39:07,878 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 09:39:07,878 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:39:07,878 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 09:39:07,878 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:07] "GET /api/config HTTP/1.1" 200 -
2025-07-21 09:39:08,037 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 09:39:08,037 - root - INFO - 获取Gemini可用模型列表
2025-07-21 09:39:08,038 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 09:39:08,038 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:39:08,038 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:39:08,039 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 09:39:09,158 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 09:39:09,158 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 09:39:09,158 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 09:39:13,803 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 09:39:13,803 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 09:39:13,803 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 09:39:13,804 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:39:13,804 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:39:13,804 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 09:39:13,804 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 09:39:13,805 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 09:39:13,906 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 09:39:13,907 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 09:39:13,907 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 09:39:13,907 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 09:39:13,908 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 09:39:13,908 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 09:39:13,908 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 09:39:13,908 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:13] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 09:39:16,705 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 09:39:16,705 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 09:39:16,705 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 09:39:16,706 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:39:16,706 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:39:16,706 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 09:39:17,172 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000008C222A0>, 'json_data': None}
2025-07-21 09:39:17,203 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 09:39:17,204 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 09:39:17,243 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008C251C0>
2025-07-21 09:39:17,243 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008C044D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 09:39:17,265 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008C24F20>
2025-07-21 09:39:17,265 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 09:39:17,266 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 09:39:17,266 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 09:39:17,266 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 09:39:17,267 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 09:39:17,304 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'7def5f93-faf1-9bf0-8381-43a1bcabd174'), (b'content-type', b'application/json'), (b'req-cost-time', b'24'), (b'req-arrive-time', b'1753061956729'), (b'resp-start-time', b'1753061956753'), (b'x-envoy-upstream-service-time', b'23'), (b'set-cookie', b'acw_tc=7def5f93-faf1-9bf0-8381-43a1bcabd174f203d113ac5acbb1ef2bb524648deee7;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 01:39:16 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 09:39:17,306 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 09:39:17,307 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 09:39:17,307 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 09:39:17,308 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 09:39:17,308 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 09:39:17,308 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '7def5f93-faf1-9bf0-8381-43a1bcabd174', 'content-type': 'application/json', 'req-cost-time': '24', 'req-arrive-time': '1753061956729', 'resp-start-time': '1753061956753', 'x-envoy-upstream-service-time': '23', 'set-cookie': 'acw_tc=7def5f93-faf1-9bf0-8381-43a1bcabd174f203d113ac5acbb1ef2bb524648deee7;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 01:39:16 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 09:39:17,309 - openai._base_client - DEBUG - request_id: 7def5f93-faf1-9bf0-8381-43a1bcabd174
2025-07-21 09:39:17,315 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 09:39:17,316 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 09:39:17,316 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 09:39:17,317 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 09:39:17,349 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 09:39:17,349 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 09:39:17,350 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 09:39:17,351 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:17] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 09:39:37,881 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:39:37,881 - root - INFO - 获取生成历史请求
2025-07-21 09:39:37,881 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:39:37,882 - root - INFO - 获取发布历史请求
2025-07-21 09:39:37,882 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:37] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:39:37,883 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:39:37] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:40:08,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:40:08,184 - root - INFO - 获取生成历史请求
2025-07-21 09:40:08,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:40:08,186 - root - INFO - 获取发布历史请求
2025-07-21 09:40:08,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:40:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:40:08,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:40:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:40:38,175 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:40:38,175 - root - INFO - 获取生成历史请求
2025-07-21 09:40:38,176 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:40:38,176 - root - INFO - 获取发布历史请求
2025-07-21 09:40:38,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:40:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:40:38,177 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:40:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:41:08,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:41:08,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:41:08,178 - root - INFO - 获取生成历史请求
2025-07-21 09:41:08,178 - root - INFO - 获取发布历史请求
2025-07-21 09:41:08,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:41:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:41:08,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:41:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:41:38,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:41:38,187 - root - INFO - 获取生成历史请求
2025-07-21 09:41:38,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:41:38,188 - root - INFO - 获取发布历史请求
2025-07-21 09:41:38,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:41:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:41:38,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:41:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:41:57,509 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 09:41:57,509 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 09:41:57,510 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 09:41:57,511 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:41:57] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 09:41:57,529 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 09:41:57,529 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 09:41:57,530 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 09:41:57,532 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:41:57,533 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:41:57,534 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 09:41:57,534 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 09:41:57,537 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 09:41:57,619 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 09:41:57,620 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 09:41:57,620 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 09:41:57,620 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 09:41:57,620 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 09:41:57,620 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 09:41:57,621 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 09:41:57,621 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:41:57] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 09:41:57,629 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 09:41:57,629 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 09:41:57,629 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 09:41:57,630 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:41:57,630 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:41:57,630 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 09:41:58,104 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000008C23920>, 'json_data': None}
2025-07-21 09:41:58,105 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 09:41:58,105 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 09:41:58,141 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008C26870>
2025-07-21 09:41:58,142 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008C07150> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 09:41:58,166 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008C26CF0>
2025-07-21 09:41:58,167 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 09:41:58,167 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 09:41:58,168 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 09:41:58,168 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 09:41:58,169 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 09:41:58,220 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'67b2d2a7-1b97-9d64-8d63-ccb4ffd14320'), (b'content-type', b'application/json'), (b'req-cost-time', b'37'), (b'req-arrive-time', b'1753062117633'), (b'resp-start-time', b'1753062117671'), (b'x-envoy-upstream-service-time', b'37'), (b'set-cookie', b'acw_tc=67b2d2a7-1b97-9d64-8d63-ccb4ffd14320f862148258043dd88a60a9d8dc6f6c8f;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 01:41:57 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 09:41:58,221 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 09:41:58,221 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 09:41:58,222 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 09:41:58,222 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 09:41:58,222 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 09:41:58,222 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '67b2d2a7-1b97-9d64-8d63-ccb4ffd14320', 'content-type': 'application/json', 'req-cost-time': '37', 'req-arrive-time': '1753062117633', 'resp-start-time': '1753062117671', 'x-envoy-upstream-service-time': '37', 'set-cookie': 'acw_tc=67b2d2a7-1b97-9d64-8d63-ccb4ffd14320f862148258043dd88a60a9d8dc6f6c8f;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 01:41:57 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 09:41:58,224 - openai._base_client - DEBUG - request_id: 67b2d2a7-1b97-9d64-8d63-ccb4ffd14320
2025-07-21 09:41:58,229 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 09:41:58,229 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 09:41:58,229 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 09:41:58,230 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 09:41:58,230 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 09:41:58,230 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 09:41:58,230 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 09:41:58,231 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:41:58] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 09:41:58,244 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:41:58,244 - root - INFO - 获取生成历史请求
2025-07-21 09:41:58,246 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:41:58] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:41:58,259 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:41:58,259 - root - INFO - 获取发布历史请求
2025-07-21 09:41:58,260 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:41:58] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:42:08,176 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:42:08,177 - root - INFO - 获取生成历史请求
2025-07-21 09:42:08,177 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:42:08,177 - root - INFO - 获取发布历史请求
2025-07-21 09:42:08,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:42:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:42:08,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:42:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:43:07,512 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:43:07,513 - root - INFO - 获取生成历史请求
2025-07-21 09:43:07,513 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:43:07,514 - root - INFO - 获取发布历史请求
2025-07-21 09:43:07,515 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:43:07] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:43:07,515 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:43:07] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:43:38,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:43:38,189 - root - INFO - 获取生成历史请求
2025-07-21 09:43:38,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:43:38,189 - root - INFO - 获取发布历史请求
2025-07-21 09:43:38,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:43:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:43:38,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:43:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:44:08,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:44:08,191 - root - INFO - 获取生成历史请求
2025-07-21 09:44:08,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:44:08,194 - root - INFO - 获取发布历史请求
2025-07-21 09:44:08,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:44:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:44:08,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:44:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:44:37,892 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:44:37,892 - root - INFO - 获取生成历史请求
2025-07-21 09:44:37,893 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:44:37,893 - root - INFO - 获取发布历史请求
2025-07-21 09:44:37,894 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:44:37] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:44:37,894 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:44:37] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:45:08,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:45:08,180 - root - INFO - 获取生成历史请求
2025-07-21 09:45:08,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:45:08,181 - root - INFO - 获取发布历史请求
2025-07-21 09:45:08,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:45:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:45:08,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:45:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:46:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:46:17,183 - root - INFO - 获取生成历史请求
2025-07-21 09:46:17,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:46:17,183 - root - INFO - 获取发布历史请求
2025-07-21 09:46:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:46:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:46:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:46:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:46:38,177 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:46:38,177 - root - INFO - 获取生成历史请求
2025-07-21 09:46:38,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:46:38,178 - root - INFO - 获取发布历史请求
2025-07-21 09:46:38,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:46:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:46:38,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:46:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:47:08,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:47:08,190 - root - INFO - 获取生成历史请求
2025-07-21 09:47:08,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:47:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:47:08,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:47:08,193 - root - INFO - 获取发布历史请求
2025-07-21 09:47:08,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:47:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:48:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:48:17,184 - root - INFO - 获取生成历史请求
2025-07-21 09:48:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:48:17,185 - root - INFO - 获取发布历史请求
2025-07-21 09:48:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:48:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:48:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:48:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:48:37,878 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:48:37,879 - root - INFO - 获取生成历史请求
2025-07-21 09:48:37,879 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:48:37,879 - root - INFO - 获取发布历史请求
2025-07-21 09:48:37,879 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:48:37] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:48:37,881 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:48:37] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:49:08,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:49:08,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:49:08,186 - root - INFO - 获取生成历史请求
2025-07-21 09:49:08,186 - root - INFO - 获取发布历史请求
2025-07-21 09:49:08,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:49:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:49:08,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:49:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:49:38,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:49:38,186 - root - INFO - 获取生成历史请求
2025-07-21 09:49:38,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:49:38,186 - root - INFO - 获取发布历史请求
2025-07-21 09:49:38,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:49:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:49:38,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:49:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:50:08,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:50:08,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:50:08,192 - root - INFO - 获取生成历史请求
2025-07-21 09:50:08,193 - root - INFO - 获取发布历史请求
2025-07-21 09:50:08,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:50:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:50:08,198 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:50:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:50:38,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:50:38,191 - root - INFO - 获取生成历史请求
2025-07-21 09:50:38,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:50:38,192 - root - INFO - 获取发布历史请求
2025-07-21 09:50:38,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:50:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:50:38,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:50:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:51:08,192 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:51:08,193 - root - INFO - 获取生成历史请求
2025-07-21 09:51:08,194 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:51:08,195 - root - INFO - 获取发布历史请求
2025-07-21 09:51:08,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:51:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:51:08,198 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:51:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:51:38,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:51:38,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:51:38,188 - root - INFO - 获取生成历史请求
2025-07-21 09:51:38,188 - root - INFO - 获取发布历史请求
2025-07-21 09:51:38,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:51:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:51:38,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:51:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:52:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:52:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:52:17,185 - root - INFO - 获取生成历史请求
2025-07-21 09:52:17,185 - root - INFO - 获取发布历史请求
2025-07-21 09:52:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:52:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:52:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:52:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:52:38,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:52:38,190 - root - INFO - 获取生成历史请求
2025-07-21 09:52:38,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:52:38,192 - root - INFO - 获取发布历史请求
2025-07-21 09:52:38,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:52:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:52:38,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:52:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:53:08,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:53:08,189 - root - INFO - 获取生成历史请求
2025-07-21 09:53:08,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:53:08,189 - root - INFO - 获取发布历史请求
2025-07-21 09:53:08,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:53:08,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:53:38,196 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:53:38,198 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:53:38,198 - root - INFO - 获取生成历史请求
2025-07-21 09:53:38,199 - root - INFO - 获取发布历史请求
2025-07-21 09:53:38,204 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:53:38,205 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:53:50,269 - root - INFO - 请求: GET /
2025-07-21 09:53:50,269 - root - INFO - 访问主页面
2025-07-21 09:53:50,270 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:50] "GET / HTTP/1.1" 200 -
2025-07-21 09:53:50,308 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 09:53:50,309 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 09:53:50,310 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:50] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 09:53:50,311 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 09:53:50,311 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:50] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 09:53:50,313 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:50] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 09:53:50,338 - root - INFO - 请求: GET /api/get_ip
2025-07-21 09:53:50,339 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:50] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 09:53:50,339 - root - INFO - 请求: GET /api/style-templates
2025-07-21 09:53:50,340 - root - INFO - 请求: GET /api/config
2025-07-21 09:53:50,340 - root - INFO - 处理配置请求: GET
2025-07-21 09:53:50,340 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 09:53:50,340 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:53:50,342 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 09:53:50,343 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:50] "GET /api/config HTTP/1.1" 200 -
2025-07-21 09:53:50,347 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:50] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 09:53:50,492 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 09:53:50,492 - root - INFO - 获取Gemini可用模型列表
2025-07-21 09:53:50,492 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 09:53:50,493 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:53:50,493 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:53:50,496 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 09:53:50,498 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 09:53:50,499 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:53:50] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 09:53:51,481 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 09:53:51,481 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 09:53:51,482 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 09:54:09,938 - root - INFO - 应用目录创建完成
2025-07-21 09:54:09,938 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 09:54:09,939 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 09:54:09,939 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 09:54:09,939 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 09:54:09,939 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 09:54:09,939 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 09:54:09,939 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 09:54:09,939 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 09:54:09,940 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 09:54:09,940 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 09:54:09,940 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 09:54:09,940 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 09:54:09,940 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 09:54:10,806 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 09:54:10,807 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 09:54:13,200 - root - INFO - 请求: GET /
2025-07-21 09:54:13,200 - root - INFO - 访问主页面
2025-07-21 09:54:13,208 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:54:13] "GET / HTTP/1.1" 200 -
2025-07-21 09:54:13,272 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 09:54:13,280 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 09:54:13,282 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 09:54:13,458 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:54:13] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 09:54:13,461 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:54:13] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 09:54:13,465 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:54:13] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 09:54:13,546 - root - INFO - 请求: GET /api/get_ip
2025-07-21 09:54:13,546 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:54:13] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 09:54:13,560 - root - INFO - 请求: GET /api/style-templates
2025-07-21 09:54:13,564 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:54:13] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 09:54:13,575 - root - INFO - 请求: GET /api/config
2025-07-21 09:54:13,576 - root - INFO - 处理配置请求: GET
2025-07-21 09:54:13,576 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 09:54:13,577 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:54:13,577 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 09:54:13,578 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:54:13] "GET /api/config HTTP/1.1" 200 -
2025-07-21 09:54:13,720 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 09:54:13,720 - root - INFO - 获取Gemini可用模型列表
2025-07-21 09:54:13,720 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 09:54:13,720 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:54:13,721 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:54:13,721 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 09:54:14,821 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 09:54:14,822 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 09:54:14,823 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 09:54:44,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:54:44,186 - root - INFO - 获取生成历史请求
2025-07-21 09:54:44,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:54:44,188 - root - INFO - 获取发布历史请求
2025-07-21 09:54:44,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:54:44] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:54:44,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:54:44] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:55:14,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:55:14,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:55:14,184 - root - INFO - 获取生成历史请求
2025-07-21 09:55:14,184 - root - INFO - 获取发布历史请求
2025-07-21 09:55:14,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:55:14] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:55:14,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:55:14] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:55:44,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:55:44,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:55:44,185 - root - INFO - 获取生成历史请求
2025-07-21 09:55:44,186 - root - INFO - 获取发布历史请求
2025-07-21 09:55:44,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:55:44] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:55:44,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:55:44] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:56:14,175 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:56:14,175 - root - INFO - 获取生成历史请求
2025-07-21 09:56:14,176 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:56:14,176 - root - INFO - 获取发布历史请求
2025-07-21 09:56:14,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:14] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:56:14,177 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:14] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:56:34,418 - root - INFO - 请求: GET /
2025-07-21 09:56:34,418 - root - INFO - 访问主页面
2025-07-21 09:56:34,419 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:34] "GET / HTTP/1.1" 200 -
2025-07-21 09:56:34,456 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 09:56:34,458 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 09:56:34,458 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:34] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 09:56:34,459 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 09:56:34,459 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:34] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 09:56:34,462 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:34] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 09:56:34,489 - root - INFO - 请求: GET /api/get_ip
2025-07-21 09:56:34,490 - root - INFO - 请求: GET /api/style-templates
2025-07-21 09:56:34,490 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:34] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 09:56:34,491 - root - INFO - 请求: GET /api/config
2025-07-21 09:56:34,491 - root - INFO - 处理配置请求: GET
2025-07-21 09:56:34,491 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 09:56:34,491 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:56:34,491 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 09:56:34,492 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:34] "GET /api/config HTTP/1.1" 200 -
2025-07-21 09:56:34,496 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:34] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 09:56:34,627 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 09:56:34,627 - root - INFO - 获取Gemini可用模型列表
2025-07-21 09:56:34,628 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 09:56:34,628 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:56:34,628 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:56:34,629 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 09:56:34,633 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 09:56:34,634 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:34] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 09:56:35,574 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 09:56:35,574 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 09:56:35,575 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 09:56:52,554 - root - INFO - 应用目录创建完成
2025-07-21 09:56:52,554 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 09:56:52,554 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 09:56:52,554 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 09:56:52,555 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 09:56:52,555 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 09:56:52,555 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 09:56:52,555 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 09:56:52,555 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 09:56:52,555 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 09:56:52,555 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 09:56:52,556 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 09:56:52,556 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 09:56:52,556 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 09:56:53,424 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 09:56:53,425 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 09:56:55,286 - root - INFO - 请求: GET /
2025-07-21 09:56:55,286 - root - INFO - 访问主页面
2025-07-21 09:56:55,294 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:55] "GET / HTTP/1.1" 200 -
2025-07-21 09:56:55,355 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 09:56:55,368 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 09:56:55,369 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 09:56:55,511 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:55] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 09:56:55,527 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:55] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 09:56:55,535 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:55] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 09:56:55,612 - root - INFO - 请求: GET /api/get_ip
2025-07-21 09:56:55,613 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:55] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 09:56:55,637 - root - INFO - 请求: GET /api/style-templates
2025-07-21 09:56:55,643 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:55] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 09:56:55,653 - root - INFO - 请求: GET /api/config
2025-07-21 09:56:55,655 - root - INFO - 处理配置请求: GET
2025-07-21 09:56:55,655 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 09:56:55,656 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:56:55,656 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 09:56:55,657 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:56:55] "GET /api/config HTTP/1.1" 200 -
2025-07-21 09:56:55,804 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 09:56:55,804 - root - INFO - 获取Gemini可用模型列表
2025-07-21 09:56:55,804 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 09:56:55,805 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:56:55,805 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 09:56:55,805 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 09:56:56,902 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 09:56:56,903 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 09:56:56,903 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 09:57:26,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:57:26,181 - root - INFO - 获取生成历史请求
2025-07-21 09:57:26,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:57:26,182 - root - INFO - 获取发布历史请求
2025-07-21 09:57:26,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:57:26] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:57:26,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:57:26] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:57:55,653 - root - INFO - 请求: GET /api/generation-history
2025-07-21 09:57:55,653 - root - INFO - 获取生成历史请求
2025-07-21 09:57:55,654 - root - INFO - 请求: GET /api/publish-history
2025-07-21 09:57:55,654 - root - INFO - 获取发布历史请求
2025-07-21 09:57:55,655 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:57:55] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 09:57:55,655 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:57:55] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 09:58:42,138 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 09:58:42,138 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 09:58:42,139 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 09:58:42,139 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 09:58:42] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 10:01:36,176 - root - INFO - 应用目录创建完成
2025-07-21 10:01:36,177 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:01:36,177 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:01:36,177 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:01:36,177 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:01:36,177 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:01:36,178 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:01:36,178 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:01:36,178 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:01:36,178 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:01:36,178 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:01:36,178 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:01:36,178 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:01:36,178 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:01:37,046 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:01:37,046 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:01:38,499 - root - INFO - 请求: GET /
2025-07-21 10:01:38,499 - root - INFO - 访问主页面
2025-07-21 10:01:38,508 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:01:38] "GET / HTTP/1.1" 200 -
2025-07-21 10:01:38,568 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:01:38,570 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:01:38,572 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:01:38,777 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:01:38] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 10:01:38,789 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:01:38] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:01:38,791 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:01:38] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:01:38,864 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:01:38,864 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:01:38] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:01:38,885 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:01:38,891 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:01:38] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:01:38,902 - root - INFO - 请求: GET /api/config
2025-07-21 10:01:38,902 - root - INFO - 处理配置请求: GET
2025-07-21 10:01:38,903 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 10:01:38,903 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 10:01:38,903 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 10:01:38,904 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:01:38] "GET /api/config HTTP/1.1" 200 -
2025-07-21 10:01:39,057 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 10:01:39,058 - root - INFO - 获取Gemini可用模型列表
2025-07-21 10:01:39,058 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 10:01:39,058 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 10:01:39,058 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 10:01:39,058 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 10:01:40,166 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 10:01:40,167 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 10:01:40,167 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 10:02:08,903 - root - INFO - 请求: GET /api/generation-history
2025-07-21 10:02:08,904 - root - INFO - 请求: GET /api/publish-history
2025-07-21 10:02:08,904 - root - INFO - 获取生成历史请求
2025-07-21 10:02:08,904 - root - INFO - 获取发布历史请求
2025-07-21 10:02:08,905 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:02:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 10:02:08,905 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:02:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 10:02:39,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 10:02:39,184 - root - INFO - 获取生成历史请求
2025-07-21 10:02:39,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 10:02:39,184 - root - INFO - 获取发布历史请求
2025-07-21 10:02:39,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:02:39] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 10:02:39,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:02:39] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 10:03:04,357 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 10:03:04,357 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 10:03:04,358 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 10:03:04,358 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:03:04] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 10:03:04,366 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 10:03:04,366 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 10:03:04,366 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 10:03:04,366 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 10:03:04,367 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 10:03:04,367 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 10:03:04,367 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 10:03:04,369 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 10:03:04,471 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 10:03:04,473 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 10:03:04,474 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 10:03:04,475 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 10:03:04,475 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 10:03:04,476 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 10:03:04,477 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 10:03:04,478 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:03:04] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 10:03:04,497 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 10:03:04,498 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 10:03:04,498 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 10:03:04,499 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 10:03:04,499 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 10:03:04,500 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 10:03:04,980 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000008CC62A0>, 'json_data': None}
2025-07-21 10:03:05,012 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 10:03:05,012 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 10:03:05,036 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CD8530>
2025-07-21 10:03:05,036 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008C4FA50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 10:03:05,056 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CD8140>
2025-07-21 10:03:05,056 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 10:03:05,056 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 10:03:05,057 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 10:03:05,057 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 10:03:05,057 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 10:03:05,102 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'5eb9fa87-b271-9779-9f8b-3280de8ce971'), (b'content-type', b'application/json'), (b'req-cost-time', b'32'), (b'req-arrive-time', b'1753063384539'), (b'resp-start-time', b'1753063384571'), (b'x-envoy-upstream-service-time', b'31'), (b'set-cookie', b'acw_tc=5eb9fa87-b271-9779-9f8b-3280de8ce97168df374753615bc01da9450a99adc3cc;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 02:03:04 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 10:03:05,103 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 10:03:05,103 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 10:03:05,104 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 10:03:05,104 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 10:03:05,104 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 10:03:05,104 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '5eb9fa87-b271-9779-9f8b-3280de8ce971', 'content-type': 'application/json', 'req-cost-time': '32', 'req-arrive-time': '1753063384539', 'resp-start-time': '1753063384571', 'x-envoy-upstream-service-time': '31', 'set-cookie': 'acw_tc=5eb9fa87-b271-9779-9f8b-3280de8ce97168df374753615bc01da9450a99adc3cc;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 02:03:04 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 10:03:05,104 - openai._base_client - DEBUG - request_id: 5eb9fa87-b271-9779-9f8b-3280de8ce971
2025-07-21 10:03:05,107 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 10:03:05,108 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 10:03:05,108 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 10:03:05,108 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 10:03:05,108 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 10:03:05,108 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 10:03:05,109 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 10:03:05,109 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:03:05] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 10:03:05,117 - root - INFO - 请求: GET /api/generation-history
2025-07-21 10:03:05,117 - root - INFO - 获取生成历史请求
2025-07-21 10:03:05,118 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:03:05] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 10:03:05,125 - root - INFO - 请求: GET /api/publish-history
2025-07-21 10:03:05,126 - root - INFO - 获取发布历史请求
2025-07-21 10:03:05,126 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:03:05] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 10:03:09,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 10:03:09,179 - root - INFO - 获取生成历史请求
2025-07-21 10:03:09,180 - root - INFO - 请求: GET /api/publish-history
2025-07-21 10:03:09,180 - root - INFO - 获取发布历史请求
2025-07-21 10:03:09,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:03:09] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 10:03:09,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:03:09] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 10:06:34,286 - root - INFO - 应用目录创建完成
2025-07-21 10:06:34,287 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:06:34,287 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:06:34,287 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:06:34,287 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:06:34,287 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:06:34,287 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:06:34,287 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:06:34,287 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:06:34,287 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:06:34,287 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:06:34,287 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:06:34,289 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:06:34,289 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:06:35,164 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:06:35,165 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:06:37,666 - root - INFO - 请求: GET /
2025-07-21 10:06:37,666 - root - INFO - 访问主页面
2025-07-21 10:06:37,676 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:06:37] "GET / HTTP/1.1" 200 -
2025-07-21 10:06:37,753 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:06:37,764 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:06:37,765 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:06:37,934 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:06:37] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:06:37,945 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:06:37] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:06:37,948 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:06:37] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 10:06:38,447 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:06:38,447 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:06:38] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:06:38,447 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:06:38,452 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:06:38] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:13:00,579 - root - INFO - 应用目录创建完成
2025-07-21 10:13:00,580 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:13:00,580 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:13:00,581 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:13:00,581 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:13:00,581 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:13:00,581 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:13:00,581 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:13:00,581 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:13:00,581 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:13:00,581 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:13:00,581 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:13:00,582 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:13:00,582 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:13:01,463 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:13:01,464 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:13:03,995 - root - INFO - 请求: GET /
2025-07-21 10:13:03,995 - root - INFO - 访问主页面
2025-07-21 10:13:04,004 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:13:04] "GET / HTTP/1.1" 200 -
2025-07-21 10:13:04,081 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:13:04,084 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:13:04,085 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:13:04,272 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:13:04] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 10:13:04,293 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:13:04] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:13:04,297 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:13:04] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:13:04,376 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:13:04,376 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:13:04] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:13:04,399 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:13:04,403 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:13:04] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:14:36,530 - root - INFO - 应用目录创建完成
2025-07-21 10:14:36,531 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:14:36,531 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:14:36,531 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:14:36,531 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:14:36,531 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:14:36,531 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:14:36,532 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:14:36,532 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:14:36,532 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:14:36,533 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:14:36,533 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:14:36,533 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:14:36,533 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:14:37,404 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:14:37,405 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:14:40,532 - root - INFO - 请求: GET /
2025-07-21 10:14:40,532 - root - INFO - 访问主页面
2025-07-21 10:14:40,540 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:14:40] "GET / HTTP/1.1" 200 -
2025-07-21 10:14:40,600 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:14:40,611 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:14:40,612 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:14:40,763 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:14:40] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:14:40,778 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:14:40] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:14:40,780 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:14:40] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:14:40,868 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:14:40,868 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:14:40] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:14:40,869 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:14:40,877 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:14:40] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:15:13,259 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:15:13,260 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:15:13] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:15:13,260 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:15:13,261 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:15:13] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:16:57,400 - root - INFO - 应用目录创建完成
2025-07-21 10:16:57,400 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:16:57,401 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:16:57,401 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:16:57,401 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:16:57,401 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:16:57,401 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:16:57,402 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:16:57,402 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:16:57,402 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:16:57,402 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:16:57,402 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:16:57,403 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:16:57,403 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:16:58,277 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:16:58,277 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:16:59,707 - root - INFO - 请求: GET /
2025-07-21 10:16:59,707 - root - INFO - 访问主页面
2025-07-21 10:16:59,715 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:16:59] "GET / HTTP/1.1" 200 -
2025-07-21 10:16:59,780 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:16:59,788 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:16:59,789 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:16:59,938 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:16:59] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:16:59,949 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:16:59] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:16:59,959 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:16:59] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:17:00,036 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:17:00,037 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:17:00] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:17:00,038 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:17:00,043 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:17:00] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:26:13,588 - root - INFO - 应用目录创建完成
2025-07-21 10:26:13,588 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:26:13,589 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:26:13,589 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:26:13,589 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:26:13,589 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:26:13,589 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:26:13,589 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:26:13,590 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:26:13,590 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:26:13,590 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:26:13,590 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:26:13,590 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:26:13,590 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:26:14,460 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:26:14,461 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:26:16,677 - root - INFO - 请求: GET /
2025-07-21 10:26:16,677 - root - INFO - 访问主页面
2025-07-21 10:26:16,686 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:26:16] "GET / HTTP/1.1" 200 -
2025-07-21 10:26:16,765 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:26:16,767 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:26:16,768 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:26:16,984 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:26:16] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:26:16,993 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:26:16] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:26:16,994 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:26:16] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:26:17,104 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:26:17,105 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:26:17] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:26:17,105 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:26:17,111 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:26:17] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:27:29,289 - root - INFO - 请求: GET /
2025-07-21 10:27:29,289 - root - INFO - 访问主页面
2025-07-21 10:27:29,290 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:27:29] "GET / HTTP/1.1" 200 -
2025-07-21 10:27:29,330 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:27:29,332 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:27:29] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:27:29,332 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:27:29,333 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:27:29,334 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:27:29] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:27:29,337 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:27:29] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 10:27:29,377 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:27:29,378 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:27:29] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:27:29,378 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:27:29,383 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:27:29] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:27:29,448 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:27:29,449 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:27:29] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:30:43,116 - root - INFO - 请求: GET /
2025-07-21 10:30:43,116 - root - INFO - 访问主页面
2025-07-21 10:30:43,117 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:30:43] "GET / HTTP/1.1" 200 -
2025-07-21 10:30:43,151 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:30:43,152 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:30:43,152 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:30:43] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:30:43,154 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:30:43,155 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:30:43] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:30:43,156 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:30:43] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:30:43,186 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:30:43,186 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:30:43,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:30:43] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:30:43,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:30:43] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:30:43,339 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:30:43,340 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:30:43] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:31:01,384 - root - INFO - 应用目录创建完成
2025-07-21 10:31:01,385 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:31:01,385 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:31:01,385 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:31:01,385 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:31:01,386 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:31:01,386 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:31:01,386 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:31:01,386 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:31:01,386 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:31:01,387 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:31:01,387 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:31:01,387 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:31:01,387 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:31:02,254 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:31:02,254 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:31:03,770 - root - INFO - 请求: GET /
2025-07-21 10:31:03,770 - root - INFO - 访问主页面
2025-07-21 10:31:03,781 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:31:03] "GET / HTTP/1.1" 200 -
2025-07-21 10:31:03,853 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:31:03,857 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:31:03,858 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:31:04,028 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:31:04] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:31:04,047 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:31:04] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:31:04,051 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:31:04] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:31:04,135 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:31:04,135 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:31:04] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:31:04,136 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:31:04,142 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:31:04] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:37:52,177 - root - INFO - 应用目录创建完成
2025-07-21 10:37:52,178 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:37:52,178 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:37:52,178 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:37:52,178 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:37:52,178 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:37:52,178 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:37:52,178 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:37:52,179 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:37:52,179 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:37:52,179 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:37:52,179 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:37:52,179 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:37:52,179 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:37:53,051 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:37:53,052 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:37:55,557 - root - INFO - 请求: GET /
2025-07-21 10:37:55,558 - root - INFO - 访问主页面
2025-07-21 10:37:55,566 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:37:55] "GET / HTTP/1.1" 200 -
2025-07-21 10:37:55,625 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:37:55,637 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:37:55,638 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:37:55,814 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:37:55] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:37:55,825 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:37:55] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:37:55,832 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:37:55] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:37:55,916 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:37:55,917 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:37:55,917 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:37:55] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:37:55,925 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:37:55] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:39:51,286 - root - INFO - 应用目录创建完成
2025-07-21 10:39:51,973 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:39:51,974 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:39:51,974 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:39:51,974 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:39:51,975 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:39:51,975 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:39:51,975 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:39:51,976 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:39:51,976 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:39:51,976 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:39:51,976 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:39:51,976 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:39:51,977 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:39:52,865 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:39:52,865 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:39:54,520 - root - INFO - 请求: GET /
2025-07-21 10:39:54,520 - root - INFO - 访问主页面
2025-07-21 10:39:54,530 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:39:54] "GET / HTTP/1.1" 200 -
2025-07-21 10:39:54,593 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:39:54,605 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:39:54,606 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:39:54,769 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:39:54] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:39:54,775 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:39:54] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:39:54,778 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:39:54] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:39:54,847 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:39:54,848 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:39:54] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:39:54,865 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:39:54,872 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:39:54] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:42:05,234 - root - INFO - 应用目录创建完成
2025-07-21 10:42:05,234 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:42:05,234 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:42:05,235 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:42:05,235 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:42:05,235 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:42:05,235 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:42:05,235 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:42:05,236 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:42:05,236 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:42:05,236 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:42:05,236 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:42:05,237 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:42:05,237 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:42:06,105 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:42:06,158 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:42:08,260 - root - INFO - 请求: GET /
2025-07-21 10:42:08,260 - root - INFO - 访问主页面
2025-07-21 10:42:08,268 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:42:08] "GET / HTTP/1.1" 200 -
2025-07-21 10:42:08,327 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:42:08,342 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:42:08,343 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:42:08,478 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:42:08] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:42:08,506 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:42:08] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:42:08,507 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:42:08] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:42:08,583 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:42:08,583 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:42:08] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:42:08,602 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:42:08,608 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:42:08] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:43:51,113 - root - INFO - 应用目录创建完成
2025-07-21 10:43:51,113 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:43:51,113 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:43:51,113 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:43:51,113 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:43:51,113 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:43:51,114 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:43:51,114 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:43:51,114 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:43:51,114 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:43:51,114 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:43:51,114 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:43:51,114 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:43:51,114 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:43:51,988 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:43:51,989 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:43:53,036 - root - INFO - 请求: GET /
2025-07-21 10:43:53,037 - root - INFO - 访问主页面
2025-07-21 10:43:53,046 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:43:53] "GET / HTTP/1.1" 200 -
2025-07-21 10:43:53,116 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:43:53,128 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:43:53,129 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:43:53,295 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:43:53] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:43:53,299 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:43:53] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:43:53,302 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:43:53] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:43:53,385 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:43:53,386 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:43:53] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:43:53,407 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:43:53,413 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:43:53] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:44:09,603 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:44:09,605 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:44:09] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:44:09,606 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:44:09,607 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:44:09] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:45:30,982 - root - INFO - 请求: GET /
2025-07-21 10:45:30,983 - root - INFO - 访问主页面
2025-07-21 10:45:30,984 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:30] "GET / HTTP/1.1" 200 -
2025-07-21 10:45:31,041 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:45:31,042 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:31] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:45:31,043 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:45:31,045 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:45:31,047 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:31] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:45:31,048 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:31] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:45:31,146 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:45:31,146 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:31] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:45:31,148 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:45:31,153 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:31] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:45:31,329 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:45:31,331 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:31] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:45:33,047 - root - INFO - 请求: GET /
2025-07-21 10:45:33,048 - root - INFO - 访问主页面
2025-07-21 10:45:33,048 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:33] "GET / HTTP/1.1" 200 -
2025-07-21 10:45:33,124 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:45:33,137 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:33] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:45:33,139 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:45:33,142 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:45:33,146 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:33] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:45:33,147 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:33] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:45:33,212 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:45:33,212 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:45:33,212 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:33] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:45:33,218 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:33] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:45:33,435 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:45:33,437 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:33] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:45:34,201 - root - INFO - 请求: GET /
2025-07-21 10:45:34,202 - root - INFO - 访问主页面
2025-07-21 10:45:34,202 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:34] "GET / HTTP/1.1" 200 -
2025-07-21 10:45:34,243 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:45:34,244 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:34] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:45:34,245 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:45:34,246 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:45:34,247 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:34] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:45:34,249 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:34] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:45:34,294 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:45:34,294 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:34] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:45:34,295 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:45:34,299 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:34] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:45:34,553 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:45:34,554 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:45:34] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:46:39,138 - root - INFO - 请求: GET /
2025-07-21 10:46:39,138 - root - INFO - 访问主页面
2025-07-21 10:46:39,139 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:39] "GET / HTTP/1.1" 200 -
2025-07-21 10:46:39,181 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:46:39,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:39] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:46:39,184 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:46:39,185 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:46:39,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:39] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:46:39,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:39] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:46:39,273 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:46:39,274 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:39] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:46:39,280 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:46:39,283 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:39] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:46:39,544 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:46:39,545 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:39] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:46:42,700 - root - INFO - 请求: GET /
2025-07-21 10:46:42,700 - root - INFO - 访问主页面
2025-07-21 10:46:42,701 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:42] "GET / HTTP/1.1" 200 -
2025-07-21 10:46:42,733 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:46:42,734 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:42] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:46:42,740 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:46:42,741 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:46:42,742 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:42] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:46:42,742 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:42] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:46:42,764 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:46:42,765 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:42] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:46:42,765 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:46:42,770 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:42] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:46:42,904 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:46:42,905 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:46:42] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:47:37,158 - root - INFO - 应用目录创建完成
2025-07-21 10:47:37,159 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:47:37,159 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:47:37,159 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:47:37,159 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:47:37,159 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:47:37,159 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:47:37,159 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:47:37,159 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:47:37,159 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:47:37,160 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:47:37,160 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:47:37,160 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:47:37,160 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:47:38,046 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:47:38,047 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:47:39,265 - root - INFO - 请求: GET /
2025-07-21 10:47:39,265 - root - INFO - 访问主页面
2025-07-21 10:47:39,275 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:47:39] "GET / HTTP/1.1" 200 -
2025-07-21 10:47:39,342 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:47:39,357 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:47:39,358 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:47:39,497 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:47:39] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:47:39,526 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:47:39] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:47:39,527 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:47:39] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:47:39,618 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:47:39,619 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:47:39] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:47:39,619 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:47:39,627 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:47:39] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:47:45,198 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:47:45,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:47:45] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:47:45,200 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:47:45,201 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:47:45] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:51:02,050 - root - INFO - 应用目录创建完成
2025-07-21 10:51:02,050 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:51:02,050 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:51:02,050 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:51:02,050 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:51:02,050 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:51:02,050 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:51:02,050 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:51:02,051 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:51:02,051 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:51:02,051 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:51:02,051 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:51:02,051 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:51:02,052 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:51:02,923 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:51:02,923 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:51:05,198 - root - INFO - 请求: GET /
2025-07-21 10:51:05,198 - root - INFO - 访问主页面
2025-07-21 10:51:05,210 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:05] "GET / HTTP/1.1" 200 -
2025-07-21 10:51:05,283 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:51:05,285 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:51:05,286 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:51:05,474 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:05] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:51:05,479 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:05] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:51:05,481 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:05] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:51:05,564 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:51:05,564 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:05] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:51:05,583 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:51:05,588 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:05] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:51:08,515 - root - INFO - 请求: GET /
2025-07-21 10:51:08,515 - root - INFO - 访问主页面
2025-07-21 10:51:08,516 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:08] "GET / HTTP/1.1" 200 -
2025-07-21 10:51:08,545 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:51:08,546 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:08] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:51:08,547 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:51:08,548 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:51:08,551 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:08] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:51:08,551 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:08] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:51:08,570 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:51:08,570 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:08] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:51:08,570 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:51:08,576 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:08] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:51:08,654 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:51:08,655 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:51:08] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:53:46,336 - root - INFO - 应用目录创建完成
2025-07-21 10:53:46,336 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:53:46,336 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:53:46,336 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:53:46,336 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:53:46,336 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:53:46,337 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:53:46,337 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:53:46,337 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:53:46,337 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:53:46,337 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:53:46,337 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:53:46,337 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:53:46,337 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:53:47,201 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:53:47,201 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:53:48,280 - root - INFO - 请求: GET /
2025-07-21 10:53:48,280 - root - INFO - 访问主页面
2025-07-21 10:53:48,287 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:48] "GET / HTTP/1.1" 200 -
2025-07-21 10:53:48,348 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:53:48,358 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:53:48,360 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:53:48,520 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:48] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:53:48,526 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:48] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:53:48,528 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:48] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:53:48,621 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:53:48,623 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:48] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:53:48,632 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:53:48,637 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:48] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:53:51,478 - root - INFO - 请求: GET /
2025-07-21 10:53:51,478 - root - INFO - 访问主页面
2025-07-21 10:53:51,479 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:51] "GET / HTTP/1.1" 200 -
2025-07-21 10:53:51,515 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:53:51,516 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:51] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:53:51,517 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:53:51,518 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:53:51,519 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:51] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:53:51,519 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:51] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:53:51,536 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:53:51,537 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:53:51,537 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:51] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:53:51,541 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:51] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:53:51,600 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:53:51,601 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:51] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:53:52,093 - root - INFO - 请求: GET /
2025-07-21 10:53:52,093 - root - INFO - 访问主页面
2025-07-21 10:53:52,094 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:52] "GET / HTTP/1.1" 200 -
2025-07-21 10:53:52,122 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:53:52,123 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:53:52,124 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:52] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:53:52,125 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:53:52,125 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:52] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:53:52,127 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:52] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:53:52,144 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:53:52,145 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:52] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:53:52,145 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:53:52,149 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:52] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:53:52,211 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:53:52,212 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:53:52] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 10:55:13,829 - root - INFO - 应用目录创建完成
2025-07-21 10:55:13,830 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:55:13,830 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:55:13,830 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:55:13,830 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:55:13,830 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:55:13,830 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:55:13,831 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:55:13,831 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:55:13,831 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:55:13,831 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:55:13,831 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:55:13,831 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:55:13,831 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:55:14,703 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:55:14,704 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:55:16,241 - root - INFO - 请求: GET /
2025-07-21 10:55:16,242 - root - INFO - 访问主页面
2025-07-21 10:55:16,252 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:55:16] "GET / HTTP/1.1" 200 -
2025-07-21 10:55:16,307 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:55:16,322 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:55:16,323 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:55:16,458 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:55:16] "GET /static/css/layout.css HTTP/1.1" 200 -
2025-07-21 10:55:16,487 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:55:16] "GET /static/css/components.css HTTP/1.1" 200 -
2025-07-21 10:55:16,487 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:55:16] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 10:55:16,884 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:55:16,884 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:55:16] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:55:16,892 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:55:16,899 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:55:16] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:55:18,244 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 10:55:18,245 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:55:18] "GET /static/favicon.ico HTTP/1.1" 200 -
2025-07-21 10:58:07,774 - root - INFO - 应用目录创建完成
2025-07-21 10:58:07,774 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:58:07,774 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:58:07,775 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:58:07,775 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:58:07,775 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:58:07,775 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:58:07,775 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:58:07,775 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:58:07,775 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:58:07,776 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:58:07,776 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:58:07,776 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:58:07,776 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:58:08,652 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:58:08,653 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:58:09,953 - root - INFO - 请求: GET /
2025-07-21 10:58:09,954 - root - INFO - 访问主页面
2025-07-21 10:58:09,961 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:58:09] "GET / HTTP/1.1" 200 -
2025-07-21 10:58:10,020 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:58:10,022 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:58:10,024 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:58:10,218 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:58:10] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:58:10,224 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:58:10] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:58:10,225 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:58:10] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:58:10,321 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:58:10,321 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:58:10,322 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:58:10] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:58:10,329 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:58:10] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 10:59:22,163 - root - INFO - 应用目录创建完成
2025-07-21 10:59:22,164 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:59:22,164 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:59:22,164 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:59:22,164 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:59:22,164 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 10:59:22,165 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 10:59:22,165 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 10:59:22,165 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 10:59:22,165 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 10:59:22,165 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 10:59:22,165 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 10:59:22,165 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 10:59:22,166 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 10:59:23,038 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 10:59:23,038 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 10:59:25,079 - root - INFO - 请求: GET /
2025-07-21 10:59:25,079 - root - INFO - 访问主页面
2025-07-21 10:59:25,090 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:59:25] "GET / HTTP/1.1" 200 -
2025-07-21 10:59:25,156 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 10:59:25,165 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 10:59:25,166 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 10:59:25,316 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:59:25] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 10:59:25,333 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:59:25] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 10:59:25,336 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:59:25] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 10:59:25,411 - root - INFO - 请求: GET /api/get_ip
2025-07-21 10:59:25,412 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:59:25] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 10:59:25,427 - root - INFO - 请求: GET /api/style-templates
2025-07-21 10:59:25,433 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 10:59:25] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:17:56,691 - root - INFO - 应用目录创建完成
2025-07-21 11:17:56,692 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:17:56,692 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:17:56,692 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:17:56,692 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:17:56,692 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 11:17:56,693 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:17:56,693 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:17:56,693 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:17:56,693 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 11:17:56,693 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:17:56,693 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 11:17:56,693 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 11:17:56,693 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 11:17:57,568 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 11:17:57,572 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 11:17:59,139 - root - INFO - 请求: GET /
2025-07-21 11:17:59,139 - root - INFO - 访问主页面
2025-07-21 11:17:59,150 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:17:59] "GET / HTTP/1.1" 200 -
2025-07-21 11:17:59,221 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:17:59,229 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:17:59,232 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:17:59,418 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:17:59] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:17:59,425 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:17:59] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:17:59,429 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:17:59] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:17:59,517 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:17:59,517 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:17:59] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:17:59,527 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:17:59,531 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:17:59] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:18:31,323 - root - INFO - 请求: GET /
2025-07-21 11:18:31,323 - root - INFO - 访问主页面
2025-07-21 11:18:31,323 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:31] "GET / HTTP/1.1" 200 -
2025-07-21 11:18:31,352 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:18:31,353 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:31] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:18:31,354 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:18:31,354 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:18:31,355 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:31] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:18:31,357 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:31] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:18:31,401 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:18:31,401 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:31] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:18:31,402 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:18:31,406 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:31] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:18:31,461 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 11:18:31,462 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:31] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 11:18:32,050 - root - INFO - 请求: GET /
2025-07-21 11:18:32,050 - root - INFO - 访问主页面
2025-07-21 11:18:32,051 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:32] "GET / HTTP/1.1" 200 -
2025-07-21 11:18:32,078 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:18:32,079 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:18:32,080 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:32] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:18:32,080 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:18:32,081 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:32] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:18:32,082 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:32] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:18:32,098 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:18:32,099 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:32] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:18:32,099 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:18:32,102 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:32] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:18:32,159 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 11:18:32,419 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:32] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 11:18:46,820 - root - INFO - 请求: GET /
2025-07-21 11:18:46,820 - root - INFO - 访问主页面
2025-07-21 11:18:46,821 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:46] "GET / HTTP/1.1" 200 -
2025-07-21 11:18:46,873 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:18:46,875 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:18:46,876 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:46] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:18:46,877 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:18:46,878 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:46] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:18:46,879 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:46] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:18:47,049 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:18:47,050 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:47] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:18:47,051 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:18:47,056 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:18:47] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:19:19,312 - root - INFO - 应用目录创建完成
2025-07-21 11:19:19,312 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:19:19,312 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:19:19,312 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:19:19,312 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:19:19,312 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 11:19:19,313 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:19:19,313 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:19:19,313 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:19:19,313 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 11:19:19,313 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:19:19,314 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 11:19:19,314 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 11:19:19,314 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 11:19:20,181 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 11:19:20,182 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 11:19:24,904 - root - INFO - 请求: GET /
2025-07-21 11:19:24,904 - root - INFO - 访问主页面
2025-07-21 11:19:24,913 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:19:24] "GET / HTTP/1.1" 200 -
2025-07-21 11:19:24,974 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:19:24,983 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:19:24,983 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:19:25,139 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:19:25] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:19:25,148 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:19:25] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:19:25,151 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:19:25] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:19:25,226 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:19:25,227 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:19:25] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:19:25,244 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:19:25,250 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:19:25] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:22:18,479 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:22:18,480 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:22:18] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:22:18,481 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:22:18,483 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:22:18] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:22:22,442 - root - INFO - 请求: GET /
2025-07-21 11:22:22,442 - root - INFO - 访问主页面
2025-07-21 11:22:22,443 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:22:22] "GET / HTTP/1.1" 200 -
2025-07-21 11:22:22,491 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:22:22,492 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:22:22] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:22:22,492 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:22:22,493 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:22:22,494 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:22:22] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:22:22,498 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:22:22] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:22:22,569 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:22:22,569 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:22:22] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:22:22,576 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:22:22,581 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:22:22] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:22:22,813 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 11:22:22,815 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:22:22] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 11:23:55,740 - root - INFO - 请求: GET /api/get-latest-cache-file
2025-07-21 11:23:56,484 - root - INFO - 获取最新缓存文件: article_cleaned_通报杭州臭味自来水不是粪水_20250719_170625.html
2025-07-21 11:23:56,484 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:23:56] "GET /api/get-latest-cache-file HTTP/1.1" 200 -
2025-07-21 11:23:56,510 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图1_20250719_170557.jpg
2025-07-21 11:23:56,511 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图1_20250719_170557.jpg
2025-07-21 11:23:56,511 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图2_20250719_170600.jpg
2025-07-21 11:23:56,512 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图2_20250719_170600.jpg
2025-07-21 11:23:56,513 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图3_20250719_170604.jpg
2025-07-21 11:23:56,514 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图3_20250719_170604.jpg
2025-07-21 11:23:56,552 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图4_20250719_170607.jpg
2025-07-21 11:23:56,553 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图4_20250719_170607.jpg
2025-07-21 11:23:56,554 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图5_20250719_170611.jpg
2025-07-21 11:23:56,555 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图6_20250719_170615.jpg
2025-07-21 11:23:56,555 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图5_20250719_170611.jpg
2025-07-21 11:23:56,555 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图6_20250719_170615.jpg
2025-07-21 11:23:56,575 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:23:56] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图2_20250719_170600.jpg HTTP/1.1" 200 -
2025-07-21 11:23:56,583 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:23:56] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图5_20250719_170611.jpg HTTP/1.1" 200 -
2025-07-21 11:23:56,589 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:23:56] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图4_20250719_170607.jpg HTTP/1.1" 200 -
2025-07-21 11:23:56,599 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:23:56] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图3_20250719_170604.jpg HTTP/1.1" 200 -
2025-07-21 11:23:56,601 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:23:56] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图6_20250719_170615.jpg HTTP/1.1" 200 -
2025-07-21 11:23:56,606 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图7_20250719_170620.jpg
2025-07-21 11:23:56,607 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图7_20250719_170620.jpg
2025-07-21 11:23:56,617 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图8_20250719_170623.jpg
2025-07-21 11:23:56,617 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图8_20250719_170623.jpg
2025-07-21 11:23:56,637 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:23:56] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图7_20250719_170620.jpg HTTP/1.1" 200 -
2025-07-21 11:23:56,666 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:23:56] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图1_20250719_170557.jpg HTTP/1.1" 200 -
2025-07-21 11:23:56,668 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:23:56] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图8_20250719_170623.jpg HTTP/1.1" 200 -
2025-07-21 11:26:35,865 - root - INFO - 请求: GET /
2025-07-21 11:26:35,865 - root - INFO - 访问主页面
2025-07-21 11:26:35,866 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:26:35] "GET / HTTP/1.1" 200 -
2025-07-21 11:26:35,912 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:26:35,913 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:26:35] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:26:35,914 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:26:35,916 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:26:35,918 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:26:35] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:26:35,919 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:26:35] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:26:35,969 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:26:35,970 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:26:35] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:26:35,970 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:26:35,976 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:26:35] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:26:36,111 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 11:26:36,112 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:26:36] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 11:28:14,751 - root - INFO - 应用目录创建完成
2025-07-21 11:28:14,752 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:28:14,752 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:28:14,752 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:28:14,752 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:28:14,752 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 11:28:14,752 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:28:14,752 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:28:14,752 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:28:14,752 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 11:28:14,753 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:28:14,753 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 11:28:14,753 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 11:28:14,753 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 11:28:15,617 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 11:28:15,617 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 11:28:17,881 - root - INFO - 请求: GET /
2025-07-21 11:28:17,881 - root - INFO - 访问主页面
2025-07-21 11:28:17,891 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:17] "GET / HTTP/1.1" 200 -
2025-07-21 11:28:17,931 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:28:17,939 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:28:17,941 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:28:18,117 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:18] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:28:18,124 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:18] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:28:18,125 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:18] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 11:28:18,224 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:28:18,225 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:18] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:28:18,225 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:28:18,234 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:18] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:28:18,246 - root - INFO - 请求: GET /api/config
2025-07-21 11:28:18,247 - root - INFO - 处理配置请求: GET
2025-07-21 11:28:18,247 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 11:28:18,247 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:28:18,247 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 11:28:18,248 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:18] "GET /api/config HTTP/1.1" 200 -
2025-07-21 11:28:18,421 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 11:28:18,421 - root - INFO - 获取Gemini可用模型列表
2025-07-21 11:28:18,422 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 11:28:18,422 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:28:18,423 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:28:18,423 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 11:28:19,561 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 11:28:19,561 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 11:28:19,562 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 11:28:30,916 - root - INFO - 请求: POST /api/test-wechat
2025-07-21 11:28:30,916 - root - INFO - 测试微信API连接
2025-07-21 11:28:30,916 - controllers.config_controller - INFO - 开始测试微信API连接
2025-07-21 11:28:30,917 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:28:30,917 - controllers.config_controller - INFO - 当前完整配置: {'wechat_appid': 'wx913534d3189f509f', 'wechat_appsecret': 'b2113edc5d34472868e00d0ef911538f', 'gemini_api_key': 'AIzaSyDBbZXB_JnMyTM9QrgOVKpQXgWnjWuvPCA', 'gemini_model': 'gemini-2.5-flash', 'deepseek_api_key': 'sk-613adfa937b5410194b9e70d74b49c94', 'deepseek_model': 'deepseek-chat', 'dashscope_api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'dashscope_model': 'qwen-plus', 'pexels_api_key': 'b549oSd16vnulqwF3kAokUjew9JotgM1tyC9Y1bbSavyHneEBkxBd2vr', 'coze_token': 'pat_2h2zwNvgQ8Bo5NqZw3d1iDC79eAfRI0CAxq3auVOGDSsBP27GklziopZ8NoVAlpr', 'image_model': 'gemini', 'author': 'AI笔记', 'content_source_url': '', 'created_at': '2025-07-14 17:30:07', 'updated_at': '2025-07-19 17:03:44', 'coze_workflow_id': '7526742102417915919', 'wechat_access_token': '94_o0p-PUX9d2A5JNhVXCZ89upUeSc8WorzXWXCVY82UhTotvUjkkBgojFiTtwviF0LrbqN2iT0i39-6Xugques6KSn2Eaibtz2H5cmWzveUvqcN0H9IC_wmVAh3cwZLUgACAMYH', 'wechat_access_token_expires_in': 7200, 'wechat_access_token_expire_time': 1752923024, 'wechat_access_token_expire_time_str': '2025-07-19 19:03:44', 'wechat_access_token_update_time': '2025-07-19 17:03:44'}
2025-07-21 11:28:30,917 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:28:30,918 - controllers.config_controller - INFO - 微信配置: appid=wx913534d3..., appsecret=已设置
2025-07-21 11:28:30,918 - services.wechat_service - INFO - 开始获取access_token，AppID: wx913534d3189f509f
2025-07-21 11:28:30,921 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 11:28:31,999 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "GET /cgi-bin/token?grant_type=client_credential&appid=wx913534d3189f509f&secret=b2113edc5d34472868e00d0ef911538f HTTP/1.1" 200 173
2025-07-21 11:28:32,001 - services.wechat_service - INFO - access_token获取成功，有效期: 7200秒
2025-07-21 11:28:32,002 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:28:32,052 - services.config_service - INFO - 配置保存成功
2025-07-21 11:28:32,053 - controllers.config_controller - INFO - 微信API连接测试成功，access_token已保存到配置
2025-07-21 11:28:32,054 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:32] "POST /api/test-wechat HTTP/1.1" 200 -
2025-07-21 11:28:49,193 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:28:49,194 - root - INFO - 获取生成历史请求
2025-07-21 11:28:49,195 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:28:49,195 - root - INFO - 获取发布历史请求
2025-07-21 11:28:49,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:28:49,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:28:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:29:18,257 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:29:18,257 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:29:18,257 - root - INFO - 获取生成历史请求
2025-07-21 11:29:18,257 - root - INFO - 获取发布历史请求
2025-07-21 11:29:18,258 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:29:18] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:29:18,259 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:29:18] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:29:35,512 - root - INFO - 请求: POST /api/generate-article
2025-07-21 11:29:35,512 - root - INFO - 生成文章请求
2025-07-21 11:29:35,512 - controllers.article_controller - INFO - 【唯一请求ID】e74a8ade-56d1-4643-99e1-e9b3e87b8bcf - generate_article
2025-07-21 11:29:35,513 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '美IT公司高管演唱会上搂抱同事', 'word_count': 8000, 'image_count': 3, 'format_template': '<!-- 0. 文章通用外层容器（AI可用于包裹整篇文章） -->\n<!-- AI可自行决定是否需要一个统一的根容器，例如： -->\n<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;">\n\n\n\n    <!-- 2. 空行占位符 (AI可根据需要添加多个以创建间距) -->\n    <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n\n    <!-- 3. 普通文本内容区块 (有左右内边距，行高2，默认字体颜色) -->\n    <!-- AI可在此区块内放置多段内容，包括普通文本、强调文本和提示信息。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的普通段落内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 48, 48); line-height: 2; font-style: normal; font-weight: 400; text-align: justify; font-size: 16px; box-sizing: border-box;">\n        <span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;"><strong style="box-sizing: border-box;">AI生成的红色强调文本，如金句。</strong></span>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n    </section>\n\n    <!-- 4. 带左侧小图和标题的章节区块（图片有左侧位移效果） -->\n    <!-- AI可复用此结构作为文章新章节的开头。 -->\n    <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(18px, 0px, 0px); box-sizing: border-box;">\n      <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 35%; height: auto; box-sizing: border-box;">\n      </section>\n    </section>\n    <section style="font-size: 24px; color: rgb(62, 62, 62); padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，上半句，模拟H2</span></strong></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，下半句，模拟H2</span></strong></p>\n    </section>\n\n    <!-- 5. 带有编号的列表项区块 (文本居中编号 + 普通段落，有左右内边距) -->\n    <!-- AI可复用此结构来展示多条编号内容，如洞察、事实。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">01.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第一段内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">02.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第二段内容，可包含<strong style="box-sizing: border-box;"><span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;">红色强调文本</span></strong>。</p>\n    </section>\n\n    <!-- 6. 图片来源/说明区块 (小字，左右内边距) -->\n    <section style="margin-top: 0px; margin-bottom: 0px; box-sizing: border-box;">\n      <section style="margin: 0px; box-sizing: border-box;">\n        <section style="font-size: 13px; color: rgb(136, 136, 136); padding: 0px 13px; box-sizing: border-box;">\n          <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的图片来源或说明文字。</p>\n        </section>\n      </section>\n    </section>\n\n    <!-- 7. 浅灰色背景的通用分割线/内容区块 (宽度92%，居中，有特定背景色和内边距) -->\n    <!-- AI可复用此结构作为文章中的视觉分隔，或放置提示信息、作者信息等。 -->\n    <section style="margin: 0px; text-align: center; box-sizing: border-box;">\n      <section style="border-top: 0.1em solid rgba(0, 0, 0, 0); border-bottom: 0.1em solid rgba(0, 0, 0, 0); transform: rotate(0deg); width: 92%; display: inline-block; background-color: rgba(136, 136, 136, 0.08); height: auto; padding: 15px 5px; box-sizing: border-box;">\n        \n        <!-- 7.1 内部左侧小图区块 (小图有左侧位移) -->\n        <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(15px, 0px, 0px); box-sizing: border-box;">\n          <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 20%; height: auto; box-sizing: border-box;">\n          </section>\n        </section>\n\n        <!-- 7.2 内部缩放图片区块 (如横向装饰线) -->\n        <section style="transform: scale(0.9); transform-origin: center center; margin-top: -1px; margin-bottom: -1px; box-sizing: border-box;">\n          <section style="text-align: center; margin-top: 10px; margin-bottom: 10px; line-height: 0; box-sizing: border-box;">\n            <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; box-sizing: border-box;">\n            </section>\n          </section>\n        </section>\n      </section>\n    </section>\n\n\n</div>', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': ''}
2025-07-21 11:29:35,513 - controllers.article_controller - INFO - 开始生成文章，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:29:35,513 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 11:29:35,514 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:29:35,514 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 11:29:35,514 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 11:29:36,305 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘美IT公司高管演唱会上搂抱同事’的公众号文章，排版核心风格要与模板一致，字数约8000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n<!-- 0. 文章通用外层容器（AI可用于包裹整篇文章） -->\n<!-- AI可自行决定是否需要一个统一的根容器，例如： -->\n<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;">\n\n\n\n    <!-- 2. 空行占位符 (AI可根据需要添加多个以创建间距) -->\n    <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n\n    <!-- 3. 普通文本内容区块 (有左右内边距，行高2，默认字体颜色) -->\n    <!-- AI可在此区块内放置多段内容，包括普通文本、强调文本和提示信息。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的普通段落内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 48, 48); line-height: 2; font-style: normal; font-weight: 400; text-align: justify; font-size: 16px; box-sizing: border-box;">\n        <span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;"><strong style="box-sizing: border-box;">AI生成的红色强调文本，如金句。</strong></span>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n    </section>\n\n    <!-- 4. 带左侧小图和标题的章节区块（图片有左侧位移效果） -->\n    <!-- AI可复用此结构作为文章新章节的开头。 -->\n    <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(18px, 0px, 0px); box-sizing: border-box;">\n      <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 35%; height: auto; box-sizing: border-box;">\n      </section>\n    </section>\n    <section style="font-size: 24px; color: rgb(62, 62, 62); padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，上半句，模拟H2</span></strong></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，下半句，模拟H2</span></strong></p>\n    </section>\n\n    <!-- 5. 带有编号的列表项区块 (文本居中编号 + 普通段落，有左右内边距) -->\n    <!-- AI可复用此结构来展示多条编号内容，如洞察、事实。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">01.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第一段内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">02.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第二段内容，可包含<strong style="box-sizing: border-box;"><span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;">红色强调文本</span></strong>。</p>\n    </section>\n\n    <!-- 6. 图片来源/说明区块 (小字，左右内边距) -->\n    <section style="margin-top: 0px; margin-bottom: 0px; box-sizing: border-box;">\n      <section style="margin: 0px; box-sizing: border-box;">\n        <section style="font-size: 13px; color: rgb(136, 136, 136); padding: 0px 13px; box-sizing: border-box;">\n          <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的图片来源或说明文字。</p>\n        </section>\n      </section>\n    </section>\n\n    <!-- 7. 浅灰色背景的通用分割线/内容区块 (宽度92%，居中，有特定背景色和内边距) -->\n    <!-- AI可复用此结构作为文章中的视觉分隔，或放置提示信息、作者信息等。 -->\n    <section style="margin: 0px; text-align: center; box-sizing: border-box;">\n      <section style="border-top: 0.1em solid rgba(0, 0, 0, 0); border-bottom: 0.1em solid rgba(0, 0, 0, 0); transform: rotate(0deg); width: 92%; display: inline-block; background-color: rgba(136, 136, 136, 0.08); height: auto; padding: 15px 5px; box-sizing: border-box;">\n        \n        <!-- 7.1 内部左侧小图区块 (小图有左侧位移) -->\n        <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(15px, 0px, 0px); box-sizing: border-box;">\n          <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 20%; height: auto; box-sizing: border-box;">\n          </section>\n        </section>\n\n        <!-- 7.2 内部缩放图片区块 (如横向装饰线) -->\n        <section style="transform: scale(0.9); transform-origin: center center; margin-top: -1px; margin-bottom: -1px; box-sizing: border-box;">\n          <section style="text-align: center; margin-top: 10px; margin-bottom: 10px; line-height: 0; box-sizing: border-box;">\n            <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; box-sizing: border-box;">\n            </section>\n          </section>\n        </section>\n      </section>\n    </section>\n\n\n</div>'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 11:29:36,353 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:29:36,353 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:29:36,379 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B4EC60>
2025-07-21 11:29:36,379 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B2C050> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:29:36,396 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B1F380>
2025-07-21 11:29:36,397 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:29:36,397 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:29:36,397 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:29:36,397 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:29:36,397 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:29:48,257 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:29:48,257 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:29:48,257 - root - INFO - 获取生成历史请求
2025-07-21 11:29:48,257 - root - INFO - 获取发布历史请求
2025-07-21 11:29:48,258 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:29:48] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:29:48,258 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:29:48] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:30:18,254 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:30:18,254 - root - INFO - 获取生成历史请求
2025-07-21 11:30:18,255 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:30:18,255 - root - INFO - 获取发布历史请求
2025-07-21 11:30:18,256 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:30:18] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:30:18,256 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:30:18] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:30:49,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:30:49,186 - root - INFO - 获取生成历史请求
2025-07-21 11:30:49,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:30:49,187 - root - INFO - 获取发布历史请求
2025-07-21 11:30:49,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:30:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:30:49,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:30:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:31:06,409 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'c63ae858-d43e-9af9-b1f9-4c0e07df45dd'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'90001'), (b'req-arrive-time', b'1753068575956'), (b'resp-start-time', b'1753068665957'), (b'x-envoy-upstream-service-time', b'89999'), (b'set-cookie', b'acw_tc=c63ae858-d43e-9af9-b1f9-4c0e07df45dd5455efabcce63e11fb51a6ee97910ad8;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:31:05 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:31:06,411 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:31:06,412 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:31:06,412 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:31:06,412 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:31:06,412 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:31:06,413 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'c63ae858-d43e-9af9-b1f9-4c0e07df45dd', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '90001', 'req-arrive-time': '1753068575956', 'resp-start-time': '1753068665957', 'x-envoy-upstream-service-time': '89999', 'set-cookie': 'acw_tc=c63ae858-d43e-9af9-b1f9-4c0e07df45dd5455efabcce63e11fb51a6ee97910ad8;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:31:05 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:31:06,413 - openai._base_client - DEBUG - request_id: c63ae858-d43e-9af9-b1f9-4c0e07df45dd
2025-07-21 11:31:07,026 - controllers.article_controller - INFO - 文章内容生成成功，长度: 10990字符
2025-07-21 11:31:07,027 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 11:31:07,028 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:31:07,587 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：美IT公司高管演唱会上搂抱同事\n内容预览：```html 在科技行业，高管们往往以冷静、理性、专业著称，他们的公众形象通常与严肃的董事会会议、技术发布会或行业论坛紧密相关。然而，最近一则关于“美IT公司高管在演唱会上搂抱同事”的新闻却意外走红，引发了广泛讨论。这不仅是一则关于高管行为的八卦，更是一次职场文化、情感表达与公众认知的碰撞。 事情发生在一场知名乐队的演唱会上，一位来自硅谷的科技公司高管被拍到在人群中与一名女性同事亲密搂抱。现场照片迅速在网络上传播，评论区迅速分裂为两个阵营：一方认为这是人之常情，毕竟工作之外的私人生活不应被过度解读；另\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 11:31:07,589 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:31:07,591 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:31:07,628 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B697F0>
2025-07-21 11:31:07,629 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B2FAD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:31:07,652 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B69400>
2025-07-21 11:31:07,653 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:31:07,655 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:31:07,656 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:31:07,657 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:31:07,658 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:31:07,925 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 11:31:07,925 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 11:31:07,925 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 11:31:07,926 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:31:07] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 11:31:07,932 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 11:31:07,932 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 11:31:07,932 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:31:07,933 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:31:07,933 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:31:07,933 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 11:31:07,933 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:31:07,934 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 11:31:08,039 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 11:31:08,039 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 11:31:08,040 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 11:31:08,040 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 11:31:08,040 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 11:31:08,040 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 11:31:08,041 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 11:31:08,041 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:31:08] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 11:31:08,047 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 11:31:08,047 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 11:31:08,047 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 11:31:08,048 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:31:08,048 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:31:08,048 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 11:31:08,514 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000009B77BA0>, 'json_data': None}
2025-07-21 11:31:08,514 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 11:31:08,515 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:31:08,549 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B6B8C0>
2025-07-21 11:31:08,549 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B726D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:31:08,565 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B6B620>
2025-07-21 11:31:08,566 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 11:31:08,566 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:31:08,566 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 11:31:08,566 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:31:08,567 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 11:31:08,620 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1a37968e-7a3f-9954-bb5e-4b763c14f09e'), (b'content-type', b'application/json'), (b'req-cost-time', b'39'), (b'req-arrive-time', b'1753068668125'), (b'resp-start-time', b'1753068668165'), (b'x-envoy-upstream-service-time', b'38'), (b'set-cookie', b'acw_tc=1a37968e-7a3f-9954-bb5e-4b763c14f09e2bde9661959827d1f014f100ae47d513;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:31:08 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:31:08,621 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 11:31:08,622 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 11:31:08,624 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:31:08,625 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:31:08,626 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:31:08,627 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1a37968e-7a3f-9954-bb5e-4b763c14f09e', 'content-type': 'application/json', 'req-cost-time': '39', 'req-arrive-time': '1753068668125', 'resp-start-time': '1753068668165', 'x-envoy-upstream-service-time': '38', 'set-cookie': 'acw_tc=1a37968e-7a3f-9954-bb5e-4b763c14f09e2bde9661959827d1f014f100ae47d513;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:31:08 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:31:08,628 - openai._base_client - DEBUG - request_id: 1a37968e-7a3f-9954-bb5e-4b763c14f09e
2025-07-21 11:31:08,641 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 11:31:08,641 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 11:31:08,642 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 11:31:08,642 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 11:31:08,643 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 11:31:08,643 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 11:31:08,644 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 11:31:08,645 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:31:08] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 11:31:08,662 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:31:08,663 - root - INFO - 获取生成历史请求
2025-07-21 11:31:08,665 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:31:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:31:08,679 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:31:08,679 - root - INFO - 获取发布历史请求
2025-07-21 11:31:08,680 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:31:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:31:09,084 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'38888435-cc83-973d-b5b5-dd27ea945a85'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1415'), (b'req-arrive-time', b'1753068667213'), (b'resp-start-time', b'1753068668629'), (b'x-envoy-upstream-service-time', b'1412'), (b'set-cookie', b'acw_tc=38888435-cc83-973d-b5b5-dd27ea945a85d85e42f65ad0dd96f97e0c3015c4bade;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:31:08 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:31:09,085 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:31:09,085 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:31:09,086 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:31:09,086 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:31:09,086 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:31:09,086 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '38888435-cc83-973d-b5b5-dd27ea945a85', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1415', 'req-arrive-time': '1753068667213', 'resp-start-time': '1753068668629', 'x-envoy-upstream-service-time': '1412', 'set-cookie': 'acw_tc=38888435-cc83-973d-b5b5-dd27ea945a85d85e42f65ad0dd96f97e0c3015c4bade;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:31:08 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:31:09,086 - openai._base_client - DEBUG - request_id: 38888435-cc83-973d-b5b5-dd27ea945a85
2025-07-21 11:31:09,087 - services.dashscope_service - INFO - 文章摘要生成成功: 美IT公司高管在演唱会搂抱同事的照片引发热议，公众对此事的看法两极分化。文章探讨了职场文化、情感表达与公众认知的冲突，揭示了高管私下行为背后的职场人性与社会期待的碰撞。
2025-07-21 11:31:09,087 - controllers.article_controller - INFO - 摘要生成完成: 美IT公司高管在演唱会搂抱同事的照片引发热议，公众对此事的看法两极分化。文章探讨了职场文化、情感表达...
2025-07-21 11:31:09,087 - controllers.article_controller - INFO - 文章字数约: 8000，计划生成配图数量: 3
2025-07-21 11:31:09,088 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 11:31:09,088 - controllers.article_controller - INFO - 开始处理文章配图，计划生成3张图片（仅本地路径，不上传微信）
2025-07-21 11:31:09,088 - controllers.article_controller - INFO - 计划在第[12, 25, 38]段后插入配图
2025-07-21 11:31:09,088 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 11:31:09,088 - services.image_service - INFO - 开始生成文章配图，标题: 美IT公司高管演唱会上搂抱同事 - 配图1, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/3
2025-07-21 11:31:09,379 - httpcore.connection - DEBUG - close.started
2025-07-21 11:31:09,379 - httpcore.connection - DEBUG - close.complete
2025-07-21 11:31:10,782 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': None, 'prompt': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n为文章《美IT公司高管演唱会上搂抱同事 - 配图1》生成一张高质量的海报风格配图。\n\n要求：\n1. 图片风格现代、简洁、专业，具有海报感\n2. 色调温和，适合微信公众号\n3. 构图美观，有设计感\n4. 与文章主题相关\n5. 图片中不要包含过多文字，最好无文字，仅以视觉元素表达主题\n6. 尺寸比例适合作为文章封面\n7. 使用中国读者喜欢的视觉元素\n\n\n文章描述：美IT公司高管在演唱会搂抱同事的照片引发热议，公众对此事的看法两极分化。文章探讨了职场文化、情感表达与公众认知的冲突，揭示了高管私下行为背后的职场人性与社会期待的碰撞。\n请根据文章内容生成相关的视觉元素。', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 11:31:10,782 - services.image_service - ERROR - DashScope同步调用发生异常: Model is required!
2025-07-21 11:31:10,782 - controllers.article_controller - WARNING - 第1张配图生成失败
2025-07-21 11:31:10,782 - controllers.article_controller - INFO - 生成第2张配图，使用模型: dashscope
2025-07-21 11:31:10,783 - services.image_service - INFO - 开始生成文章配图，标题: 美IT公司高管演唱会上搂抱同事 - 配图2, 生图模型: dashscope, AI模型: dashscope, 图片索引: 2/3
2025-07-21 11:31:10,783 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': None, 'prompt': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n为文章《美IT公司高管演唱会上搂抱同事 - 配图2》生成一张高质量的海报风格配图。\n\n要求：\n1. 图片风格现代、简洁、专业，具有海报感\n2. 色调温和，适合微信公众号\n3. 构图美观，有设计感\n4. 与文章主题相关\n5. 图片中不要包含过多文字，最好无文字，仅以视觉元素表达主题\n6. 尺寸比例适合作为文章封面\n7. 使用中国读者喜欢的视觉元素\n\n\n文章描述：美IT公司高管在演唱会搂抱同事的照片引发热议，公众对此事的看法两极分化。文章探讨了职场文化、情感表达与公众认知的冲突，揭示了高管私下行为背后的职场人性与社会期待的碰撞。\n请根据文章内容生成相关的视觉元素。', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 11:31:10,783 - services.image_service - ERROR - DashScope同步调用发生异常: Model is required!
2025-07-21 11:31:10,783 - controllers.article_controller - WARNING - 第2张配图生成失败
2025-07-21 11:31:10,783 - controllers.article_controller - INFO - 生成第3张配图，使用模型: dashscope
2025-07-21 11:31:10,784 - services.image_service - INFO - 开始生成文章配图，标题: 美IT公司高管演唱会上搂抱同事 - 配图3, 生图模型: dashscope, AI模型: dashscope, 图片索引: 3/3
2025-07-21 11:31:10,784 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': None, 'prompt': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n为文章《美IT公司高管演唱会上搂抱同事 - 配图3》生成一张高质量的海报风格配图。\n\n要求：\n1. 图片风格现代、简洁、专业，具有海报感\n2. 色调温和，适合微信公众号\n3. 构图美观，有设计感\n4. 与文章主题相关\n5. 图片中不要包含过多文字，最好无文字，仅以视觉元素表达主题\n6. 尺寸比例适合作为文章封面\n7. 使用中国读者喜欢的视觉元素\n\n\n文章描述：美IT公司高管在演唱会搂抱同事的照片引发热议，公众对此事的看法两极分化。文章探讨了职场文化、情感表达与公众认知的冲突，揭示了高管私下行为背后的职场人性与社会期待的碰撞。\n请根据文章内容生成相关的视觉元素。', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 11:31:10,784 - services.image_service - ERROR - DashScope同步调用发生异常: Model is required!
2025-07-21 11:31:10,784 - controllers.article_controller - WARNING - 第3张配图生成失败
2025-07-21 11:31:10,784 - controllers.article_controller - INFO - 配图处理完成，共插入0张图片
2025-07-21 11:31:10,849 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_美IT公司高管演唱会上搂抱同事_20250721_113110.html
2025-07-21 11:31:10,850 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 11:31:11,630 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 11:31:11,630 - controllers.article_controller - WARNING - 未找到</div>标签，保留全部内容
2025-07-21 11:31:11,633 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 11:31:11,633 - controllers.article_controller - INFO - 内容清理完成，移除了 8 个字符，清理后长度: 10982
2025-07-21 11:31:11,636 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_美IT公司高管演唱会上搂抱同事_20250721_113111.html
2025-07-21 11:31:11,637 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=美IT公司高管演唱会上搂抱同事, 内容前100字=<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang S, 图片数=4
2025-07-21 11:31:11,637 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:31:11,637 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:31:11,663 - services.history_service - INFO - 添加生成历史记录: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:31:11,664 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 11:31:11,664 - controllers.article_controller - INFO - 生成结果预览: 标题=美IT公司高管演唱会上搂抱同事, 内容长度=10982, 配图数量=3
2025-07-21 11:31:11,665 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:31:11] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 11:31:11,671 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:31:11,671 - root - INFO - 获取生成历史请求
2025-07-21 11:31:11,672 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:31:11] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:31:19,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:31:19,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:31:19,181 - root - INFO - 获取生成历史请求
2025-07-21 11:31:19,181 - root - INFO - 获取发布历史请求
2025-07-21 11:31:19,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:31:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:31:19,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:31:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:32:17,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:32:17,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:32:17,183 - root - INFO - 获取生成历史请求
2025-07-21 11:32:17,183 - root - INFO - 获取发布历史请求
2025-07-21 11:32:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:32:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:32:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:32:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:32:53,877 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:32:53,878 - root - INFO - 获取生成历史请求
2025-07-21 11:32:53,879 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:32:53,879 - root - INFO - 获取发布历史请求
2025-07-21 11:32:53,880 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:32:53] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:32:53,881 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:32:53] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:33:19,174 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:33:19,174 - root - INFO - 获取生成历史请求
2025-07-21 11:33:19,175 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:33:19,175 - root - INFO - 获取发布历史请求
2025-07-21 11:33:19,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:33:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:33:19,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:33:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:33:49,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:33:49,179 - root - INFO - 获取生成历史请求
2025-07-21 11:33:49,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:33:49,181 - root - INFO - 获取发布历史请求
2025-07-21 11:33:49,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:33:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:33:49,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:33:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:34:19,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:34:19,179 - root - INFO - 获取生成历史请求
2025-07-21 11:34:19,180 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:34:19,180 - root - INFO - 获取发布历史请求
2025-07-21 11:34:19,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:34:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:34:19,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:34:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:34:58,781 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:34:58,782 - root - INFO - 获取生成历史请求
2025-07-21 11:34:58,783 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:34:58,784 - root - INFO - 获取发布历史请求
2025-07-21 11:34:58,786 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:34:58] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:34:58,787 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:34:58] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:35:18,262 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:35:18,262 - root - INFO - 获取生成历史请求
2025-07-21 11:35:18,262 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:35:18,262 - root - INFO - 获取发布历史请求
2025-07-21 11:35:18,263 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:35:18] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:35:18,263 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:35:18] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:35:49,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:35:49,187 - root - INFO - 获取生成历史请求
2025-07-21 11:35:49,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:35:49,188 - root - INFO - 获取发布历史请求
2025-07-21 11:35:49,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:35:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:35:49,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:35:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:36:19,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:36:19,178 - root - INFO - 获取生成历史请求
2025-07-21 11:36:19,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:36:19,178 - root - INFO - 获取发布历史请求
2025-07-21 11:36:19,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:36:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:36:19,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:36:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:37:00,205 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:37:00,206 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:37:00,206 - root - INFO - 获取生成历史请求
2025-07-21 11:37:00,206 - root - INFO - 获取发布历史请求
2025-07-21 11:37:00,207 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:37:00] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:37:00,208 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:37:00] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:37:19,176 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:37:19,176 - root - INFO - 获取生成历史请求
2025-07-21 11:37:19,177 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:37:19,177 - root - INFO - 获取发布历史请求
2025-07-21 11:37:19,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:37:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:37:19,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:37:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:37:49,194 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:37:49,195 - root - INFO - 获取生成历史请求
2025-07-21 11:37:49,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:37:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:37:49,200 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:37:49,201 - root - INFO - 获取发布历史请求
2025-07-21 11:37:49,203 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:37:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:38:19,202 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:38:19,203 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:38:19,204 - root - INFO - 获取生成历史请求
2025-07-21 11:38:19,205 - root - INFO - 获取发布历史请求
2025-07-21 11:38:19,210 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:38:19,212 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:38:23,262 - root - INFO - 请求: GET /
2025-07-21 11:38:23,262 - root - INFO - 访问主页面
2025-07-21 11:38:23,263 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:23] "GET / HTTP/1.1" 200 -
2025-07-21 11:38:23,312 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:38:23,314 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:23] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:38:23,315 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:38:23,317 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:38:23,319 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:23] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:38:23,321 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:23] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 11:38:23,376 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:38:23,377 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:23] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:38:23,377 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:38:23,378 - root - INFO - 请求: GET /api/config
2025-07-21 11:38:23,379 - root - INFO - 处理配置请求: GET
2025-07-21 11:38:23,379 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 11:38:23,381 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:38:23,382 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 11:38:23,382 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:23] "GET /api/config HTTP/1.1" 200 -
2025-07-21 11:38:23,386 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:23] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:38:23,511 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 11:38:23,512 - root - INFO - 获取Gemini可用模型列表
2025-07-21 11:38:23,512 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 11:38:23,513 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:38:23,513 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:38:23,515 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 11:38:23,521 - root - INFO - 请求: GET /static/favicon.ico
2025-07-21 11:38:23,522 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:23] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-07-21 11:38:24,452 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 11:38:24,978 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 11:38:24,979 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 11:38:53,386 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:38:53,387 - root - INFO - 获取生成历史请求
2025-07-21 11:38:53,388 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:38:53,388 - root - INFO - 获取发布历史请求
2025-07-21 11:38:53,390 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:53] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:38:53,392 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:38:53] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:39:09,031 - root - INFO - 请求: POST /api/generate-article
2025-07-21 11:39:09,031 - root - INFO - 生成文章请求
2025-07-21 11:39:09,032 - controllers.article_controller - INFO - 【唯一请求ID】745453e4-f2b4-4cd8-915f-ac828735c251 - generate_article
2025-07-21 11:39:09,032 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '美IT公司高管演唱会上搂抱同事', 'word_count': 2000, 'image_count': 2, 'format_template': '\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '', 'negative_prompt': '', 'size': ''}}
2025-07-21 11:39:09,032 - controllers.article_controller - INFO - 开始生成文章，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:39:09,032 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 11:39:09,033 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:39:09,033 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 11:39:09,033 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 11:39:09,507 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘美IT公司高管演唱会上搂抱同事’的公众号文章，排版核心风格要与模板一致，字数约2000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 11:39:09,508 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:39:09,508 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:39:09,531 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A1C6240>
2025-07-21 11:39:09,531 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000000000A1BE1D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:39:09,548 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000000BBD100>
2025-07-21 11:39:09,548 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:39:09,548 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:39:09,549 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:39:09,549 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:39:09,549 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:39:23,381 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:39:23,382 - root - INFO - 获取生成历史请求
2025-07-21 11:39:23,382 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:39:23,382 - root - INFO - 获取发布历史请求
2025-07-21 11:39:23,383 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:39:23] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:39:23,383 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:39:23] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:39:53,382 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:39:53,382 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:39:53,382 - root - INFO - 获取生成历史请求
2025-07-21 11:39:53,382 - root - INFO - 获取发布历史请求
2025-07-21 11:39:53,383 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:39:53] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:39:53,383 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:39:53] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:40:10,205 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 11:40:10,205 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 11:40:10,205 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 11:40:10,206 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:10] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 11:40:10,214 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 11:40:10,214 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 11:40:10,214 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:40:10,215 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:40:10,215 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:40:10,215 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 11:40:10,216 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:40:10,216 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 11:40:10,316 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 11:40:10,316 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 11:40:10,317 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 11:40:10,317 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 11:40:10,317 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 11:40:10,317 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 11:40:10,317 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 11:40:10,318 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:10] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 11:40:10,323 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 11:40:10,323 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 11:40:10,324 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 11:40:10,324 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:40:10,324 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:40:10,324 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 11:40:10,807 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000009B1B060>, 'json_data': None}
2025-07-21 11:40:10,808 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 11:40:10,808 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:40:10,847 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A14FB30>
2025-07-21 11:40:10,847 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000000000A1D46D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:40:10,864 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A14DD30>
2025-07-21 11:40:10,864 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 11:40:10,864 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:40:10,865 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 11:40:10,865 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:40:10,865 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 11:40:10,906 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'3cce2a2a-dee5-9f0b-8d1b-94e7136b9047'), (b'content-type', b'application/json'), (b'req-cost-time', b'29'), (b'req-arrive-time', b'1753069210431'), (b'resp-start-time', b'1753069210461'), (b'x-envoy-upstream-service-time', b'28'), (b'set-cookie', b'acw_tc=3cce2a2a-dee5-9f0b-8d1b-94e7136b9047e72ebf690de1af21c77bd73f5b1b7b99;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:40:10 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:40:10,906 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 11:40:10,906 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 11:40:10,906 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:40:10,907 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:40:10,907 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:40:10,907 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '3cce2a2a-dee5-9f0b-8d1b-94e7136b9047', 'content-type': 'application/json', 'req-cost-time': '29', 'req-arrive-time': '1753069210431', 'resp-start-time': '1753069210461', 'x-envoy-upstream-service-time': '28', 'set-cookie': 'acw_tc=3cce2a2a-dee5-9f0b-8d1b-94e7136b9047e72ebf690de1af21c77bd73f5b1b7b99;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:40:10 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:40:10,907 - openai._base_client - DEBUG - request_id: 3cce2a2a-dee5-9f0b-8d1b-94e7136b9047
2025-07-21 11:40:10,911 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 11:40:10,911 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 11:40:10,911 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 11:40:10,911 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 11:40:10,912 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 11:40:10,912 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 11:40:10,912 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 11:40:10,913 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:10] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 11:40:10,920 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:40:10,920 - root - INFO - 获取生成历史请求
2025-07-21 11:40:10,921 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:10] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:40:10,928 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:40:10,928 - root - INFO - 获取发布历史请求
2025-07-21 11:40:10,929 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:10] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:40:23,383 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:40:23,384 - root - INFO - 获取生成历史请求
2025-07-21 11:40:23,385 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:40:23,385 - root - INFO - 获取发布历史请求
2025-07-21 11:40:23,386 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:23] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:40:23,387 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:23] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:40:39,930 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'b0fb8c45-60ec-9130-ba29-5a9d80fbe427'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'90366'), (b'req-arrive-time', b'1753069149113'), (b'resp-start-time', b'1753069239479'), (b'x-envoy-upstream-service-time', b'90362'), (b'set-cookie', b'acw_tc=b0fb8c45-60ec-9130-ba29-5a9d80fbe427f5f94e5efa39b78e5b1aa91e77244331;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:40:39 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:40:39,931 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:40:39,931 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:40:39,932 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:40:39,932 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:40:39,932 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:40:39,932 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'b0fb8c45-60ec-9130-ba29-5a9d80fbe427', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '90366', 'req-arrive-time': '1753069149113', 'resp-start-time': '1753069239479', 'x-envoy-upstream-service-time': '90362', 'set-cookie': 'acw_tc=b0fb8c45-60ec-9130-ba29-5a9d80fbe427f5f94e5efa39b78e5b1aa91e77244331;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:40:39 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:40:39,932 - openai._base_client - DEBUG - request_id: b0fb8c45-60ec-9130-ba29-5a9d80fbe427
2025-07-21 11:40:39,933 - controllers.article_controller - INFO - 文章内容生成成功，长度: 8022字符
2025-07-21 11:40:39,933 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 11:40:39,933 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:40:40,404 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：美IT公司高管演唱会上搂抱同事\n内容预览：```html 美国IT公司高管演唱会上搂抱同事，职场边界到底在哪里？ 发布于2025年4月5日 · 阅读时间：约5分钟 <div style="padding: 24px 16px; background-color: white; border-radius: 12px; box-shadow: rgba(0, 0, 0\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 11:40:40,404 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:40:40,405 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:40:40,429 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A2080B0>
2025-07-21 11:40:40,429 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000000000A1D41D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:40:40,442 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A1F3DD0>
2025-07-21 11:40:40,442 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:40:40,442 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:40:40,442 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:40:40,443 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:40:40,443 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:40:42,232 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'55e81ff7-3379-9f5f-858e-627738fdc673'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1779'), (b'req-arrive-time', b'1753069240008'), (b'resp-start-time', b'1753069241788'), (b'x-envoy-upstream-service-time', b'1777'), (b'set-cookie', b'acw_tc=55e81ff7-3379-9f5f-858e-627738fdc673a8a3596fc57b3d615ca5da0d9ca9465f;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:40:41 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:40:42,232 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:40:42,233 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:40:42,233 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:40:42,233 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:40:42,233 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:40:42,234 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '55e81ff7-3379-9f5f-858e-627738fdc673', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1779', 'req-arrive-time': '1753069240008', 'resp-start-time': '1753069241788', 'x-envoy-upstream-service-time': '1777', 'set-cookie': 'acw_tc=55e81ff7-3379-9f5f-858e-627738fdc673a8a3596fc57b3d615ca5da0d9ca9465f;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:40:41 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:40:42,234 - openai._base_client - DEBUG - request_id: 55e81ff7-3379-9f5f-858e-627738fdc673
2025-07-21 11:40:42,234 - services.dashscope_service - INFO - 文章摘要生成成功: 美国IT公司高管在演唱会上搂抱同事引发热议，职场关系边界再度引发关注。文章探讨职场亲密行为的尺度问题，分析背后的文化差异与管理隐患，为职场人提供实用建议，助你避开“越界”雷区。
2025-07-21 11:40:42,235 - controllers.article_controller - INFO - 摘要生成完成: 美国IT公司高管在演唱会上搂抱同事引发热议，职场关系边界再度引发关注。文章探讨职场亲密行为的尺度问题...
2025-07-21 11:40:42,235 - controllers.article_controller - INFO - 文章字数约: 2000，计划生成配图数量: 2
2025-07-21 11:40:42,235 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 11:40:42,235 - controllers.article_controller - INFO - 开始处理文章配图，计划生成2张图片（仅本地路径，不上传微信）
2025-07-21 11:40:42,236 - controllers.article_controller - INFO - 计划在第[6, 12]段后插入配图
2025-07-21 11:40:42,236 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 11:40:42,236 - services.image_service - INFO - 开始生成文章配图，标题: 美IT公司高管演唱会上搂抱同事 - 配图1, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/2
2025-07-21 11:40:42,236 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': None, 'prompt': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n为文章《美IT公司高管演唱会上搂抱同事 - 配图1》生成一张高质量的海报风格配图。\n\n要求：\n1. 图片风格现代、简洁、专业，具有海报感\n2. 色调温和，适合微信公众号\n3. 构图美观，有设计感\n4. 与文章主题相关\n5. 图片中不要包含过多文字，最好无文字，仅以视觉元素表达主题\n6. 尺寸比例适合作为文章封面\n7. 使用中国读者喜欢的视觉元素\n\n\n文章描述：美国IT公司高管在演唱会上搂抱同事引发热议，职场关系边界再度引发关注。文章探讨职场亲密行为的尺度问题，分析背后的文化差异与管理隐患，为职场人提供实用建议，助你避开“越界”雷区。\n请根据文章内容生成相关的视觉元素。', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 11:40:42,236 - services.image_service - ERROR - DashScope同步调用发生异常: Model is required!
2025-07-21 11:40:42,236 - controllers.article_controller - WARNING - 第1张配图生成失败
2025-07-21 11:40:42,237 - controllers.article_controller - INFO - 生成第2张配图，使用模型: dashscope
2025-07-21 11:40:42,237 - services.image_service - INFO - 开始生成文章配图，标题: 美IT公司高管演唱会上搂抱同事 - 配图2, 生图模型: dashscope, AI模型: dashscope, 图片索引: 2/2
2025-07-21 11:40:42,237 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': None, 'prompt': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n为文章《美IT公司高管演唱会上搂抱同事 - 配图2》生成一张高质量的海报风格配图。\n\n要求：\n1. 图片风格现代、简洁、专业，具有海报感\n2. 色调温和，适合微信公众号\n3. 构图美观，有设计感\n4. 与文章主题相关\n5. 图片中不要包含过多文字，最好无文字，仅以视觉元素表达主题\n6. 尺寸比例适合作为文章封面\n7. 使用中国读者喜欢的视觉元素\n\n\n文章描述：美国IT公司高管在演唱会上搂抱同事引发热议，职场关系边界再度引发关注。文章探讨职场亲密行为的尺度问题，分析背后的文化差异与管理隐患，为职场人提供实用建议，助你避开“越界”雷区。\n请根据文章内容生成相关的视觉元素。', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 11:40:42,237 - services.image_service - ERROR - DashScope同步调用发生异常: Model is required!
2025-07-21 11:40:42,237 - controllers.article_controller - WARNING - 第2张配图生成失败
2025-07-21 11:40:42,237 - controllers.article_controller - INFO - 配图处理完成，共插入0张图片
2025-07-21 11:40:43,045 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_美IT公司高管演唱会上搂抱同事_20250721_114042.html
2025-07-21 11:40:43,045 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 11:40:43,045 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 11:40:43,045 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 7901
2025-07-21 11:40:43,047 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 11:40:43,047 - controllers.article_controller - INFO - 内容清理完成，移除了 121 个字符，清理后长度: 7901
2025-07-21 11:40:43,050 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_美IT公司高管演唱会上搂抱同事_20250721_114043.html
2025-07-21 11:40:43,050 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=美IT公司高管演唱会上搂抱同事, 内容前100字=<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang S, 图片数=1
2025-07-21 11:40:43,050 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:40:43,051 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:40:43,055 - services.history_service - INFO - 添加生成历史记录: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:40:43,055 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 11:40:43,055 - controllers.article_controller - INFO - 生成结果预览: 标题=美IT公司高管演唱会上搂抱同事, 内容长度=7901, 配图数量=2
2025-07-21 11:40:43,055 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:43] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 11:40:43,061 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:40:43,061 - root - INFO - 获取生成历史请求
2025-07-21 11:40:43,062 - root - INFO - 请求: GET /【微信永久素材URL】
2025-07-21 11:40:43,062 - root - WARNING - 404错误: http://192.168.124.16:5000/【微信永久素材URL】
2025-07-21 11:40:43,062 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:43] "[33mGET /【微信永久素材URL】 HTTP/1.1[0m" 404 -
2025-07-21 11:40:43,063 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:43] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:40:53,381 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:40:53,381 - root - INFO - 获取生成历史请求
2025-07-21 11:40:53,382 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:40:53,382 - root - INFO - 获取发布历史请求
2025-07-21 11:40:53,384 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:53] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:40:53,385 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:40:53] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:41:10,571 - root - INFO - 应用目录创建完成
2025-07-21 11:41:10,572 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:41:10,572 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:41:10,572 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:41:10,572 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:41:10,572 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 11:41:10,572 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:41:10,573 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:41:10,573 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:41:10,573 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 11:41:10,574 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:41:10,574 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 11:41:10,574 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 11:41:10,574 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 11:41:11,441 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 11:41:11,441 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 11:41:13,207 - root - INFO - 请求: GET /
2025-07-21 11:41:13,207 - root - INFO - 访问主页面
2025-07-21 11:41:13,217 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:41:13] "GET / HTTP/1.1" 200 -
2025-07-21 11:41:13,283 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:41:13,295 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:41:13,296 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:41:13,455 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:41:13] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:41:13,458 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:41:13] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:41:13,468 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:41:13] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:41:13,539 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:41:13,540 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:41:13] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:41:13,555 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:41:13,558 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:41:13] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:41:13,572 - root - INFO - 请求: GET /api/config
2025-07-21 11:41:13,572 - root - INFO - 处理配置请求: GET
2025-07-21 11:41:13,572 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 11:41:13,573 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:41:13,573 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 11:41:13,573 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:41:13] "GET /api/config HTTP/1.1" 200 -
2025-07-21 11:41:13,742 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 11:41:13,743 - root - INFO - 获取Gemini可用模型列表
2025-07-21 11:41:13,743 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 11:41:13,743 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:41:13,744 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:41:13,744 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 11:41:14,848 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 11:41:14,848 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 11:41:14,849 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 11:41:28,154 - root - INFO - 请求: POST /api/generate-article
2025-07-21 11:41:28,154 - root - INFO - 生成文章请求
2025-07-21 11:41:28,154 - controllers.article_controller - INFO - 【唯一请求ID】9968392a-2931-4599-8cda-3e1731e54675 - generate_article
2025-07-21 11:41:28,154 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '美IT公司高管演唱会上搂抱同事', 'word_count': 8000, 'image_count': 3, 'format_template': '\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '', 'negative_prompt': '', 'size': ''}}
2025-07-21 11:41:28,155 - controllers.article_controller - INFO - 开始生成文章，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:41:28,155 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 11:41:28,155 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:41:28,155 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 11:41:28,156 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 11:41:28,629 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘美IT公司高管演唱会上搂抱同事’的公众号文章，排版核心风格要与模板一致，字数约8000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 11:41:28,660 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:41:28,660 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:41:28,700 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C32600>
2025-07-21 11:41:28,700 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009C20050> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:41:28,719 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C321E0>
2025-07-21 11:41:28,720 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:41:28,721 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:41:28,721 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:41:28,722 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:41:28,722 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:41:43,580 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:41:43,580 - root - INFO - 获取生成历史请求
2025-07-21 11:41:43,581 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:41:43,581 - root - INFO - 获取发布历史请求
2025-07-21 11:41:43,581 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:41:43] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:41:43,582 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:41:43] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:42:13,575 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:42:13,576 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:42:13,576 - root - INFO - 获取生成历史请求
2025-07-21 11:42:13,576 - root - INFO - 获取发布历史请求
2025-07-21 11:42:13,577 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:42:13] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:42:13,577 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:42:13] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:42:41,972 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'9ae06a8b-9bcc-99d6-9eb9-9f1de9bedf3e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'73238'), (b'req-arrive-time', b'1753069288288'), (b'resp-start-time', b'1753069361527'), (b'x-envoy-upstream-service-time', b'73235'), (b'set-cookie', b'acw_tc=9ae06a8b-9bcc-99d6-9eb9-9f1de9bedf3e5e2240bcb4957af3327af06e0932df38;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:42:41 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:42:41,975 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:42:41,976 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:42:41,977 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:42:41,978 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:42:41,978 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:42:41,979 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '9ae06a8b-9bcc-99d6-9eb9-9f1de9bedf3e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '73238', 'req-arrive-time': '1753069288288', 'resp-start-time': '1753069361527', 'x-envoy-upstream-service-time': '73235', 'set-cookie': 'acw_tc=9ae06a8b-9bcc-99d6-9eb9-9f1de9bedf3e5e2240bcb4957af3327af06e0932df38;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:42:41 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:42:41,980 - openai._base_client - DEBUG - request_id: 9ae06a8b-9bcc-99d6-9eb9-9f1de9bedf3e
2025-07-21 11:42:41,989 - controllers.article_controller - INFO - 文章内容生成成功，长度: 6598字符
2025-07-21 11:42:41,990 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 11:42:41,990 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:42:42,506 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：美IT公司高管演唱会上搂抱同事\n内容预览：```html body { font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Microsoft YaHei', sans-serif; background-color: white; margin: 0; padding: 0; } h1, h2, h3 { margin: 0; line-height: 1.2; } h1 { font-size: 32px; font-weight: 700; margin-bottom: 16px; color: white; } h1 span { font-weight: 900; } h2 { font-size: 24px; font-weight: 700; margin-bottom: 20px; color: rgb(24, 40, 72); } h2 span { display: block; width: 64px; height: 4px; backgroun\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字："}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 11:42:42,506 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:42:42,507 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:42:42,540 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C60B30>
2025-07-21 11:42:42,540 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009C23BD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:42:42,556 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C32BD0>
2025-07-21 11:42:42,556 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:42:42,557 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:42:42,557 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:42:42,557 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:42:42,557 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:42:43,390 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'a33536c0-a157-9743-ab29-d3aefea31235'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'822'), (b'req-arrive-time', b'1753069362124'), (b'resp-start-time', b'1753069362947'), (b'x-envoy-upstream-service-time', b'821'), (b'set-cookie', b'acw_tc=a33536c0-a157-9743-ab29-d3aefea31235d1b1857e9dd0bf4cf7ee8c38207ff8c6;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:42:42 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:42:43,391 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:42:43,391 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:42:43,392 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:42:43,392 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:42:43,392 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:42:43,393 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'a33536c0-a157-9743-ab29-d3aefea31235', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '822', 'req-arrive-time': '1753069362124', 'resp-start-time': '1753069362947', 'x-envoy-upstream-service-time': '821', 'set-cookie': 'acw_tc=a33536c0-a157-9743-ab29-d3aefea31235d1b1857e9dd0bf4cf7ee8c38207ff8c6;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:42:42 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:42:43,393 - openai._base_client - DEBUG - request_id: a33536c0-a157-9743-ab29-d3aefea31235
2025-07-21 11:42:43,394 - services.dashscope_service - INFO - 文章摘要生成成功: 美国某IT公司高管在演唱会上搂抱同事引发热议，背后职场文化与个人边界问题引人深思。
2025-07-21 11:42:43,395 - controllers.article_controller - INFO - 摘要生成完成: 美国某IT公司高管在演唱会上搂抱同事引发热议，背后职场文化与个人边界问题引人深思。...
2025-07-21 11:42:43,395 - controllers.article_controller - INFO - 文章字数约: 8000，计划生成配图数量: 3
2025-07-21 11:42:43,395 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 11:42:43,396 - controllers.article_controller - INFO - 开始处理文章配图，计划生成3张图片（仅本地路径，不上传微信）
2025-07-21 11:42:43,396 - controllers.article_controller - INFO - 计划在第[6, 12, 18]段后插入配图
2025-07-21 11:42:43,396 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 11:42:43,397 - services.image_service - INFO - 开始生成文章配图，标题: 美IT公司高管演唱会上搂抱同事, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/3
2025-07-21 11:42:43,449 - httpcore.connection - DEBUG - close.started
2025-07-21 11:42:43,449 - httpcore.connection - DEBUG - close.complete
2025-07-21 11:42:43,588 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:42:43,589 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:42:43,589 - root - INFO - 获取生成历史请求
2025-07-21 11:42:43,589 - root - INFO - 获取发布历史请求
2025-07-21 11:42:43,590 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:42:43] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:42:43,591 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:42:43] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:42:43,611 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': '', 'prompt': '美IT公司高管演唱会上搂抱同事', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 11:42:43,612 - services.image_service - ERROR - DashScope同步调用发生异常: Model is required!
2025-07-21 11:42:43,612 - controllers.article_controller - WARNING - 第1张配图生成失败
2025-07-21 11:42:43,612 - controllers.article_controller - INFO - 生成第2张配图，使用模型: dashscope
2025-07-21 11:42:43,612 - services.image_service - INFO - 开始生成文章配图，标题: 美IT公司高管演唱会上搂抱同事, 生图模型: dashscope, AI模型: dashscope, 图片索引: 2/3
2025-07-21 11:42:43,612 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': '', 'prompt': '美IT公司高管演唱会上搂抱同事', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 11:42:43,613 - services.image_service - ERROR - DashScope同步调用发生异常: Model is required!
2025-07-21 11:42:43,613 - controllers.article_controller - WARNING - 第2张配图生成失败
2025-07-21 11:42:43,613 - controllers.article_controller - INFO - 生成第3张配图，使用模型: dashscope
2025-07-21 11:42:43,613 - services.image_service - INFO - 开始生成文章配图，标题: 美IT公司高管演唱会上搂抱同事, 生图模型: dashscope, AI模型: dashscope, 图片索引: 3/3
2025-07-21 11:42:43,613 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': '', 'prompt': '美IT公司高管演唱会上搂抱同事', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 11:42:43,614 - services.image_service - ERROR - DashScope同步调用发生异常: Model is required!
2025-07-21 11:42:43,614 - controllers.article_controller - WARNING - 第3张配图生成失败
2025-07-21 11:42:43,614 - controllers.article_controller - INFO - 配图处理完成，共插入0张图片
2025-07-21 11:42:44,368 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_美IT公司高管演唱会上搂抱同事_20250721_114243.html
2025-07-21 11:42:44,369 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 11:42:44,503 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 11:42:44,504 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 6570
2025-07-21 11:42:44,506 - controllers.article_controller - INFO - 发现1个<style>标签，开始内联处理
2025-07-21 11:42:44,516 - controllers.article_controller - INFO - 样式内联处理完成，应用了35个CSS规则
2025-07-21 11:42:44,517 - controllers.article_controller - INFO - 内容清理完成，未发现需要清理的内容
2025-07-21 11:42:44,519 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_美IT公司高管演唱会上搂抱同事_20250721_114244.html
2025-07-21 11:42:44,519 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=美IT公司高管演唱会上搂抱同事, 内容前100字=<!DOCTYPE html>

<html lang="zh-CN">
<head>
<meta charset="utf-8"/>
<meta content="width=device-widt, 图片数=1
2025-07-21 11:42:44,519 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:42:44,520 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:42:44,523 - services.history_service - INFO - 添加生成历史记录: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:42:44,524 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 11:42:44,524 - controllers.article_controller - INFO - 生成结果预览: 标题=美IT公司高管演唱会上搂抱同事, 内容长度=9788, 配图数量=3
2025-07-21 11:42:44,524 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:42:44] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 11:42:44,534 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:42:44,534 - root - INFO - 获取生成历史请求
2025-07-21 11:42:44,534 - root - INFO - 请求: GET /【微信永久素材URL】
2025-07-21 11:42:44,535 - root - WARNING - 404错误: http://192.168.124.16:5000/【微信永久素材URL】
2025-07-21 11:42:44,535 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:42:44] "[33mGET /【微信永久素材URL】 HTTP/1.1[0m" 404 -
2025-07-21 11:42:44,536 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:42:44] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:43:00,044 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 11:43:00,045 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 11:43:00,046 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 11:43:00,047 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:43:00] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 11:43:00,063 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 11:43:00,064 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 11:43:00,064 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:43:00,064 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:43:00,065 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:43:00,065 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 11:43:00,066 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:43:00,067 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 11:43:00,169 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 11:43:00,170 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 11:43:00,170 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 11:43:00,170 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 11:43:00,171 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 11:43:00,171 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 11:43:00,171 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 11:43:00,172 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:43:00] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 11:43:00,180 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 11:43:00,181 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 11:43:00,181 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 11:43:00,182 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:43:00,182 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:43:00,182 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 11:43:00,658 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x000000000A4A9300>, 'json_data': None}
2025-07-21 11:43:00,659 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 11:43:00,659 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:43:00,697 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A4ADE50>
2025-07-21 11:43:00,697 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000000F64C50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:43:00,712 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A4ADBB0>
2025-07-21 11:43:00,712 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 11:43:00,713 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:43:00,713 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 11:43:00,713 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:43:00,713 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 11:43:00,755 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'440ba777-9ec0-98ad-b7d9-d36cc5d11f4e'), (b'content-type', b'application/json'), (b'req-cost-time', b'28'), (b'req-arrive-time', b'1753069380281'), (b'resp-start-time', b'1753069380310'), (b'x-envoy-upstream-service-time', b'27'), (b'set-cookie', b'acw_tc=440ba777-9ec0-98ad-b7d9-d36cc5d11f4e1979366f5f902eb4fb327c75c7687050;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:43:00 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:43:00,755 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 11:43:00,756 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 11:43:00,756 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:43:00,756 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:43:00,756 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:43:00,757 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '440ba777-9ec0-98ad-b7d9-d36cc5d11f4e', 'content-type': 'application/json', 'req-cost-time': '28', 'req-arrive-time': '1753069380281', 'resp-start-time': '1753069380310', 'x-envoy-upstream-service-time': '27', 'set-cookie': 'acw_tc=440ba777-9ec0-98ad-b7d9-d36cc5d11f4e1979366f5f902eb4fb327c75c7687050;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:43:00 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:43:00,757 - openai._base_client - DEBUG - request_id: 440ba777-9ec0-98ad-b7d9-d36cc5d11f4e
2025-07-21 11:43:00,760 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 11:43:00,760 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 11:43:00,760 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 11:43:00,760 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 11:43:00,760 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 11:43:00,760 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 11:43:00,760 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 11:43:00,761 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:43:00] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 11:43:00,769 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:43:00,769 - root - INFO - 获取生成历史请求
2025-07-21 11:43:00,770 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:43:00] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:43:00,777 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:43:00,777 - root - INFO - 获取发布历史请求
2025-07-21 11:43:00,778 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:43:00] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:43:13,575 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:43:13,575 - root - INFO - 获取生成历史请求
2025-07-21 11:43:13,576 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:43:13,576 - root - INFO - 获取发布历史请求
2025-07-21 11:43:13,577 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:43:13] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:43:13,577 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:43:13] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:43:44,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:43:44,191 - root - INFO - 获取生成历史请求
2025-07-21 11:43:44,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:43:44,194 - root - INFO - 获取发布历史请求
2025-07-21 11:43:44,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:43:44] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:43:44,201 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:43:44] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:44:14,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:44:14,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:44:14,189 - root - INFO - 获取生成历史请求
2025-07-21 11:44:14,189 - root - INFO - 获取发布历史请求
2025-07-21 11:44:14,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:44:14] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:44:14,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:44:14] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:44:56,976 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:44:56,976 - root - INFO - 获取生成历史请求
2025-07-21 11:44:56,977 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:44:56,978 - root - INFO - 获取发布历史请求
2025-07-21 11:44:56,981 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:44:56] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:44:56,982 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:44:56] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:45:14,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:45:14,178 - root - INFO - 获取生成历史请求
2025-07-21 11:45:14,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:45:14,178 - root - INFO - 获取发布历史请求
2025-07-21 11:45:14,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:45:14] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:45:14,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:45:14] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:45:44,177 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:45:44,177 - root - INFO - 获取生成历史请求
2025-07-21 11:45:44,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:45:44,178 - root - INFO - 获取发布历史请求
2025-07-21 11:45:44,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:45:44] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:45:44,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:45:44] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:46:21,700 - root - INFO - 应用目录创建完成
2025-07-21 11:46:21,700 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:46:21,701 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:46:21,701 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:46:21,701 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:46:21,702 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 11:46:21,702 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:46:21,702 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:46:21,702 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:46:21,702 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 11:46:21,703 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:46:21,703 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 11:46:21,703 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 11:46:21,703 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 11:46:22,581 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 11:46:22,582 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 11:46:24,173 - root - INFO - 请求: GET /
2025-07-21 11:46:24,174 - root - INFO - 访问主页面
2025-07-21 11:46:24,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:46:24] "GET / HTTP/1.1" 200 -
2025-07-21 11:46:24,243 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:46:24,258 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:46:24,259 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:46:24,420 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:46:24] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:46:24,429 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:46:24] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-21 11:46:24,438 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:46:24] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:46:24,508 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:46:24,509 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:46:24] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:46:24,526 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:46:24,531 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:46:24] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:46:24,543 - root - INFO - 请求: GET /api/config
2025-07-21 11:46:24,544 - root - INFO - 处理配置请求: GET
2025-07-21 11:46:24,544 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 11:46:24,545 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:46:24,545 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 11:46:24,545 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:46:24] "GET /api/config HTTP/1.1" 200 -
2025-07-21 11:46:24,705 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 11:46:24,705 - root - INFO - 获取Gemini可用模型列表
2025-07-21 11:46:24,705 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 11:46:24,706 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:46:24,706 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:46:24,706 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 11:46:25,814 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 11:46:25,814 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 11:46:25,815 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 11:46:40,698 - root - INFO - 请求: POST /api/generate-article
2025-07-21 11:46:40,698 - root - INFO - 生成文章请求
2025-07-21 11:46:40,698 - controllers.article_controller - INFO - 【唯一请求ID】706187bd-f28d-4b2f-a3af-06869308e76f - generate_article
2025-07-21 11:46:40,698 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '美IT公司高管演唱会上搂抱同事', 'word_count': 1000, 'image_count': 2, 'format_template': '\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '', 'negative_prompt': '', 'size': ''}}
2025-07-21 11:46:40,698 - controllers.article_controller - INFO - 开始生成文章，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:46:40,698 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 11:46:40,699 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:46:40,699 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 11:46:40,699 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 11:46:41,178 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘美IT公司高管演唱会上搂抱同事’的公众号文章，排版核心风格要与模板一致，字数约1000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 11:46:41,209 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:46:41,209 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:46:41,251 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CDE810>
2025-07-21 11:46:41,251 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009CCC050> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:46:41,269 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CDE3F0>
2025-07-21 11:46:41,269 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:46:41,269 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:46:41,269 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:46:41,270 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:46:41,270 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:46:54,554 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:46:54,555 - root - INFO - 获取生成历史请求
2025-07-21 11:46:54,555 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:46:54,555 - root - INFO - 获取发布历史请求
2025-07-21 11:46:54,556 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:46:54] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:46:54,556 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:46:54] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:47:24,554 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:47:24,555 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:47:24,556 - root - INFO - 获取生成历史请求
2025-07-21 11:47:24,556 - root - INFO - 获取发布历史请求
2025-07-21 11:47:24,559 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:47:24] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:47:24,560 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:47:24] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:47:54,556 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:47:54,556 - root - INFO - 获取生成历史请求
2025-07-21 11:47:54,557 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:47:54,557 - root - INFO - 获取发布历史请求
2025-07-21 11:47:54,558 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:47:54] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:47:54,558 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:47:54] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:48:01,169 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'3367b139-b9cb-9dcf-b6b7-0e691e66a726'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'79889'), (b'req-arrive-time', b'1753069600841'), (b'resp-start-time', b'1753069680730'), (b'x-envoy-upstream-service-time', b'79887'), (b'set-cookie', b'acw_tc=3367b139-b9cb-9dcf-b6b7-0e691e66a7260be5a3bd47f5c9d5bb30e3573ad48a4b;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:48:00 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:48:01,170 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:48:01,170 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:48:01,171 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:48:01,171 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:48:01,171 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:48:01,171 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '3367b139-b9cb-9dcf-b6b7-0e691e66a726', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '79889', 'req-arrive-time': '1753069600841', 'resp-start-time': '1753069680730', 'x-envoy-upstream-service-time': '79887', 'set-cookie': 'acw_tc=3367b139-b9cb-9dcf-b6b7-0e691e66a7260be5a3bd47f5c9d5bb30e3573ad48a4b;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:48:00 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:48:01,171 - openai._base_client - DEBUG - request_id: 3367b139-b9cb-9dcf-b6b7-0e691e66a726
2025-07-21 11:48:01,174 - controllers.article_controller - INFO - 文章内容生成成功，长度: 8213字符
2025-07-21 11:48:01,174 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 11:48:01,174 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:48:01,639 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：美IT公司高管演唱会上搂抱同事\n内容预览：```html 美IT公司高管演唱会上搂抱同事 body { font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Microsoft YaHei', sans-serif; background-color: white; margin: 0; padding: 0; } .title { font-size: 32px; font-weight: 700; margin: 0 0 16px; line-height: 1.2; color: white; } .title span { font-weight: 900; } .subtitle { font-size: 24px; font-weight: 700; margin: 0 0 20px;\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字："}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 11:48:01,640 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:48:01,640 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:48:01,675 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009D08FB0>
2025-07-21 11:48:01,675 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009CCFBD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:48:01,690 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CDE930>
2025-07-21 11:48:01,690 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:48:01,691 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:48:01,691 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:48:01,691 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:48:01,692 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:48:03,327 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'9c9427b1-b761-9073-b172-1413f4d25228'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1625'), (b'req-arrive-time', b'1753069681264'), (b'resp-start-time', b'1753069682890'), (b'x-envoy-upstream-service-time', b'1623'), (b'set-cookie', b'acw_tc=9c9427b1-b761-9073-b172-1413f4d2522876fde1832b3785d55e77a7e45807d30f;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:48:02 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:48:03,328 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:48:03,328 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:48:03,329 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:48:03,329 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:48:03,329 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:48:03,329 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '9c9427b1-b761-9073-b172-1413f4d25228', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1625', 'req-arrive-time': '1753069681264', 'resp-start-time': '1753069682890', 'x-envoy-upstream-service-time': '1623', 'set-cookie': 'acw_tc=9c9427b1-b761-9073-b172-1413f4d2522876fde1832b3785d55e77a7e45807d30f;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:48:02 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:48:03,330 - openai._base_client - DEBUG - request_id: 9c9427b1-b761-9073-b172-1413f4d25228
2025-07-21 11:48:03,330 - services.dashscope_service - INFO - 文章摘要生成成功: 美国某IT公司高管在演唱会期间被拍到与女同事搂抱互动，引发热议。事件背后折射出职场伦理、企业文化和公众人物私德的边界争议，值得职场人深思。
2025-07-21 11:48:03,331 - controllers.article_controller - INFO - 摘要生成完成: 美国某IT公司高管在演唱会期间被拍到与女同事搂抱互动，引发热议。事件背后折射出职场伦理、企业文化和公...
2025-07-21 11:48:03,331 - controllers.article_controller - INFO - 文章字数约: 1000，计划生成配图数量: 2
2025-07-21 11:48:03,331 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 11:48:03,331 - controllers.article_controller - INFO - 开始处理文章配图，计划生成2张图片（仅本地路径，不上传微信）
2025-07-21 11:48:03,331 - controllers.article_controller - INFO - 计划在第[4, 9]段后插入配图
2025-07-21 11:48:03,332 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 11:48:03,332 - controllers.article_controller - ERROR - 生成第1张配图时出错: name 'data' is not defined
2025-07-21 11:48:03,332 - controllers.article_controller - INFO - 生成第2张配图，使用模型: dashscope
2025-07-21 11:48:03,332 - controllers.article_controller - ERROR - 生成第2张配图时出错: name 'data' is not defined
2025-07-21 11:48:03,332 - controllers.article_controller - INFO - 配图处理完成，共插入0张图片
2025-07-21 11:48:03,341 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_美IT公司高管演唱会上搂抱同事_20250721_114803.html
2025-07-21 11:48:03,341 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 11:48:03,375 - httpcore.connection - DEBUG - close.started
2025-07-21 11:48:03,375 - httpcore.connection - DEBUG - close.complete
2025-07-21 11:48:03,412 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 11:48:03,412 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 8011
2025-07-21 11:48:03,414 - controllers.article_controller - INFO - 发现1个<style>标签，开始内联处理
2025-07-21 11:48:03,422 - controllers.article_controller - INFO - 样式内联处理完成，应用了28个CSS规则
2025-07-21 11:48:03,423 - controllers.article_controller - INFO - 内容清理完成，移除了 1702 个字符，清理后长度: 6511
2025-07-21 11:48:03,426 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_美IT公司高管演唱会上搂抱同事_20250721_114803.html
2025-07-21 11:48:03,426 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=美IT公司高管演唱会上搂抱同事, 内容前100字=<!DOCTYPE html>

<html lang="zh-CN">
<head>
<meta charset="utf-8"/>
<meta content="width=device-widt, 图片数=1
2025-07-21 11:48:03,426 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:48:03,427 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:48:03,431 - services.history_service - INFO - 添加生成历史记录: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:48:03,431 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 11:48:03,432 - controllers.article_controller - INFO - 生成结果预览: 标题=美IT公司高管演唱会上搂抱同事, 内容长度=6511, 配图数量=2
2025-07-21 11:48:03,432 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:03] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 11:48:03,440 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:48:03,440 - root - INFO - 获取生成历史请求
2025-07-21 11:48:03,441 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:03] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:48:11,014 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 11:48:11,015 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 11:48:11,016 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 11:48:11,017 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:11] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 11:48:11,039 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 11:48:11,039 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 11:48:11,040 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:48:11,041 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:48:11,042 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:48:11,042 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 11:48:11,043 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:48:11,048 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 11:48:11,209 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 11:48:11,210 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 11:48:11,210 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 11:48:11,210 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 11:48:11,210 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 11:48:11,211 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 11:48:11,211 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 11:48:11,212 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:11] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 11:48:11,221 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 11:48:11,221 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 11:48:11,221 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 11:48:11,222 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:48:11,222 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:48:11,223 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 11:48:11,703 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000000A17560>, 'json_data': None}
2025-07-21 11:48:11,703 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 11:48:11,704 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:48:11,731 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000009ED760>
2025-07-21 11:48:11,731 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000009FDED0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:48:11,751 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000009ED490>
2025-07-21 11:48:11,751 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 11:48:11,752 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:48:11,752 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 11:48:11,752 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:48:11,752 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 11:48:11,794 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'2b0f4e4c-88b3-9c17-806d-3f86ab965622'), (b'content-type', b'application/json'), (b'req-cost-time', b'27'), (b'req-arrive-time', b'1753069691327'), (b'resp-start-time', b'1753069691354'), (b'x-envoy-upstream-service-time', b'26'), (b'set-cookie', b'acw_tc=2b0f4e4c-88b3-9c17-806d-3f86ab9656224b560c862bcfe216b950d18e2cd09896;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:48:11 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:48:11,794 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 11:48:11,795 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 11:48:11,795 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:48:11,795 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:48:11,796 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:48:11,796 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '2b0f4e4c-88b3-9c17-806d-3f86ab965622', 'content-type': 'application/json', 'req-cost-time': '27', 'req-arrive-time': '1753069691327', 'resp-start-time': '1753069691354', 'x-envoy-upstream-service-time': '26', 'set-cookie': 'acw_tc=2b0f4e4c-88b3-9c17-806d-3f86ab9656224b560c862bcfe216b950d18e2cd09896;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:48:11 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:48:11,796 - openai._base_client - DEBUG - request_id: 2b0f4e4c-88b3-9c17-806d-3f86ab965622
2025-07-21 11:48:11,800 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 11:48:11,800 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 11:48:11,800 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 11:48:11,800 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 11:48:11,801 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 11:48:11,801 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 11:48:11,801 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 11:48:11,802 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:11] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 11:48:11,809 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:48:11,809 - root - INFO - 获取生成历史请求
2025-07-21 11:48:11,810 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:11] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:48:11,817 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:48:11,817 - root - INFO - 获取发布历史请求
2025-07-21 11:48:11,817 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:11] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:48:24,548 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:48:24,549 - root - INFO - 获取生成历史请求
2025-07-21 11:48:24,549 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:48:24,549 - root - INFO - 获取发布历史请求
2025-07-21 11:48:24,550 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:24] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:48:24,550 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:24] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:48:55,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:48:55,178 - root - INFO - 获取生成历史请求
2025-07-21 11:48:55,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:48:55,179 - root - INFO - 获取发布历史请求
2025-07-21 11:48:55,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:55] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:48:55,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:48:55] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:49:25,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:49:25,182 - root - INFO - 获取生成历史请求
2025-07-21 11:49:25,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:49:25,182 - root - INFO - 获取发布历史请求
2025-07-21 11:49:25,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:49:25] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:49:25,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:49:25] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:50:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:50:17,188 - root - INFO - 获取生成历史请求
2025-07-21 11:50:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:50:17,189 - root - INFO - 获取发布历史请求
2025-07-21 11:50:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:50:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:50:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:50:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:51:17,198 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:51:17,200 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:51:17,200 - root - INFO - 获取生成历史请求
2025-07-21 11:51:17,201 - root - INFO - 获取发布历史请求
2025-07-21 11:51:17,206 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:51:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:51:17,208 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:51:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:52:17,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:52:17,183 - root - INFO - 获取生成历史请求
2025-07-21 11:52:17,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:52:17,183 - root - INFO - 获取发布历史请求
2025-07-21 11:52:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:52:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:52:35,734 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:52:35,734 - root - INFO - 获取生成历史请求
2025-07-21 11:52:35,735 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:52:35,735 - root - INFO - 获取发布历史请求
2025-07-21 11:52:35,736 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:35] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:52:35,737 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:35] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:52:51,366 - root - INFO - 应用目录创建完成
2025-07-21 11:52:51,366 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:52:51,366 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:52:51,367 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:52:51,367 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:52:51,367 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 11:52:51,367 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:52:51,367 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:52:51,367 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:52:51,367 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 11:52:51,367 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:52:51,367 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 11:52:51,368 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 11:52:51,368 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 11:52:52,234 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 11:52:52,234 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 11:52:53,695 - root - INFO - 请求: GET /
2025-07-21 11:52:53,695 - root - INFO - 访问主页面
2025-07-21 11:52:53,706 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:53] "GET / HTTP/1.1" 200 -
2025-07-21 11:52:53,773 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:52:53,777 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:52:53,779 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:52:53,945 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:53] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:52:53,954 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:53] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:52:53,963 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:53] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:52:54,043 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:52:54,043 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:54] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:52:54,059 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:52:54,064 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:54] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:52:54,074 - root - INFO - 请求: GET /api/config
2025-07-21 11:52:54,074 - root - INFO - 处理配置请求: GET
2025-07-21 11:52:54,074 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 11:52:54,075 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:52:54,075 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 11:52:54,075 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:52:54] "GET /api/config HTTP/1.1" 200 -
2025-07-21 11:52:54,233 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 11:52:54,234 - root - INFO - 获取Gemini可用模型列表
2025-07-21 11:52:54,234 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 11:52:54,234 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:52:54,234 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:52:54,234 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 11:52:55,373 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 11:52:55,373 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 11:52:55,374 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 11:53:06,718 - root - INFO - 请求: POST /api/generate-article
2025-07-21 11:53:06,719 - root - INFO - 生成文章请求
2025-07-21 11:53:06,719 - controllers.article_controller - INFO - 【唯一请求ID】8782a84f-61e4-43ed-8412-5a8496e6379b - generate_article
2025-07-21 11:53:06,719 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '美IT公司高管演唱会上搂抱同事', 'word_count': 1000, 'image_count': 3, 'format_template': '\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '', 'negative_prompt': '', 'size': ''}}
2025-07-21 11:53:06,719 - controllers.article_controller - INFO - 开始生成文章，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:53:06,719 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 11:53:06,720 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:53:06,720 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 11:53:06,720 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 11:53:07,237 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘美IT公司高管演唱会上搂抱同事’的公众号文章，排版核心风格要与模板一致，字数约1000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 11:53:07,267 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:53:07,267 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:53:07,308 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C427E0>
2025-07-21 11:53:07,309 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009C30050> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:53:07,326 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C42540>
2025-07-21 11:53:07,326 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:53:07,327 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:53:07,327 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:53:07,327 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:53:07,327 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:53:24,075 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:53:24,075 - root - INFO - 获取生成历史请求
2025-07-21 11:53:24,076 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:53:24,076 - root - INFO - 获取发布历史请求
2025-07-21 11:53:24,076 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:53:24] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:53:24,078 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:53:24] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:53:54,077 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:53:54,077 - root - INFO - 获取生成历史请求
2025-07-21 11:53:54,077 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:53:54,078 - root - INFO - 获取发布历史请求
2025-07-21 11:53:54,078 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:53:54] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:53:54,079 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:53:54] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:53:56,082 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'0f4f08ab-9f00-901e-bf0d-f4feebd92c94'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'48743'), (b'req-arrive-time', b'1753069986904'), (b'resp-start-time', b'1753070035647'), (b'x-envoy-upstream-service-time', b'48740'), (b'set-cookie', b'acw_tc=0f4f08ab-9f00-901e-bf0d-f4feebd92c948df01757dbd5f06b1b99b0b14063691f;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:53:55 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:53:56,082 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:53:56,083 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:53:56,083 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:53:56,083 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:53:56,083 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:53:56,084 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '0f4f08ab-9f00-901e-bf0d-f4feebd92c94', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '48743', 'req-arrive-time': '1753069986904', 'resp-start-time': '1753070035647', 'x-envoy-upstream-service-time': '48740', 'set-cookie': 'acw_tc=0f4f08ab-9f00-901e-bf0d-f4feebd92c948df01757dbd5f06b1b99b0b14063691f;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:53:55 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:53:56,084 - openai._base_client - DEBUG - request_id: 0f4f08ab-9f00-901e-bf0d-f4feebd92c94
2025-07-21 11:53:56,086 - controllers.article_controller - INFO - 文章内容生成成功，长度: 5491字符
2025-07-21 11:53:56,087 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 11:53:56,087 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:53:56,561 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：美IT公司高管演唱会上搂抱同事\n内容预览：```html 美IT公司高管演唱会上搂抱同事 body { font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Microsoft YaHei', sans-serif; background-color: white; color: #444; margin: 0; padding: 0; } h1 { font-size: 32px; font-weight: 700; margin: 0 0 16px; line-height: 1.2; color: white; } h1 span { font-weight: 900; } h2 { font-size: 24px; font-weight: 700; margin: 0 0 20px;\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字："}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 11:53:56,562 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:53:56,562 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:53:56,583 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C68E60>
2025-07-21 11:53:56,583 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009C33BD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:53:56,601 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C43B30>
2025-07-21 11:53:56,602 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:53:56,602 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:53:56,602 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:53:56,602 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:53:56,602 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:53:57,789 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1073ae09-71b0-949f-b381-537435a9538e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1173'), (b'req-arrive-time', b'1753070036182'), (b'resp-start-time', b'1753070037355'), (b'x-envoy-upstream-service-time', b'1172'), (b'set-cookie', b'acw_tc=1073ae09-71b0-949f-b381-537435a9538eaf5310da94f6f07037ada39814354d72;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:53:57 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:53:57,789 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:53:57,790 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:53:57,790 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:53:57,790 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:53:57,790 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:53:57,791 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1073ae09-71b0-949f-b381-537435a9538e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1173', 'req-arrive-time': '1753070036182', 'resp-start-time': '1753070037355', 'x-envoy-upstream-service-time': '1172', 'set-cookie': 'acw_tc=1073ae09-71b0-949f-b381-537435a9538eaf5310da94f6f07037ada39814354d72;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:53:57 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:53:57,791 - openai._base_client - DEBUG - request_id: 1073ae09-71b0-949f-b381-537435a9538e
2025-07-21 11:53:57,791 - services.dashscope_service - INFO - 文章摘要生成成功: 美国某IT公司高管在演唱会上搂抱同事引发热议，事件背后折射出职场文化与个人行为边界问题。文章深度剖析事件影响，探讨企业价值观与员工行为规范的平衡之道，引发职场人深思。
2025-07-21 11:53:57,791 - controllers.article_controller - INFO - 摘要生成完成: 美国某IT公司高管在演唱会上搂抱同事引发热议，事件背后折射出职场文化与个人行为边界问题。文章深度剖析...
2025-07-21 11:53:57,791 - controllers.article_controller - INFO - 文章字数约: 1000，计划生成配图数量: 3
2025-07-21 11:53:57,792 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 11:53:57,792 - controllers.article_controller - INFO - 开始处理文章配图，计划生成3张图片（仅本地路径，不上传微信）
2025-07-21 11:53:57,792 - controllers.article_controller - INFO - 计划在第[3, 6, 10]段后插入配图
2025-07-21 11:53:57,792 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 11:53:57,792 - controllers.article_controller - ERROR - 阿里云百炼模型ID未传递
2025-07-21 11:53:57,904 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_美IT公司高管演唱会上搂抱同事_20250721_115357.html
2025-07-21 11:53:57,904 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 11:53:57,935 - httpcore.connection - DEBUG - close.started
2025-07-21 11:53:57,935 - httpcore.connection - DEBUG - close.complete
2025-07-21 11:53:57,971 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 11:53:57,971 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 5462
2025-07-21 11:53:57,973 - controllers.article_controller - INFO - 发现1个<style>标签，开始内联处理
2025-07-21 11:53:57,977 - controllers.article_controller - INFO - 样式内联处理完成，应用了19个CSS规则
2025-07-21 11:53:57,978 - controllers.article_controller - INFO - 内容清理完成，未发现需要清理的内容
2025-07-21 11:53:57,981 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_美IT公司高管演唱会上搂抱同事_20250721_115357.html
2025-07-21 11:53:57,982 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=美IT公司高管演唱会上搂抱同事, 内容前100字=<!DOCTYPE html>

<html lang="zh-CN">
<head>
<meta charset="utf-8"/>
<meta content="width=device-widt, 图片数=1
2025-07-21 11:53:57,982 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:53:57,982 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:53:57,987 - services.history_service - INFO - 添加生成历史记录: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:53:57,987 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 11:53:57,987 - controllers.article_controller - INFO - 生成结果预览: 标题=美IT公司高管演唱会上搂抱同事, 内容长度=5836, 配图数量=3
2025-07-21 11:53:57,988 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:53:57] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 11:53:57,996 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:53:57,996 - root - INFO - 请求: GET /【微信永久素材URL】
2025-07-21 11:53:57,996 - root - INFO - 获取生成历史请求
2025-07-21 11:53:57,997 - root - WARNING - 404错误: http://192.168.124.16:5000/【微信永久素材URL】
2025-07-21 11:53:57,997 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:53:57] "[33mGET /【微信永久素材URL】 HTTP/1.1[0m" 404 -
2025-07-21 11:53:57,998 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:53:57] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:54:24,091 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:54:24,093 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:54:24,093 - root - INFO - 获取生成历史请求
2025-07-21 11:54:24,095 - root - INFO - 获取发布历史请求
2025-07-21 11:54:24,099 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:54:24] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:54:24,101 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:54:24] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:54:54,088 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:54:54,089 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:54:54,089 - root - INFO - 获取生成历史请求
2025-07-21 11:54:54,089 - root - INFO - 获取发布历史请求
2025-07-21 11:54:54,091 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:54:54] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:54:54,091 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:54:54] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:55:24,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:55:24,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:55:24,186 - root - INFO - 获取生成历史请求
2025-07-21 11:55:24,186 - root - INFO - 获取发布历史请求
2025-07-21 11:55:24,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:55:24] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:55:24,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:55:24] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:55:43,728 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 11:55:43,730 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 11:55:43,731 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 11:55:43,732 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:55:43] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 11:55:43,747 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 11:55:43,747 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 11:55:43,747 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:55:43,749 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:55:43,750 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:55:43,750 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 11:55:43,751 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 11:55:43,755 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 11:55:43,859 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 11:55:43,860 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 11:55:43,860 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 11:55:43,861 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 11:55:43,861 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 11:55:43,861 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 11:55:43,861 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 11:55:43,862 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:55:43] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 11:55:43,869 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 11:55:43,870 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 11:55:43,870 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 11:55:43,870 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:55:43,870 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:55:43,871 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 11:55:44,338 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x00000000009CB4C0>, 'json_data': None}
2025-07-21 11:55:44,339 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 11:55:44,339 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:55:44,384 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000009D5820>
2025-07-21 11:55:44,384 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008C03BD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:55:44,403 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000009D6450>
2025-07-21 11:55:44,404 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 11:55:44,406 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:55:44,407 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 11:55:44,408 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:55:44,409 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 11:55:44,455 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'c4dd3390-7fd1-9716-b7cc-2acf591227e6'), (b'content-type', b'application/json'), (b'req-cost-time', b'35'), (b'req-arrive-time', b'1753070143986'), (b'resp-start-time', b'1753070144021'), (b'x-envoy-upstream-service-time', b'34'), (b'set-cookie', b'acw_tc=c4dd3390-7fd1-9716-b7cc-2acf591227e62f8df8ed86018c2e295ffbb59ba5dfc2;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:55:43 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:55:44,456 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 11:55:44,457 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 11:55:44,459 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:55:44,460 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:55:44,460 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:55:44,462 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'c4dd3390-7fd1-9716-b7cc-2acf591227e6', 'content-type': 'application/json', 'req-cost-time': '35', 'req-arrive-time': '1753070143986', 'resp-start-time': '1753070144021', 'x-envoy-upstream-service-time': '34', 'set-cookie': 'acw_tc=c4dd3390-7fd1-9716-b7cc-2acf591227e62f8df8ed86018c2e295ffbb59ba5dfc2;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:55:43 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:55:44,463 - openai._base_client - DEBUG - request_id: c4dd3390-7fd1-9716-b7cc-2acf591227e6
2025-07-21 11:55:44,479 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 11:55:44,480 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 11:55:44,481 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 11:55:44,482 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 11:55:44,484 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 11:55:44,484 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 11:55:44,486 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 11:55:44,488 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:55:44] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 11:55:44,503 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:55:44,503 - root - INFO - 获取生成历史请求
2025-07-21 11:55:44,506 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:55:44] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:55:44,518 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:55:44,518 - root - INFO - 获取发布历史请求
2025-07-21 11:55:44,519 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:55:44] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:55:54,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:55:54,179 - root - INFO - 获取生成历史请求
2025-07-21 11:55:54,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:55:54,179 - root - INFO - 获取发布历史请求
2025-07-21 11:55:54,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:55:54] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:55:54,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:55:54] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:57:17,175 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:57:17,176 - root - INFO - 获取生成历史请求
2025-07-21 11:57:17,176 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:57:17,176 - root - INFO - 获取发布历史请求
2025-07-21 11:57:17,177 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:57:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:57:17,177 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:57:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:57:42,003 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:57:42,003 - root - INFO - 获取生成历史请求
2025-07-21 11:57:42,004 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:57:42,004 - root - INFO - 获取发布历史请求
2025-07-21 11:57:42,005 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:57:42] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:57:42,006 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:57:42] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:57:54,081 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:57:54,082 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:57:54,083 - root - INFO - 获取生成历史请求
2025-07-21 11:57:54,083 - root - INFO - 获取发布历史请求
2025-07-21 11:57:54,085 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:57:54] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:57:54,086 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:57:54] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:58:26,910 - root - INFO - 应用目录创建完成
2025-07-21 11:58:26,910 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:58:26,910 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:58:26,911 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:58:26,911 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:58:26,911 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 11:58:26,911 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 11:58:26,911 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 11:58:26,911 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 11:58:26,911 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 11:58:26,911 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 11:58:26,911 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 11:58:26,912 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 11:58:26,912 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 11:58:27,779 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 11:58:27,779 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 11:58:30,059 - root - INFO - 请求: GET /
2025-07-21 11:58:30,059 - root - INFO - 访问主页面
2025-07-21 11:58:30,069 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:58:30] "GET / HTTP/1.1" 200 -
2025-07-21 11:58:30,131 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 11:58:30,144 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 11:58:30,147 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 11:58:30,318 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:58:30] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 11:58:30,346 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:58:30] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 11:58:30,350 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:58:30] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 11:58:30,424 - root - INFO - 请求: GET /api/get_ip
2025-07-21 11:58:30,425 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:58:30] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 11:58:30,439 - root - INFO - 请求: GET /api/style-templates
2025-07-21 11:58:30,446 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:58:30] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 11:58:30,456 - root - INFO - 请求: GET /api/config
2025-07-21 11:58:30,457 - root - INFO - 处理配置请求: GET
2025-07-21 11:58:30,458 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 11:58:30,459 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:58:30,460 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 11:58:30,461 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:58:30] "GET /api/config HTTP/1.1" 200 -
2025-07-21 11:58:30,616 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 11:58:30,617 - root - INFO - 获取Gemini可用模型列表
2025-07-21 11:58:30,617 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 11:58:30,617 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:58:30,617 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:58:30,618 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 11:58:31,722 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 11:58:31,722 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 11:58:31,723 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 11:58:48,858 - root - INFO - 请求: POST /api/generate-article
2025-07-21 11:58:48,858 - root - INFO - 生成文章请求
2025-07-21 11:58:48,858 - controllers.article_controller - INFO - 【唯一请求ID】192833e3-0c69-4b47-a9dd-767d60cd49f1 - generate_article
2025-07-21 11:58:48,859 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '美IT公司高管演唱会上搂抱同事', 'word_count': 2000, 'image_count': 3, 'format_template': '\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '', 'negative_prompt': '', 'size': ''}}
2025-07-21 11:58:48,859 - controllers.article_controller - INFO - 开始生成文章，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:58:48,859 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 11:58:48,860 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 11:58:48,860 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 11:58:48,860 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 11:58:49,331 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘美IT公司高管演唱会上搂抱同事’的公众号文章，排版核心风格要与模板一致，字数约2000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 11:58:49,361 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:58:49,362 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:58:49,383 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB26C0>
2025-07-21 11:58:49,383 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BA0050> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:58:49,399 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB22A0>
2025-07-21 11:58:49,399 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:58:49,400 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:58:49,400 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:58:49,400 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:58:49,401 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:59:00,462 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:59:00,463 - root - INFO - 获取生成历史请求
2025-07-21 11:59:00,463 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:59:00,463 - root - INFO - 获取发布历史请求
2025-07-21 11:59:00,465 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:59:00] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:59:00,465 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:59:00] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:59:30,459 - root - INFO - 请求: GET /api/generation-history
2025-07-21 11:59:30,460 - root - INFO - 请求: GET /api/publish-history
2025-07-21 11:59:30,460 - root - INFO - 获取生成历史请求
2025-07-21 11:59:30,460 - root - INFO - 获取发布历史请求
2025-07-21 11:59:30,461 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:59:30] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 11:59:30,462 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:59:30] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 11:59:33,901 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'fe4ec86e-2516-93e9-8910-1f75d4fbe425'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'44489'), (b'req-arrive-time', b'1753070328983'), (b'resp-start-time', b'1753070373473'), (b'x-envoy-upstream-service-time', b'44487'), (b'set-cookie', b'acw_tc=fe4ec86e-2516-93e9-8910-1f75d4fbe425be7c49e14e5edc6875a5c82d7cd07315;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:59:33 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:59:34,228 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:59:34,228 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:59:34,228 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:59:34,229 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:59:34,229 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:59:34,229 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'fe4ec86e-2516-93e9-8910-1f75d4fbe425', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '44489', 'req-arrive-time': '1753070328983', 'resp-start-time': '1753070373473', 'x-envoy-upstream-service-time': '44487', 'set-cookie': 'acw_tc=fe4ec86e-2516-93e9-8910-1f75d4fbe425be7c49e14e5edc6875a5c82d7cd07315;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:59:33 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:59:34,229 - openai._base_client - DEBUG - request_id: fe4ec86e-2516-93e9-8910-1f75d4fbe425
2025-07-21 11:59:34,231 - controllers.article_controller - INFO - 文章内容生成成功，长度: 5436字符
2025-07-21 11:59:34,231 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 11:59:34,231 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 美IT公司高管演唱会上搂抱同事
2025-07-21 11:59:34,700 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：美IT公司高管演唱会上搂抱同事\n内容预览：```html 美IT公司高管演唱会上搂抱同事：职场情感还是越界行为？ body { font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Microsoft YaHei', sans-serif; background-color: white; color: #444; line-height: 1.6; margin: 0; padding: 0; } h1 { font-size: 32px; font-weight: 700; margin: 0 0 16px; line-height: 1.2; color: white; } h1 span { font-weight: 900; } h2 { font-size: 24px; font-weight: 700; margin: 0 0 20px; color: rgb(24, 40, 72);\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字："}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 11:59:34,700 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 11:59:34,701 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 11:59:34,746 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BD9160>
2025-07-21 11:59:34,747 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BA3BD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 11:59:34,768 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB2C60>
2025-07-21 11:59:34,769 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 11:59:34,770 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 11:59:34,771 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 11:59:34,772 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 11:59:34,772 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 11:59:35,988 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'c50ea24d-3add-9a5d-9164-adeb667e28dd'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1203'), (b'req-arrive-time', b'1753070374356'), (b'resp-start-time', b'1753070375559'), (b'x-envoy-upstream-service-time', b'1201'), (b'set-cookie', b'acw_tc=c50ea24d-3add-9a5d-9164-adeb667e28dd7f1b67d005de8a2a0f80d681614e9ceb;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 03:59:35 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 11:59:35,988 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 11:59:35,988 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 11:59:35,988 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 11:59:35,989 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 11:59:35,989 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 11:59:35,989 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'c50ea24d-3add-9a5d-9164-adeb667e28dd', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1203', 'req-arrive-time': '1753070374356', 'resp-start-time': '1753070375559', 'x-envoy-upstream-service-time': '1201', 'set-cookie': 'acw_tc=c50ea24d-3add-9a5d-9164-adeb667e28dd7f1b67d005de8a2a0f80d681614e9ceb;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 03:59:35 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 11:59:35,989 - openai._base_client - DEBUG - request_id: c50ea24d-3add-9a5d-9164-adeb667e28dd
2025-07-21 11:59:35,990 - services.dashscope_service - INFO - 文章摘要生成成功: 美IT公司高管在演唱会上搂抱同事引发热议，职场情感边界再引讨论。文章探讨职场关系的尺度与规范，分析公众对职场越界行为的看法，为职场人提供反思与借鉴。
2025-07-21 11:59:35,990 - controllers.article_controller - INFO - 摘要生成完成: 美IT公司高管在演唱会上搂抱同事引发热议，职场情感边界再引讨论。文章探讨职场关系的尺度与规范，分析公...
2025-07-21 11:59:35,990 - controllers.article_controller - INFO - 文章字数约: 2000，计划生成配图数量: 3
2025-07-21 11:59:35,990 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 11:59:35,991 - controllers.article_controller - ERROR - 生成文章时发生错误: name 'dashscope_params' is not defined
Traceback (most recent call last):
  File "G:\uniapp-x\微信公众号\CodeStash\CodeStash\controllers\article_controller.py", line 186, in generate_article
    dashscope_params=dashscope_params, dashscope_image_model_code=dashscope_image_model_code
                     ^^^^^^^^^^^^^^^^
NameError: name 'dashscope_params' is not defined
2025-07-21 11:59:35,995 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 11:59:35] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 12:00:00,468 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:00:00,468 - root - INFO - 获取生成历史请求
2025-07-21 12:00:00,469 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:00:00,469 - root - INFO - 获取发布历史请求
2025-07-21 12:00:00,469 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:00:00] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:00:00,470 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:00:00] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:00:16,930 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 12:00:16,930 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 12:00:16,930 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 12:00:16,931 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:00:16] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 12:00:16,937 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 12:00:16,937 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 12:00:16,937 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:00:16,938 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:00:16,938 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:00:16,938 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 12:00:16,938 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:00:16,940 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 12:00:17,049 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 12:00:17,605 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 12:00:17,605 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 12:00:17,605 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 12:00:17,606 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 12:00:17,606 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 12:00:17,606 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 12:00:17,606 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:00:17] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 12:00:17,615 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 12:00:17,615 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 12:00:17,615 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 12:00:17,615 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:00:17,615 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:00:17,615 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 12:00:18,086 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000009C0CA40>, 'json_data': None}
2025-07-21 12:00:18,086 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 12:00:18,087 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:00:18,130 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB3320>
2025-07-21 12:00:18,130 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BF1B50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:00:18,145 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB3020>
2025-07-21 12:00:18,145 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 12:00:18,146 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:00:18,146 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 12:00:18,146 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:00:18,146 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 12:00:18,198 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'8444d072-9701-9f6a-a3bf-43139bad75af'), (b'content-type', b'application/json'), (b'req-cost-time', b'37'), (b'req-arrive-time', b'1753070417731'), (b'resp-start-time', b'1753070417769'), (b'x-envoy-upstream-service-time', b'37'), (b'set-cookie', b'acw_tc=8444d072-9701-9f6a-a3bf-43139bad75af1a52d7708d72c91bab95d999b12a263a;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:00:17 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:00:18,198 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 12:00:18,199 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 12:00:18,199 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:00:18,199 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:00:18,199 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:00:18,200 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '8444d072-9701-9f6a-a3bf-43139bad75af', 'content-type': 'application/json', 'req-cost-time': '37', 'req-arrive-time': '1753070417731', 'resp-start-time': '1753070417769', 'x-envoy-upstream-service-time': '37', 'set-cookie': 'acw_tc=8444d072-9701-9f6a-a3bf-43139bad75af1a52d7708d72c91bab95d999b12a263a;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:00:17 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:00:18,200 - openai._base_client - DEBUG - request_id: 8444d072-9701-9f6a-a3bf-43139bad75af
2025-07-21 12:00:18,203 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 12:00:18,203 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 12:00:18,203 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 12:00:18,203 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 12:00:18,203 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 12:00:18,203 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 12:00:18,204 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 12:00:18,204 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:00:18] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 12:00:18,217 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:00:18,217 - root - INFO - 获取生成历史请求
2025-07-21 12:00:18,218 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:00:18] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:00:18,228 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:00:18,229 - root - INFO - 获取发布历史请求
2025-07-21 12:00:18,229 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:00:18] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:00:31,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:00:31,189 - root - INFO - 获取生成历史请求
2025-07-21 12:00:31,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:00:31,190 - root - INFO - 获取发布历史请求
2025-07-21 12:00:31,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:00:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:00:31,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:00:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:01:01,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:01:01,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:01:01,192 - root - INFO - 获取生成历史请求
2025-07-21 12:01:01,193 - root - INFO - 获取发布历史请求
2025-07-21 12:01:01,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:01:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:01:01,198 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:01:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:01:31,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:01:31,188 - root - INFO - 获取生成历史请求
2025-07-21 12:01:31,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:01:31,188 - root - INFO - 获取发布历史请求
2025-07-21 12:01:31,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:01:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:01:31,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:01:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:02:26,732 - root - INFO - 应用目录创建完成
2025-07-21 12:02:26,732 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:02:26,733 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:02:26,733 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:02:26,733 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:02:26,733 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 12:02:26,733 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:02:26,734 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:02:26,734 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:02:26,734 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 12:02:26,734 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:02:26,734 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 12:02:26,735 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 12:02:26,735 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 12:02:27,605 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 12:02:27,605 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 12:02:31,219 - root - INFO - 请求: GET /
2025-07-21 12:02:31,219 - root - INFO - 访问主页面
2025-07-21 12:02:31,230 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:02:31] "GET / HTTP/1.1" 200 -
2025-07-21 12:02:31,287 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 12:02:31,289 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 12:02:31,291 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 12:02:31,487 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:02:31] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 12:02:31,488 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:02:31] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 12:02:31,491 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:02:31] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 12:02:31,571 - root - INFO - 请求: GET /api/get_ip
2025-07-21 12:02:31,572 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:02:31] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 12:02:31,586 - root - INFO - 请求: GET /api/style-templates
2025-07-21 12:02:31,590 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:02:31] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 12:02:31,602 - root - INFO - 请求: GET /api/config
2025-07-21 12:02:31,602 - root - INFO - 处理配置请求: GET
2025-07-21 12:02:31,603 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 12:02:31,603 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:02:31,603 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 12:02:31,604 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:02:31] "GET /api/config HTTP/1.1" 200 -
2025-07-21 12:02:31,760 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 12:02:31,760 - root - INFO - 获取Gemini可用模型列表
2025-07-21 12:02:31,760 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 12:02:31,761 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:02:31,761 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:02:31,761 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 12:02:32,867 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 12:02:32,868 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 12:02:32,868 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 12:02:54,576 - root - INFO - 请求: POST /api/generate-article
2025-07-21 12:02:54,577 - root - INFO - 生成文章请求
2025-07-21 12:02:54,577 - controllers.article_controller - INFO - 【唯一请求ID】9243e60e-d591-4b30-919f-a1eb235b7739 - generate_article
2025-07-21 12:02:54,577 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '请直接修复 dashscope_params 未定义问题', 'word_count': 1000, 'image_count': 3, 'format_template': '\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '', 'negative_prompt': '', 'size': ''}}
2025-07-21 12:02:54,577 - controllers.article_controller - INFO - 开始生成文章，标题: 请直接修复 dashscope_params 未定义问题
2025-07-21 12:02:54,578 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 12:02:54,578 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:02:54,578 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 12:02:54,578 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 12:02:55,048 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘请直接修复 dashscope_params 未定义问题’的公众号文章，排版核心风格要与模板一致，字数约1000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n\ufeff*   **通用字体**: `font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;`\n*   **背景色 (白色)**: `background-color: white;`\n*   **卡片/区块通用样式**: `padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px;`\n\n\n<!-- 1. 标题样式 (H1, H2, H3, Span) -->\n\n<!-- 1.1 主标题 (H1) 样式 -->\n*   `font-size: 32px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 16px;`\n*   `line-height: 1.2;`\n*   `color: white;` (用于深色背景)\n*   **强调部分 (H1内的Span)**: `font-weight: 900;`\n\n<!-- 1.2 二级标题 (H2) 样式 -->\n*   `font-size: 24px;`\n*   `font-weight: 700;`\n*   `margin: 0 0 20px;`\n*   `color: rgb(24, 40, 72);`\n*   **带底部线 (H2下的Span)**: `display: block; width: 64px; height: 4px; background: linear-gradient(90deg, rgb(24, 40, 72) 0%, rgb(75, 108, 183) 100%); bottom: -8px; border-radius: 2px; margin-top: 12px;`\n\n<!-- 1.3 三级标题 (H3) 样式 -->\n*   `font-size: 18px;`\n*   `margin: 0 0 8px;`\n*   `color: rgb(51, 51, 51);`\n*   `font-weight: 700;` (可选)\n*   `color: #4b6cb7;` (可选，用于标题色)\n*   **小卡片内H3**: `font-size: 16px; margin: 0 0 4px; color: #333;`\n\n\n<!-- 2. 段落 (P) 样式 -->\n\n<!-- 2.1 主体内容段落 -->\n*   `font-size: 16px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.2 强调/引言段落 -->\n*   `font-size: 18px;`\n*   `line-height: 1.8;`\n*   `margin: 0 0 16px;`\n*   `font-weight: 500;`\n*   `color: rgb(66, 66, 66);`\n\n<!-- 2.3 辅助/描述段落 -->\n*   `font-size: 14px;`\n*   `margin: 0;`\n*   `color: rgb(102, 102, 102);`\n*   `line-height: 1.6;` (可选)\n*   `opacity: 0.9;` (用于深色背景)\n\n<!-- 2.4 结束语大字样式 -->\n*   `font-size: 18px;`\n*   `font-weight: 700;`\n*   `color: #182848;`\n*   `margin: 0;`\n*   `text-align: center;`\n*   **结束语强调词 (Span)**: `font-size: 28px;`\n\n\n<!-- 3. 图片 (IMG) 样式 -->\n<!-- AI需自行构建 <img alt="图片描述" src="【微信永久素材URL】" ...> -->\n*   **通用图片**: `width: 100%; height: auto; object-fit: cover; display: block; max-width: 100%;`\n*   **固定高度图片 (如卡片顶部)**: `width: 100%; height: 200px; object-fit: cover; display: block; max-width: 100%; max-height: 200px;`\n\n\n<!-- 4. SVG 图标 (AI直接内联SVG代码) -->\n<!-- AI需自行构建 <svg width="..." height="..." viewBox="..." style="..."><path fill="..." d="..."></path></svg> -->\n*   **通用图标**: `width: 32px; height: 32px; margin-bottom: 8px;`\n*   **小图标**: `width: 20px; height: 20px; margin-right: 8px;`\n*   **大图标**: `width: 40px; height: 40px; margin: 0 auto 8px;`\n*   **路径填充色 (蓝色)**: `fill: #4b6cb7;`\n*   **路径填充色 (白色)**: `fill: white;`\n\n\n<!-- 5. 容器/区块 (DIV) 样式 -->\n<!-- AI可将H/P/IMG/SVG等元素组合放入这些div中，实现复杂布局。 -->\n\n<!-- 5.1 渐变背景容器 (深蓝色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, rgb(75, 108, 183) 0%, rgb(24, 40, 72) 100%);`\n*   `color: white;`\n*   `margin-bottom: 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.2 渐变背景容器 (暖色) -->\n*   `padding: 24px 16px;`\n*   `background: linear-gradient(135deg, #fad0c4 0%, #ff9a9e 100%);`\n*   `color: white;`\n*   `margin: 0 0 20px;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.1);`\n\n<!-- 5.3 浅色背景容器 (默认，带阴影和圆角) -->\n*   `padding: 24px 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px;`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.4 浅灰色背景容器 -->\n*   `padding: 24px 16px;`\n*   `background-color: #f8f9fa;`\n*   `border-radius: 12px;`\n*   `box-shadow: 0 4px 12px rgba(0,0,0,0.05);`\n*   `margin: 0 0 20px;` (可选)\n\n<!-- 5.5 提示/引用框容器 (浅蓝色背景) -->\n*   `padding: 16px;`\n*   `background-color: rgb(241, 247, 254);`\n*   `border-radius: 12px;`\n*   `margin: 24px 0px;`\n\n<!-- 5.6 左侧边框容器 (灰色背景，蓝色边框) -->\n*   `padding: 16px;`\n*   `background-color: rgb(245, 245, 245);`\n*   `border-radius: 8px;`\n*   `border-left: 4px solid rgb(75, 108, 183);`\n*   `margin-bottom: 16px;` (可选)\n\n<!-- 5.7 左侧边框容器 (白色背景，暖色边框) -->\n*   `padding: 16px;`\n*   `background-color: white;`\n*   `border-radius: 12px;`\n*   `border-left: 4px solid #ff9a9e;`\n*   `margin: 24px 0;` (可选)\n\n<!-- 5.8 半透明背景容器 (用于深色背景) -->\n*   `padding: 12px;`\n*   `background-color: rgba(255,255,255,0.1);`\n*   `border-radius: 8px;`\n*   `backdrop-filter: blur(5px);`\n*   `margin-bottom: 12px;` (可选)\n*   **更强半透明**: `background-color: rgba(255,255,255,0.15); backdrop-filter: blur(10px); padding: 20px; margin-bottom: 16px;`\n\n<!-- 5.9 Flex布局容器 (AI应自行决定内部元素的flex属性) -->\n*   **垂直方向Flex，带间隔**: `display: flex; flex-direction: column; gap: 16px; margin: 24px 0;`\n*   **水平方向Flex，可换行，带间隔**: `display: flex; flex-wrap: wrap; gap: 16px; margin: 24px 0;`\n*   **元素居中，带图标/文字组合**: `display: flex; align-items: center;` (用于H3或P标签的父div)\n*   **卡片内flex项**: `flex: 1; min-width: 140px;` (用于水平flex内的子div)\n\n<!-- 5.10 居中文字/元素容器 -->\n*   `text-align: center;` (可用于任何需要内容居中的div或p)\n\n<!-- 5.11 分割线容器 (AI需构建一个div) -->\n*   `width: 60px; height: 4px; background: linear-gradient(90deg, #182848 0%, #4b6cb7 100%); margin: 32px auto; border-radius: 2px;`\n\n<!-- 5.12 图片容器 (包裹图片并提供特定布局) -->\n*   `width: 100%; height: 200px; flex-shrink: 0; overflow: hidden;` (用于固定高度图片外部的div)\n*   `padding: 24px 16px; flex-grow: 1;` (用于图片下方的文字内容div)\n\n<!-- 5.13 SVG图表示例 (AI可根据需要复制和修改path、circle、text) -->\n<!-- AI需自行构建 <svg viewBox="0 0 240 120" style="width: 100%; height: 120px; margin-bottom: 20px;"><path...><circle...><text...></svg> -->\n*   **SVG图表通用样式**: `width: 100%; height: 120px; margin-bottom: 20px;`\n*   **路径**: `stroke="#ff9a9e"; stroke-width: 4; fill: none;`\n*   **圆点**: `fill="#ff9a9e";`\n*   **文本**: `fill="white"; font-size: 10px;`\n\n\n'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 12:02:55,076 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:02:55,077 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:02:55,126 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B3E8D0>
2025-07-21 12:02:55,126 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B2C150> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:02:55,146 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B3E4B0>
2025-07-21 12:02:55,146 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:02:55,147 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:02:55,147 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:02:55,147 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:02:55,147 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:03:01,620 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:03:01,622 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:03:01,622 - root - INFO - 获取生成历史请求
2025-07-21 12:03:01,623 - root - INFO - 获取发布历史请求
2025-07-21 12:03:01,626 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:03:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:03:01,628 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:03:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:03:31,612 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:03:31,613 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:03:31,613 - root - INFO - 获取生成历史请求
2025-07-21 12:03:31,613 - root - INFO - 获取发布历史请求
2025-07-21 12:03:31,614 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:03:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:03:31,614 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:03:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:03:57,036 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 12:03:57,036 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 12:03:57,036 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 12:03:57,038 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:03:57] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 12:03:57,044 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 12:03:57,044 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 12:03:57,044 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:03:57,045 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:03:57,045 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:03:57,045 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 12:03:57,045 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:03:57,047 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 12:03:57,132 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 12:03:57,134 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 12:03:57,134 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 12:03:57,134 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 12:03:57,134 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 12:03:57,134 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 12:03:57,135 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 12:03:57,135 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:03:57] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 12:03:57,141 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 12:03:57,141 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 12:03:57,142 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 12:03:57,142 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:03:57,142 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:03:57,142 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 12:03:57,270 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'd5c439d6-a04f-9465-b5bf-6b3804ebb52f'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'62108'), (b'req-arrive-time', b'1753070574736'), (b'resp-start-time', b'1753070636845'), (b'x-envoy-upstream-service-time', b'62106'), (b'set-cookie', b'acw_tc=d5c439d6-a04f-9465-b5bf-6b3804ebb52ff8a4cb98397fccbd10d9a4e4e7ef6934;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:03:56 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:03:57,271 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:03:57,271 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:03:57,271 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:03:57,271 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:03:57,272 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:03:57,272 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'd5c439d6-a04f-9465-b5bf-6b3804ebb52f', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '62108', 'req-arrive-time': '1753070574736', 'resp-start-time': '1753070636845', 'x-envoy-upstream-service-time': '62106', 'set-cookie': 'acw_tc=d5c439d6-a04f-9465-b5bf-6b3804ebb52ff8a4cb98397fccbd10d9a4e4e7ef6934;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:03:56 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:03:57,272 - openai._base_client - DEBUG - request_id: d5c439d6-a04f-9465-b5bf-6b3804ebb52f
2025-07-21 12:03:57,274 - controllers.article_controller - INFO - 文章内容生成成功，长度: 6962字符
2025-07-21 12:03:57,274 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 12:03:57,274 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 请直接修复 dashscope_params 未定义问题
2025-07-21 12:03:57,687 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000009B7CE00>, 'json_data': None}
2025-07-21 12:03:57,687 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 12:03:57,687 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:03:57,710 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B3ECC0>
2025-07-21 12:03:57,710 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B2E450> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:03:57,735 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B3DE80>
2025-07-21 12:03:57,735 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 12:03:57,736 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:03:57,736 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 12:03:57,736 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:03:57,736 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 12:03:57,777 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'e791606f-f33c-9203-8475-8623a8b930cc'), (b'content-type', b'application/json'), (b'req-cost-time', b'27'), (b'req-arrive-time', b'1753070637325'), (b'resp-start-time', b'1753070637352'), (b'x-envoy-upstream-service-time', b'26'), (b'set-cookie', b'acw_tc=e791606f-f33c-9203-8475-8623a8b930ccd0303bf852fe71ee6a511d4270b1894f;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:03:56 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:03:57,777 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 12:03:57,778 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 12:03:57,778 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:03:57,778 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:03:57,778 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:03:57,779 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'e791606f-f33c-9203-8475-8623a8b930cc', 'content-type': 'application/json', 'req-cost-time': '27', 'req-arrive-time': '1753070637325', 'resp-start-time': '1753070637352', 'x-envoy-upstream-service-time': '26', 'set-cookie': 'acw_tc=e791606f-f33c-9203-8475-8623a8b930ccd0303bf852fe71ee6a511d4270b1894f;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:03:56 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:03:57,779 - openai._base_client - DEBUG - request_id: e791606f-f33c-9203-8475-8623a8b930cc
2025-07-21 12:03:57,782 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 12:03:57,782 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 12:03:57,783 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 12:03:57,783 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 12:03:57,783 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 12:03:57,783 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 12:03:57,783 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 12:03:57,783 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:03:57] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 12:03:57,791 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:03:57,792 - root - INFO - 获取生成历史请求
2025-07-21 12:03:57,792 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:03:57] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:03:57,799 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:03:57,799 - root - INFO - 获取发布历史请求
2025-07-21 12:03:57,800 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:03:57] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:03:57,825 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：请直接修复 dashscope_params 未定义问题\n内容预览：```html 请直接修复 dashscope_params 未定义问题 body { font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Microsoft YaHei', sans-serif; background-color: white; margin: 0; padding: 0; } .card { padding: 24px 16px; border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 12px; margin-bottom: 20px; } h1 { font-size: 32px; font-weight: 700; margin: 0 0 16px; line-height: 1.2; color: white;\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字："}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 12:03:57,826 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:03:57,826 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:03:57,840 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B8C080>
2025-07-21 12:03:57,841 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B74150> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:03:57,861 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B73DA0>
2025-07-21 12:03:57,861 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:03:57,861 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:03:57,862 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:03:57,862 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:03:57,862 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:03:58,910 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'060bb288-8c69-9174-b867-a4e21a62d129'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1036'), (b'req-arrive-time', b'1753070637446'), (b'resp-start-time', b'1753070638483'), (b'x-envoy-upstream-service-time', b'1033'), (b'set-cookie', b'acw_tc=060bb288-8c69-9174-b867-a4e21a62d12936857a8ad0940483657d3f0f76c4f738;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:03:58 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:03:58,911 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:03:58,911 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:03:58,911 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:03:58,912 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:03:58,912 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:03:58,912 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '060bb288-8c69-9174-b867-a4e21a62d129', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1036', 'req-arrive-time': '1753070637446', 'resp-start-time': '1753070638483', 'x-envoy-upstream-service-time': '1033', 'set-cookie': 'acw_tc=060bb288-8c69-9174-b867-a4e21a62d12936857a8ad0940483657d3f0f76c4f738;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:03:58 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:03:58,912 - openai._base_client - DEBUG - request_id: 060bb288-8c69-9174-b867-a4e21a62d129
2025-07-21 12:03:58,913 - services.dashscope_service - INFO - 文章摘要生成成功: 本文教你如何快速修复 dashscope_params 未定义的问题，帮助开发者节省调试时间，确保项目顺利运行。内容简洁明了，适合遇到同类问题的程序员阅读参考。
2025-07-21 12:03:58,913 - controllers.article_controller - INFO - 摘要生成完成: 本文教你如何快速修复 dashscope_params 未定义的问题，帮助开发者节省调试时间，确保项...
2025-07-21 12:03:58,913 - controllers.article_controller - INFO - 文章字数约: 1000，计划生成配图数量: 3
2025-07-21 12:03:58,913 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 12:03:58,914 - controllers.article_controller - INFO - 开始处理文章配图，计划生成3张图片（仅本地路径，不上传微信）
2025-07-21 12:03:58,914 - controllers.article_controller - INFO - 计划在第[3, 6, 8]段后插入配图
2025-07-21 12:03:58,914 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 12:03:58,914 - services.image_service - INFO - 开始生成文章配图，标题: 请直接修复 dashscope_params 未定义问题, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/3
2025-07-21 12:03:58,936 - httpcore.connection - DEBUG - close.started
2025-07-21 12:03:58,937 - httpcore.connection - DEBUG - close.complete
2025-07-21 12:03:59,100 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': 'wanx2.1-t2i-plus', 'prompt': '请直接修复 dashscope_params 未定义问题', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 12:03:59,101 - dashscope - DEBUG - Request body: {'model': 'wanx2.1-t2i-plus', 'parameters': {'n': 1, 'size': '1024*768', 'steps': 25}, 'input': {'prompt': '请直接修复 dashscope_params 未定义问题', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts'}}
2025-07-21 12:03:59,102 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:03:59,311 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "POST /api/v1/services/aigc/text2image/image-synthesis HTTP/1.1" 200 None
2025-07-21 12:03:59,313 - dashscope - DEBUG - Response: {'request_id': 'c02bccf6-6ef1-9c6e-a1e9-aeff666a1df6', 'output': {'task_id': '5ef45536-1e33-44cc-87db-c8dd08089460', 'task_status': 'PENDING'}}
2025-07-21 12:03:59,314 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:03:59,316 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:03:59,418 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460 HTTP/1.1" 200 None
2025-07-21 12:03:59,419 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:03:59,420 - dashscope - INFO - The task 5ef45536-1e33-44cc-87db-c8dd08089460 is  RUNNING
2025-07-21 12:04:00,420 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:00,420 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:00,534 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460 HTTP/1.1" 200 None
2025-07-21 12:04:00,534 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:00,534 - dashscope - INFO - The task 5ef45536-1e33-44cc-87db-c8dd08089460 is  RUNNING
2025-07-21 12:04:01,536 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:01,537 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:01,618 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:04:01,618 - root - INFO - 获取生成历史请求
2025-07-21 12:04:01,618 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:04:01,619 - root - INFO - 获取发布历史请求
2025-07-21 12:04:01,619 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:04:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:04:01,620 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:04:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:04:01,653 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460 HTTP/1.1" 200 None
2025-07-21 12:04:01,653 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:01,653 - dashscope - INFO - The task 5ef45536-1e33-44cc-87db-c8dd08089460 is  RUNNING
2025-07-21 12:04:03,654 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:03,654 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:03,780 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460 HTTP/1.1" 200 None
2025-07-21 12:04:03,781 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:03,781 - dashscope - INFO - The task 5ef45536-1e33-44cc-87db-c8dd08089460 is  RUNNING
2025-07-21 12:04:05,782 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:05,782 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:05,889 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460 HTTP/1.1" 200 None
2025-07-21 12:04:05,891 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:05,892 - dashscope - INFO - The task 5ef45536-1e33-44cc-87db-c8dd08089460 is  RUNNING
2025-07-21 12:04:07,893 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:07,894 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:08,010 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460 HTTP/1.1" 200 None
2025-07-21 12:04:08,011 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/5ef45536-1e33-44cc-87db-c8dd08089460
2025-07-21 12:04:08,011 - services.image_service - INFO - DashScope同步调用响应: {"status_code": 200, "request_id": "dbde4b53-a5b5-9dfe-a8ef-0614ddb42323", "code": null, "message": "", "output": {"task_id": "5ef45536-1e33-44cc-87db-c8dd08089460", "task_status": "SUCCEEDED", "results": [{"url": "https://dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com/1d/06/20250721/31781671/5ef45536-1e33-44cc-87db-c8dd080894603864093624.png?Expires=1753157045&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=YUXsqy7b1p072HpPgCC5iuy1smA%3D", "orig_prompt": "请直接修复 dashscope_params 未定义问题", "actual_prompt": "抱歉，我无法直接修复技术问题。建议您检查代码中是否正确引入了 dashscope_params 变量，或查看相关 API 文档以获取帮助。"}], "submit_time": "2025-07-21 12:03:58.863", "scheduled_time": "2025-07-21 12:03:58.900", "end_time": "2025-07-21 12:04:06.079", "task_metrics": {"TOTAL": 1, "SUCCEEDED": 1, "FAILED": 0}}, "usage": {"image_count": 1}}
2025-07-21 12:04:08,012 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com:443
2025-07-21 12:04:08,132 - urllib3.connectionpool - DEBUG - https://dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com:443 "GET /1d/06/20250721/31781671/5ef45536-1e33-44cc-87db-c8dd080894603864093624.png?Expires=1753157045&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=YUXsqy7b1p072HpPgCC5iuy1smA%3D HTTP/1.1" 200 361252
2025-07-21 12:04:08,186 - services.image_service - INFO - 图片已保存到: cache\5ef45536-1e33-44cc-87db-c8dd080894603864093624.png
2025-07-21 12:04:08,186 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\5ef45536-1e33-44cc-87db-c8dd080894603864093624.png
2025-07-21 12:04:08,187 - controllers.article_controller - INFO - 生成第2张配图，使用模型: dashscope
2025-07-21 12:04:08,187 - services.image_service - INFO - 开始生成文章配图，标题: 请直接修复 dashscope_params 未定义问题, 生图模型: dashscope, AI模型: dashscope, 图片索引: 2/3
2025-07-21 12:04:08,187 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': 'wanx2.1-t2i-plus', 'prompt': '请直接修复 dashscope_params 未定义问题', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 12:04:08,187 - dashscope - DEBUG - Request body: {'model': 'wanx2.1-t2i-plus', 'parameters': {'n': 1, 'size': '1024*768', 'steps': 25}, 'input': {'prompt': '请直接修复 dashscope_params 未定义问题', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts'}}
2025-07-21 12:04:08,188 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:08,397 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "POST /api/v1/services/aigc/text2image/image-synthesis HTTP/1.1" 200 None
2025-07-21 12:04:08,397 - dashscope - DEBUG - Response: {'request_id': '2044d457-5e6f-9e99-98c6-258c7d403006', 'output': {'task_id': '6bdc4574-df29-42d0-a88a-2b5e0c7ace73', 'task_status': 'PENDING'}}
2025-07-21 12:04:08,398 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:08,399 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:08,501 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73 HTTP/1.1" 200 None
2025-07-21 12:04:08,502 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:08,502 - dashscope - INFO - The task 6bdc4574-df29-42d0-a88a-2b5e0c7ace73 is  RUNNING
2025-07-21 12:04:09,503 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:09,506 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:09,604 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73 HTTP/1.1" 200 None
2025-07-21 12:04:09,605 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:09,606 - dashscope - INFO - The task 6bdc4574-df29-42d0-a88a-2b5e0c7ace73 is  RUNNING
2025-07-21 12:04:10,607 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:10,607 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:10,715 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73 HTTP/1.1" 200 None
2025-07-21 12:04:10,715 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:10,716 - dashscope - INFO - The task 6bdc4574-df29-42d0-a88a-2b5e0c7ace73 is  RUNNING
2025-07-21 12:04:12,717 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:12,717 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:12,865 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73 HTTP/1.1" 200 None
2025-07-21 12:04:12,866 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:12,866 - dashscope - INFO - The task 6bdc4574-df29-42d0-a88a-2b5e0c7ace73 is  RUNNING
2025-07-21 12:04:14,867 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:14,868 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:14,989 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73 HTTP/1.1" 200 None
2025-07-21 12:04:14,989 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:14,990 - dashscope - INFO - The task 6bdc4574-df29-42d0-a88a-2b5e0c7ace73 is  RUNNING
2025-07-21 12:04:16,990 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:16,991 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:17,109 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73 HTTP/1.1" 200 None
2025-07-21 12:04:17,109 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/6bdc4574-df29-42d0-a88a-2b5e0c7ace73
2025-07-21 12:04:17,110 - services.image_service - INFO - DashScope同步调用响应: {"status_code": 200, "request_id": "b9729883-8047-9cd2-8d87-aa9c19714f49", "code": null, "message": "", "output": {"task_id": "6bdc4574-df29-42d0-a88a-2b5e0c7ace73", "task_status": "SUCCEEDED", "results": [{"url": "https://dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com/1d/c9/20250721/ce62dca3/6bdc4574-df29-42d0-a88a-2b5e0c7ace731807576861.png?Expires=1753157055&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=95n4MJEQSCDxT01Qm3F4iqXv4us%3D", "orig_prompt": "请直接修复 dashscope_params 未定义问题", "actual_prompt": "抱歉，我无法协助解决技术问题。如果您在使用阿里云服务时遇到问题，建议您前往阿里云官方社区或技术支持页面寻求帮助。"}], "submit_time": "2025-07-21 12:04:07.946", "scheduled_time": "2025-07-21 12:04:07.999", "end_time": "2025-07-21 12:04:16.044", "task_metrics": {"TOTAL": 1, "SUCCEEDED": 1, "FAILED": 0}}, "usage": {"image_count": 1}}
2025-07-21 12:04:17,113 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com:443
2025-07-21 12:04:17,191 - urllib3.connectionpool - DEBUG - https://dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com:443 "GET /1d/c9/20250721/ce62dca3/6bdc4574-df29-42d0-a88a-2b5e0c7ace731807576861.png?Expires=1753157055&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=95n4MJEQSCDxT01Qm3F4iqXv4us%3D HTTP/1.1" 200 291541
2025-07-21 12:04:17,215 - services.image_service - INFO - 图片已保存到: cache\6bdc4574-df29-42d0-a88a-2b5e0c7ace731807576861.png
2025-07-21 12:04:17,216 - controllers.article_controller - INFO - 第2张配图处理完成，使用本地路径: cache\6bdc4574-df29-42d0-a88a-2b5e0c7ace731807576861.png
2025-07-21 12:04:17,216 - controllers.article_controller - INFO - 生成第3张配图，使用模型: dashscope
2025-07-21 12:04:17,216 - services.image_service - INFO - 开始生成文章配图，标题: 请直接修复 dashscope_params 未定义问题, 生图模型: dashscope, AI模型: dashscope, 图片索引: 3/3
2025-07-21 12:04:17,216 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': 'wanx2.1-t2i-plus', 'prompt': '请直接修复 dashscope_params 未定义问题', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 12:04:17,217 - dashscope - DEBUG - Request body: {'model': 'wanx2.1-t2i-plus', 'parameters': {'n': 1, 'size': '1024*768', 'steps': 25}, 'input': {'prompt': '请直接修复 dashscope_params 未定义问题', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts'}}
2025-07-21 12:04:17,218 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:17,431 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "POST /api/v1/services/aigc/text2image/image-synthesis HTTP/1.1" 200 None
2025-07-21 12:04:17,432 - dashscope - DEBUG - Response: {'request_id': '3edc1fc1-582a-91cb-99c8-ef86942699be', 'output': {'task_id': 'a16706a0-1c59-4436-bb50-e7af7df933b6', 'task_status': 'PENDING'}}
2025-07-21 12:04:17,432 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:17,434 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:17,527 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6 HTTP/1.1" 200 None
2025-07-21 12:04:17,527 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:17,528 - dashscope - INFO - The task a16706a0-1c59-4436-bb50-e7af7df933b6 is  RUNNING
2025-07-21 12:04:18,529 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:18,530 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:18,646 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6 HTTP/1.1" 200 None
2025-07-21 12:04:18,647 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:18,647 - dashscope - INFO - The task a16706a0-1c59-4436-bb50-e7af7df933b6 is  RUNNING
2025-07-21 12:04:19,648 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:19,649 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:19,753 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6 HTTP/1.1" 200 None
2025-07-21 12:04:19,753 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:19,754 - dashscope - INFO - The task a16706a0-1c59-4436-bb50-e7af7df933b6 is  RUNNING
2025-07-21 12:04:21,755 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:21,755 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:21,849 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6 HTTP/1.1" 200 None
2025-07-21 12:04:21,850 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:21,850 - dashscope - INFO - The task a16706a0-1c59-4436-bb50-e7af7df933b6 is  RUNNING
2025-07-21 12:04:23,851 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:23,852 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:23,973 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6 HTTP/1.1" 200 None
2025-07-21 12:04:23,973 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:23,973 - dashscope - INFO - The task a16706a0-1c59-4436-bb50-e7af7df933b6 is  RUNNING
2025-07-21 12:04:25,975 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:25,977 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:04:26,066 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6 HTTP/1.1" 200 None
2025-07-21 12:04:26,067 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/a16706a0-1c59-4436-bb50-e7af7df933b6
2025-07-21 12:04:26,068 - services.image_service - INFO - DashScope同步调用响应: {"status_code": 200, "request_id": "2b8ee7d5-0456-9911-b031-3c6ab15e3365", "code": null, "message": "", "output": {"task_id": "a16706a0-1c59-4436-bb50-e7af7df933b6", "task_status": "SUCCEEDED", "results": [{"url": "https://dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com/1d/97/20250721/31781671/a16706a0-1c59-4436-bb50-e7af7df933b675661610.png?Expires=1753157064&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=%2FXdf%2B53Xkxm4y95%2FquSBBbsO%2FWg%3D", "orig_prompt": "请直接修复 dashscope_params 未定义问题", "actual_prompt": "抱歉，我无法协助解决技术问题或代码错误。如果你在使用 DashScope API 时遇到参数未定义的问题，请检查你的代码中是否正确导入了所需的模块和变量，或者参考官方文档进行配置。你也可以提供更多上下文信息，以便更准确地帮助你解决问题。"}], "submit_time": "2025-07-21 12:04:16.981", "scheduled_time": "2025-07-21 12:04:17.012", "end_time": "2025-07-21 12:04:24.631", "task_metrics": {"TOTAL": 1, "SUCCEEDED": 1, "FAILED": 0}}, "usage": {"image_count": 1}}
2025-07-21 12:04:26,096 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com:443
2025-07-21 12:04:26,210 - urllib3.connectionpool - DEBUG - https://dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com:443 "GET /1d/97/20250721/31781671/a16706a0-1c59-4436-bb50-e7af7df933b675661610.png?Expires=1753157064&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=%2FXdf%2B53Xkxm4y95%2FquSBBbsO%2FWg%3D HTTP/1.1" 200 686131
2025-07-21 12:04:26,280 - services.image_service - INFO - 图片已保存到: cache\a16706a0-1c59-4436-bb50-e7af7df933b675661610.png
2025-07-21 12:04:26,280 - controllers.article_controller - INFO - 第3张配图处理完成，使用本地路径: cache\a16706a0-1c59-4436-bb50-e7af7df933b675661610.png
2025-07-21 12:04:26,281 - controllers.article_controller - INFO - 在第8段后插入配图
2025-07-21 12:04:26,281 - controllers.article_controller - INFO - 在第6段后插入配图
2025-07-21 12:04:26,281 - controllers.article_controller - INFO - 在第3段后插入配图
2025-07-21 12:04:26,282 - controllers.article_controller - INFO - 配图处理完成，共插入3张图片
2025-07-21 12:04:26,285 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_请直接修复 dashscope_para_20250721_120426.html
2025-07-21 12:04:26,285 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 12:04:26,405 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 12:04:26,405 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 7402
2025-07-21 12:04:26,408 - controllers.article_controller - INFO - 发现1个<style>标签，开始内联处理
2025-07-21 12:04:26,414 - controllers.article_controller - INFO - 样式内联处理完成，应用了23个CSS规则
2025-07-21 12:04:26,415 - controllers.article_controller - INFO - 内容清理完成，移除了 246 个字符，清理后长度: 7185
2025-07-21 12:04:26,418 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_请直接修复 dashscope_para_20250721_120426.html
2025-07-21 12:04:26,419 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=请直接修复 dashscope_params 未定义问题, 内容前100字=<!DOCTYPE html>

<html lang="zh-CN">
<head>
<meta charset="utf-8"/>
<meta content="width=device-widt, 图片数=3
2025-07-21 12:04:26,419 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:04:26,419 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:04:26,423 - services.history_service - INFO - 添加生成历史记录: 请直接修复 dashscope_params 未定义问题
2025-07-21 12:04:26,424 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 12:04:26,424 - controllers.article_controller - INFO - 生成结果预览: 标题=请直接修复 dashscope_params 未定义问题, 内容长度=7185, 配图数量=3
2025-07-21 12:04:26,425 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:04:26] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 12:04:26,432 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:04:26,432 - root - INFO - 获取生成历史请求
2025-07-21 12:04:26,433 - root - INFO - 请求: GET /cache/5ef45536-1e33-44cc-87db-c8dd080894603864093624.png
2025-07-21 12:04:26,433 - root - INFO - 访问缓存文件: 5ef45536-1e33-44cc-87db-c8dd080894603864093624.png
2025-07-21 12:04:26,434 - root - INFO - 请求: GET /cache/6bdc4574-df29-42d0-a88a-2b5e0c7ace731807576861.png
2025-07-21 12:04:26,434 - root - INFO - 请求: GET /cache/a16706a0-1c59-4436-bb50-e7af7df933b675661610.png
2025-07-21 12:04:26,434 - root - INFO - 访问缓存文件: 6bdc4574-df29-42d0-a88a-2b5e0c7ace731807576861.png
2025-07-21 12:04:26,435 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:04:26] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:04:26,435 - root - INFO - 访问缓存文件: a16706a0-1c59-4436-bb50-e7af7df933b675661610.png
2025-07-21 12:04:26,435 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:04:26] "GET /cache/5ef45536-1e33-44cc-87db-c8dd080894603864093624.png HTTP/1.1" 200 -
2025-07-21 12:04:26,436 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:04:26] "GET /cache/6bdc4574-df29-42d0-a88a-2b5e0c7ace731807576861.png HTTP/1.1" 200 -
2025-07-21 12:04:26,436 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:04:26] "GET /cache/a16706a0-1c59-4436-bb50-e7af7df933b675661610.png HTTP/1.1" 200 -
2025-07-21 12:04:31,617 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:04:31,618 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:04:31,618 - root - INFO - 获取生成历史请求
2025-07-21 12:04:31,619 - root - INFO - 获取发布历史请求
2025-07-21 12:04:31,621 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:04:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:04:31,621 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:04:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:05:01,625 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:05:01,627 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:05:01,629 - root - INFO - 获取生成历史请求
2025-07-21 12:05:01,629 - root - INFO - 获取发布历史请求
2025-07-21 12:05:01,634 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:05:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:05:01,637 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:05:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:05:31,611 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:05:31,612 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:05:31,614 - root - INFO - 获取生成历史请求
2025-07-21 12:05:31,615 - root - INFO - 获取发布历史请求
2025-07-21 12:05:31,618 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:05:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:05:31,619 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:05:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:06:02,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:06:02,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:06:02,186 - root - INFO - 获取生成历史请求
2025-07-21 12:06:02,186 - root - INFO - 获取发布历史请求
2025-07-21 12:06:02,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:06:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:06:02,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:06:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:06:42,207 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:06:42,207 - root - INFO - 获取生成历史请求
2025-07-21 12:06:42,208 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:06:42,208 - root - INFO - 获取发布历史请求
2025-07-21 12:06:42,209 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:06:42] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:06:42,209 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:06:42] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:07:02,174 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:07:02,175 - root - INFO - 获取生成历史请求
2025-07-21 12:07:02,175 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:07:02,175 - root - INFO - 获取发布历史请求
2025-07-21 12:07:02,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:07:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:07:02,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:07:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:07:32,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:07:32,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:07:32,179 - root - INFO - 获取生成历史请求
2025-07-21 12:07:32,179 - root - INFO - 获取发布历史请求
2025-07-21 12:07:32,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:07:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:07:32,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:07:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:08:03,675 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:08:03,675 - root - INFO - 获取生成历史请求
2025-07-21 12:08:03,676 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:08:03,676 - root - INFO - 获取发布历史请求
2025-07-21 12:08:03,677 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:08:03] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:08:03,678 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:08:03] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:08:32,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:08:32,181 - root - INFO - 获取生成历史请求
2025-07-21 12:08:32,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:08:32,183 - root - INFO - 获取发布历史请求
2025-07-21 12:08:32,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:08:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:08:32,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:08:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:09:02,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:09:02,191 - root - INFO - 获取生成历史请求
2025-07-21 12:09:02,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:09:02,191 - root - INFO - 获取发布历史请求
2025-07-21 12:09:02,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:09:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:09:02,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:09:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:10:04,315 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:10:04,315 - root - INFO - 获取生成历史请求
2025-07-21 12:10:04,316 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:10:04,316 - root - INFO - 获取发布历史请求
2025-07-21 12:10:04,317 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:04] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:10:04,317 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:04] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:10:18,915 - root - INFO - 应用目录创建完成
2025-07-21 12:10:18,915 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:10:18,915 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:10:18,916 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:10:18,916 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:10:18,916 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 12:10:18,916 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:10:18,916 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:10:18,916 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:10:18,917 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 12:10:18,917 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:10:18,917 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 12:10:18,917 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 12:10:18,917 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 12:10:19,794 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 12:10:19,795 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 12:10:21,284 - root - INFO - 请求: GET /
2025-07-21 12:10:21,284 - root - INFO - 访问主页面
2025-07-21 12:10:21,293 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:21] "GET / HTTP/1.1" 200 -
2025-07-21 12:10:21,362 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 12:10:21,377 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 12:10:21,379 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 12:10:21,536 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:21] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 12:10:21,558 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:21] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 12:10:21,570 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:21] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 12:10:21,648 - root - INFO - 请求: GET /api/get_ip
2025-07-21 12:10:21,648 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:21] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 12:10:21,668 - root - INFO - 请求: GET /api/style-templates
2025-07-21 12:10:21,675 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:21] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 12:10:21,686 - root - INFO - 请求: GET /api/config
2025-07-21 12:10:21,687 - root - INFO - 处理配置请求: GET
2025-07-21 12:10:21,687 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 12:10:21,687 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:10:21,688 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 12:10:21,689 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:21] "GET /api/config HTTP/1.1" 200 -
2025-07-21 12:10:21,850 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 12:10:21,850 - root - INFO - 获取Gemini可用模型列表
2025-07-21 12:10:21,850 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 12:10:21,851 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:10:21,851 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:10:21,851 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 12:10:22,921 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 12:10:22,921 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 12:10:22,923 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 12:10:51,689 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:10:51,689 - root - INFO - 获取生成历史请求
2025-07-21 12:10:51,689 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:10:51,690 - root - INFO - 获取发布历史请求
2025-07-21 12:10:51,690 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:51] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:10:51,691 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:10:51] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:11:02,895 - root - INFO - 请求: POST /api/generate-article
2025-07-21 12:11:02,896 - root - INFO - 生成文章请求
2025-07-21 12:11:02,896 - controllers.article_controller - INFO - 【唯一请求ID】f625c664-4fa2-458d-a15f-cf1314bc8f98 - generate_article
2025-07-21 12:11:02,896 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '昆明发生机动车撞人事件 当地回应', 'word_count': 1000, 'image_count': 1, 'format_template': '<div style="font-family: "Noto Serif SC", "PingFang SC", "Microsoft YaHei", sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px;">\n  \n    <!-- 1. 标题封面区块 (深蓝-红色渐变，底部圆角) -->\n    <section style="padding: 20px 20px 5px; margin-bottom: 15px; background: linear-gradient(135deg, rgb(26, 42, 108), rgb(178, 31, 31)); border-radius: 0px 0px 25px 25px; color: white; box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 15px;">\n      <h1 style="font-size: 35px; font-weight: 900; margin: 0px; letter-spacing: -0.5px; line-height: 1.2;">主标题内容</h1>\n      <h2 style="font-size: 24px; font-weight: 700; margin: 5px 0px 15px; opacity: 0.9;">副标题内容或主题</h2>\n      <div style="display: flex; align-items: center; margin-top: 15px;">\n        <svg width="24" height="24" viewBox="0 0 24 24" style="fill: white; margin-right: 8px;">\n          <path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z"></path>\n        </svg>\n        <span style="font-size: 14px; opacity: 0.8;">日期或特刊信息</span>\n      </div>\n    </section>\n    \n    <!-- 2. 引言及引用区块 (白色背景，圆角，阴影) -->\n    <section style="padding: 15px; margin: 0px; background-color: white; border-radius: 16px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <p style="font-size: 20px; font-weight: 600; color: rgb(26, 42, 108); margin-top: 0px; margin-bottom: 20px; line-height: 1.4;">AI生成的引言或核心观点。</p>\n      \n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述背景或当前情况。文字内容应流畅自然。</p>\n      \n      <!-- 引用框 (浅蓝色背景，左侧深蓝边框，底部圆角) -->\n      <div style="background-color: rgb(242, 247, 255); padding: 15px; border-left: 4px solid rgb(26, 42, 108); margin: 20px 0px; border-radius: 0px 8px 8px 0px;">\n        <p style="margin: 0px; font-style: italic; color: rgb(26, 42, 108);">"AI生成的引用内容，突出专家观点或重要引述。" — 引用来源</p>\n      </div>\n    </section>\n    \n    <!-- 3. 图片与带勾选列表区块 (卡片样式，顶部有图，底部白色背景) -->\n    <section style="margin: 15px 0px; overflow: hidden; border-radius: 16px; box-shadow: rgba(0, 0, 0, 0.08) 0px 5px 15px;">\n        <!-- 图片容器 -->\n        <img alt="AI生成的图片描述" src="【微信永久素材URL】" style="width: 100%; height: auto; display: block; border-radius: 16px 16px 0px 0px;">\n        \n        <div style="padding: 20px; background-color: white; border-radius: 0 0 16px 16px;">\n          <h3 style="font-size: 22px; margin: 0 0 15px; color: #b21f1f; font-weight: 700; padding-left: 10px;">AI生成的列表主题标题</h3>\n          <ul style="list-style-type: none; padding: 0; margin: 0 0 0 10px;">\n            <!-- 单个带勾选图标的列表项 -->\n            <li style=" margin-bottom: 12px; padding-left: 0;  display: flex; align-items: flex-start; ">\n              <svg width="20" height="20" viewBox="0 0 24 24" style=" fill: #b21f1f;  left: 0; top: 2px; ">\n                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path>\n              </svg>\n              <span style="font-weight: 600; margin-left: 8px;">AI生成列表项标题：具体描述内容，可分多行。</span>\n            </li>\n            <li style=" margin-bottom: 12px; padding-left: 0;  display: flex; align-items: flex-start; ">\n              <svg width="20" height="20" viewBox="0 0 24 24" style=" fill: #b21f1f;  left: 0; top: 2px; ">\n                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path>\n              </svg>\n              <span style="font-weight: 600; margin-left: 8px;">AI生成另一个列表项。</span>\n            </li>\n            <li style=" margin-bottom: 0; padding-left: 0;  display: flex; align-items: flex-start; ">\n              <svg width="20" height="20" viewBox="0 0 24 24" style=" fill: #b21f1f;  left: 0; top: 2px; ">\n                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path>\n              </svg>\n              <span style="font-weight: 600; margin-left: 8px;">AI生成最后一个列表项。</span>\n            </li>\n          </ul>\n        </div>\n    </section>\n    \n    <!-- 4. 市场格局变化区块 (白色背景，带底部边框H3，内联SVG图表) -->\n    <section style="margin: 0; padding: 15px; background-color: white; border-radius: 16px; box-shadow: 0 5px 15px rgba(0,0,0,0.05);">\n      <h3 style="font-size: 22px; margin: 0 0 20px; color: #1a2a6c; font-weight: 700; border-bottom: 2px solid #f0f0f0; padding-bottom: 10px;">AI生成的市场格局标题</h3>\n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述市场现状或背景。</p>\n      \n      <!-- SVG图表容器 -->\n      <div style="display: flex; align-items: center; justify-content: center; margin: 25px 0;">\n        <svg width="300" height="180" viewBox="0 0 300 180">\n          <!-- 坐标轴 -->\n          <line x1="40" y1="140" x2="280" y2="140" style="stroke:#5269CE;stroke-width:2"></line>\n          <line x1="40" y1="30" x2="40" y2="140" style="stroke:#5269CE;stroke-width:2"></line>\n          \n          <!-- 条形图数据 (AI可根据数据调整rect的y和height) -->\n          <rect x="70" y="100" width="30" height="40" style="fill:#5269CE;opacity:0.7;"></rect>\n          <rect x="120" y="80" width="30" height="60" style="fill:#5269CE;opacity:0.8;"></rect>\n          <rect x="170" y="60" width="30" height="80" style="fill:#5269CE;opacity:0.9;"></rect>\n          <rect x="220" y="40" width="30" height="100" style="fill:#5269CE;"></rect>\n          \n          <!-- X轴标签 (AI可根据年份调整text内容) -->\n          <text x="85" y="155" style="font-size:10px;text-anchor:middle;fill:#5269CE;">年份一</text>\n          <text x="135" y="155" style="font-size:10px;text-anchor:middle;fill:#5269CE;">年份二</text>\n          <text x="185" y="155" style="font-size:10px;text-anchor:middle;fill:#5269CE;">年份三</text>\n          <text x="235" y="155" style="font-size:10px;text-anchor:middle;fill:#5269CE;">年份四</text>\n          <text x="155" y="175" style="font-size:12px;text-anchor:middle;fill:#5269CE;font-weight:bold;">AI驱动资产管理规模增长 (AI生成图表标题)</text>\n          \n          <!-- Y轴标签 (AI可根据数值调整text内容) -->\n          <text x="35" y="140" style="font-size:10px;text-anchor:end;fill:#5269CE;">0</text>\n          <text x="35" y="100" style="font-size:10px;text-anchor:end;fill:#5269CE;">Y值一</text>\n          <text x="35" y="60" style="font-size:10px;text-anchor:end;fill:#5269CE;">Y值二</text>\n          <text x="35" y="20" style="font-size:10px;text-anchor:end;fill:#5269CE;">Y值三</text>\n        </svg>\n      </div>\n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述传统金融转型和新兴公司崛起。</p>\n      <p style="margin-bottom: 0; text-align: justify;">AI生成的正文段落，描述监管环境变化。</p>\n    </section>\n    \n    <!-- 5. 中国市场特点区块 (白色背景，H3，带编号的列表) -->\n    <section style="margin: 0; padding: 15px; background-color: white; border-radius: 16px; box-shadow: 0 5px 15px rgba(0,0,0,0.05);">\n      <h3 style="font-size: 22px; margin: 0 0 20px; color: #b21f1f; font-weight: 700;">AI生成的中国市场主题标题</h3>\n      \n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述中国市场的背景。</p>\n      \n      <!-- 带有数字圆点的列表容器 (浅红色背景，圆角，边框) -->\n      <div style="background-color: #fff8f8; padding: 15px; border-radius: 12px; margin: 20px 0; border: 1px solid #ffebeb;">\n        <h4 style="margin: 0 0 10px; font-size: 18px; color: #b21f1f;">AI生成的中国市场特点副标题</h4>\n        \n        <!-- 单个带编号的列表项 -->\n        <div style="display: flex; align-items: center; margin-bottom: 12px;">\n          <div style="width: 30px; height: 30px; border-radius: 50%; background-color: #b21f1f; color: white; display: flex; align-items: center; justify-content: center; margin-right: 15px; font-weight: bold;">1</div>\n          <div style="flex: 1;">\n            <p style="margin: 0; font-weight: 600;">AI生成列表项标题</p>\n            <p style="margin: 5px 0 0; font-size: 14px; opacity: 0.8;">AI生成列表项描述</p>\n          </div>\n        </div>\n        <div style="display: flex; align-items: center; margin-bottom: 12px;">\n          <div style="width: 30px; height: 30px; border-radius: 50%; background-color: #b21f1f; color: white; display: flex; align-items: center; justify-content: center; margin-right: 15px; font-weight: bold;">2</div>\n          <div style="flex: 1;">\n            <p style="margin: 0; font-weight: 600;">AI生成列表项标题</p>\n            <p style="margin: 5px 0 0; font-size: 14px; opacity: 0.8;">AI生成列表项描述</p>\n          </div>\n        </div>\n        <div style="display: flex; align-items: center;">\n          <div style="width: 30px; height: 30px; border-radius: 50%; background-color: #b21f1f; color: white; display: flex; align-items: center; justify-content: center; margin-right: 15px; font-weight: bold;">3</div>\n          <div style="flex: 1;">\n            <p style="margin: 0; font-weight: 600;">AI生成列表项标题</p>\n            <p style="margin: 5px 0 0; font-size: 14px; opacity: 0.8;">AI生成列表项描述</p>\n          </div>\n        </div>\n      </div>\n      \n      <p style="margin-bottom: 0; text-align: justify;">AI生成的正文段落，描述科技巨头和初创公司。</p>\n    </section>\n    \n    <!-- 6. 个人投资者机遇与挑战区块 (白色背景，带图标的垂直卡片) -->\n    <section style="margin: 15px 0; padding: 15px; background-color: white; border-radius: 16px; box-shadow: 0 5px 15px rgba(0,0,0,0.05);">\n      <h3 style="font-size: 22px; margin: 0 0 20px; color: #1a2a6c; font-weight: 700;">AI生成的个人投资者主题标题</h3>\n      \n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述机遇与挑战。</p>\n      \n      <!-- 垂直排列的带图标卡片容器 -->\n      <div style="margin: 20px 0; padding: 0 0;">\n        <!-- 单个带图标的卡片 -->\n        <div style="margin-bottom: 20px; padding: 15px; background-color: #f0f4ff; border-radius: 12px;">\n          <svg width="40" height="40" viewBox="0 0 24 24" style="fill: #1a2a6c; margin: 0 auto 10px; display: block;">\n            <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 15.5h-1.5V14h-1v-1.5H11v-1h1.5V10h1v1.5H15V13h-1.5v5.5zM5.5 9.5h3v-1h-2v-1h2v-1h-3V9.5zM9 11H6v1.5h2v1H6V15h3v-4zm6.5 2.5h-2v1h2V13.5z"></path>\n          </svg>\n          <h4 style="margin: 0 0 5px; font-size: 16px; text-align: center;">AI生成卡片标题一</h4>\n          <p style="margin: 0; font-size: 14px; text-align: center; opacity: 0.8;">AI生成卡片描述一</p>\n        </div>\n        <div style="margin-bottom: 20px; padding: 15px; background-color: #f0f4ff; border-radius: 12px;">\n          <svg width="40" height="40" viewBox="0 0 24 24" style="fill: #1a2a6c; margin: 0 auto 10px; display: block;">\n            <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"></path>\n          </svg>\n          <h4 style="margin: 0 0 5px; font-size: 16px; text-align: center;">AI生成卡片标题二</h4>\n          <p style="margin: 0; font-size: 14px; text-align: center; opacity: 0.8;">AI生成卡片描述二</p>\n        </div>\n        <div style="margin-bottom: 0; padding: 15px; background-color: #f0f4ff; border-radius: 12px;">\n          <svg width="40" height="40" viewBox="0 0 24 24" style="fill: #1a2a6c; margin: 0 auto 10px; display: block;">\n            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"></path>\n          </svg>\n          <h4 style="margin: 0 0 5px; font-size: 16px; text-align: center;">AI生成卡片标题三</h4>\n          <p style="margin: 0; font-size: 14px; text-align: center; opacity: 0.8;">AI生成卡片描述三</p>\n        </div>\n      </div>\n      \n      <p style="font-size: 18px; font-weight: 600; color: #b21f1f; margin: 25px 0 15px;">AI生成的子标题或强调句。</p>\n      \n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述如何明智利用AI工具。</p>\n      \n      <p style="margin-bottom: 0; text-align: justify;">AI生成的正文段落，描述选择工具和保持独立思考。</p>\n    </section>\n    \n    <!-- 7. 展望未来区块 (深蓝-红色渐变背景，底部圆角) -->\n    <section style="margin: 15px 0 25px; padding: 15px; background: linear-gradient(135deg, #1a2a6c, #b21f1f); border-radius: 16px; color: white; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">\n      <h3 style="font-size: 22px; margin: 0 0 15px; font-weight: 700;">AI生成的未来展望标题</h3>\n      \n      <p style="margin-bottom: 15px; opacity: 0.9;">AI生成的展望引言段落。</p>\n      \n      <!-- 半透明背景的列表容器 -->\n      <div style="background-color: rgba(255,255,255,0.1); padding: 15px; border-radius: 12px; margin: 20px 0;">\n        <h4 style="margin: 0 0 10px; font-size: 18px;">AI生成未来趋势副标题</h4>\n        <p style="margin: 0 0 8px;"><span style="font-weight: 600; opacity: 1;">📊 AI生成趋势标题一</span> - 趋势描述内容</p>\n        <p style="margin: 0 0 8px;"><span style="font-weight: 600; opacity: 1;">🧠 AI生成趋势标题二</span> - 趋势描述内容</p>\n        <p style="margin: 0;"><span style="font-weight: 600; opacity: 1;">🔍 AI生成趋势标题三</span> - 趋势描述内容</p>\n      </div>\n      \n      <p style="margin: 0; font-size: 18px; font-weight: 500;">AI生成的结语或总结，关于未来投资者的角色。</p>\n    </section>\n    \n  </div>', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '吉卜力风格', 'negative_prompt': '', 'size': ''}}
2025-07-21 12:11:02,897 - controllers.article_controller - INFO - 开始生成文章，标题: 昆明发生机动车撞人事件 当地回应
2025-07-21 12:11:02,897 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 12:11:02,897 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:11:02,897 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 12:11:02,898 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 12:11:03,342 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘昆明发生机动车撞人事件 当地回应’的公众号文章，排版核心风格要与模板一致，字数约1000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n<div style="font-family: "Noto Serif SC", "PingFang SC", "Microsoft YaHei", sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px;">\n  \n    <!-- 1. 标题封面区块 (深蓝-红色渐变，底部圆角) -->\n    <section style="padding: 20px 20px 5px; margin-bottom: 15px; background: linear-gradient(135deg, rgb(26, 42, 108), rgb(178, 31, 31)); border-radius: 0px 0px 25px 25px; color: white; box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 15px;">\n      <h1 style="font-size: 35px; font-weight: 900; margin: 0px; letter-spacing: -0.5px; line-height: 1.2;">主标题内容</h1>\n      <h2 style="font-size: 24px; font-weight: 700; margin: 5px 0px 15px; opacity: 0.9;">副标题内容或主题</h2>\n      <div style="display: flex; align-items: center; margin-top: 15px;">\n        <svg width="24" height="24" viewBox="0 0 24 24" style="fill: white; margin-right: 8px;">\n          <path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z"></path>\n        </svg>\n        <span style="font-size: 14px; opacity: 0.8;">日期或特刊信息</span>\n      </div>\n    </section>\n    \n    <!-- 2. 引言及引用区块 (白色背景，圆角，阴影) -->\n    <section style="padding: 15px; margin: 0px; background-color: white; border-radius: 16px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <p style="font-size: 20px; font-weight: 600; color: rgb(26, 42, 108); margin-top: 0px; margin-bottom: 20px; line-height: 1.4;">AI生成的引言或核心观点。</p>\n      \n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述背景或当前情况。文字内容应流畅自然。</p>\n      \n      <!-- 引用框 (浅蓝色背景，左侧深蓝边框，底部圆角) -->\n      <div style="background-color: rgb(242, 247, 255); padding: 15px; border-left: 4px solid rgb(26, 42, 108); margin: 20px 0px; border-radius: 0px 8px 8px 0px;">\n        <p style="margin: 0px; font-style: italic; color: rgb(26, 42, 108);">"AI生成的引用内容，突出专家观点或重要引述。" — 引用来源</p>\n      </div>\n    </section>\n    \n    <!-- 3. 图片与带勾选列表区块 (卡片样式，顶部有图，底部白色背景) -->\n    <section style="margin: 15px 0px; overflow: hidden; border-radius: 16px; box-shadow: rgba(0, 0, 0, 0.08) 0px 5px 15px;">\n        <!-- 图片容器 -->\n        <img alt="AI生成的图片描述" src="【微信永久素材URL】" style="width: 100%; height: auto; display: block; border-radius: 16px 16px 0px 0px;">\n        \n        <div style="padding: 20px; background-color: white; border-radius: 0 0 16px 16px;">\n          <h3 style="font-size: 22px; margin: 0 0 15px; color: #b21f1f; font-weight: 700; padding-left: 10px;">AI生成的列表主题标题</h3>\n          <ul style="list-style-type: none; padding: 0; margin: 0 0 0 10px;">\n            <!-- 单个带勾选图标的列表项 -->\n            <li style=" margin-bottom: 12px; padding-left: 0;  display: flex; align-items: flex-start; ">\n              <svg width="20" height="20" viewBox="0 0 24 24" style=" fill: #b21f1f;  left: 0; top: 2px; ">\n                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path>\n              </svg>\n              <span style="font-weight: 600; margin-left: 8px;">AI生成列表项标题：具体描述内容，可分多行。</span>\n            </li>\n            <li style=" margin-bottom: 12px; padding-left: 0;  display: flex; align-items: flex-start; ">\n              <svg width="20" height="20" viewBox="0 0 24 24" style=" fill: #b21f1f;  left: 0; top: 2px; ">\n                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path>\n              </svg>\n              <span style="font-weight: 600; margin-left: 8px;">AI生成另一个列表项。</span>\n            </li>\n            <li style=" margin-bottom: 0; padding-left: 0;  display: flex; align-items: flex-start; ">\n              <svg width="20" height="20" viewBox="0 0 24 24" style=" fill: #b21f1f;  left: 0; top: 2px; ">\n                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path>\n              </svg>\n              <span style="font-weight: 600; margin-left: 8px;">AI生成最后一个列表项。</span>\n            </li>\n          </ul>\n        </div>\n    </section>\n    \n    <!-- 4. 市场格局变化区块 (白色背景，带底部边框H3，内联SVG图表) -->\n    <section style="margin: 0; padding: 15px; background-color: white; border-radius: 16px; box-shadow: 0 5px 15px rgba(0,0,0,0.05);">\n      <h3 style="font-size: 22px; margin: 0 0 20px; color: #1a2a6c; font-weight: 700; border-bottom: 2px solid #f0f0f0; padding-bottom: 10px;">AI生成的市场格局标题</h3>\n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述市场现状或背景。</p>\n      \n      <!-- SVG图表容器 -->\n      <div style="display: flex; align-items: center; justify-content: center; margin: 25px 0;">\n        <svg width="300" height="180" viewBox="0 0 300 180">\n          <!-- 坐标轴 -->\n          <line x1="40" y1="140" x2="280" y2="140" style="stroke:#5269CE;stroke-width:2"></line>\n          <line x1="40" y1="30" x2="40" y2="140" style="stroke:#5269CE;stroke-width:2"></line>\n          \n          <!-- 条形图数据 (AI可根据数据调整rect的y和height) -->\n          <rect x="70" y="100" width="30" height="40" style="fill:#5269CE;opacity:0.7;"></rect>\n          <rect x="120" y="80" width="30" height="60" style="fill:#5269CE;opacity:0.8;"></rect>\n          <rect x="170" y="60" width="30" height="80" style="fill:#5269CE;opacity:0.9;"></rect>\n          <rect x="220" y="40" width="30" height="100" style="fill:#5269CE;"></rect>\n          \n          <!-- X轴标签 (AI可根据年份调整text内容) -->\n          <text x="85" y="155" style="font-size:10px;text-anchor:middle;fill:#5269CE;">年份一</text>\n          <text x="135" y="155" style="font-size:10px;text-anchor:middle;fill:#5269CE;">年份二</text>\n          <text x="185" y="155" style="font-size:10px;text-anchor:middle;fill:#5269CE;">年份三</text>\n          <text x="235" y="155" style="font-size:10px;text-anchor:middle;fill:#5269CE;">年份四</text>\n          <text x="155" y="175" style="font-size:12px;text-anchor:middle;fill:#5269CE;font-weight:bold;">AI驱动资产管理规模增长 (AI生成图表标题)</text>\n          \n          <!-- Y轴标签 (AI可根据数值调整text内容) -->\n          <text x="35" y="140" style="font-size:10px;text-anchor:end;fill:#5269CE;">0</text>\n          <text x="35" y="100" style="font-size:10px;text-anchor:end;fill:#5269CE;">Y值一</text>\n          <text x="35" y="60" style="font-size:10px;text-anchor:end;fill:#5269CE;">Y值二</text>\n          <text x="35" y="20" style="font-size:10px;text-anchor:end;fill:#5269CE;">Y值三</text>\n        </svg>\n      </div>\n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述传统金融转型和新兴公司崛起。</p>\n      <p style="margin-bottom: 0; text-align: justify;">AI生成的正文段落，描述监管环境变化。</p>\n    </section>\n    \n    <!-- 5. 中国市场特点区块 (白色背景，H3，带编号的列表) -->\n    <section style="margin: 0; padding: 15px; background-color: white; border-radius: 16px; box-shadow: 0 5px 15px rgba(0,0,0,0.05);">\n      <h3 style="font-size: 22px; margin: 0 0 20px; color: #b21f1f; font-weight: 700;">AI生成的中国市场主题标题</h3>\n      \n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述中国市场的背景。</p>\n      \n      <!-- 带有数字圆点的列表容器 (浅红色背景，圆角，边框) -->\n      <div style="background-color: #fff8f8; padding: 15px; border-radius: 12px; margin: 20px 0; border: 1px solid #ffebeb;">\n        <h4 style="margin: 0 0 10px; font-size: 18px; color: #b21f1f;">AI生成的中国市场特点副标题</h4>\n        \n        <!-- 单个带编号的列表项 -->\n        <div style="display: flex; align-items: center; margin-bottom: 12px;">\n          <div style="width: 30px; height: 30px; border-radius: 50%; background-color: #b21f1f; color: white; display: flex; align-items: center; justify-content: center; margin-right: 15px; font-weight: bold;">1</div>\n          <div style="flex: 1;">\n            <p style="margin: 0; font-weight: 600;">AI生成列表项标题</p>\n            <p style="margin: 5px 0 0; font-size: 14px; opacity: 0.8;">AI生成列表项描述</p>\n          </div>\n        </div>\n        <div style="display: flex; align-items: center; margin-bottom: 12px;">\n          <div style="width: 30px; height: 30px; border-radius: 50%; background-color: #b21f1f; color: white; display: flex; align-items: center; justify-content: center; margin-right: 15px; font-weight: bold;">2</div>\n          <div style="flex: 1;">\n            <p style="margin: 0; font-weight: 600;">AI生成列表项标题</p>\n            <p style="margin: 5px 0 0; font-size: 14px; opacity: 0.8;">AI生成列表项描述</p>\n          </div>\n        </div>\n        <div style="display: flex; align-items: center;">\n          <div style="width: 30px; height: 30px; border-radius: 50%; background-color: #b21f1f; color: white; display: flex; align-items: center; justify-content: center; margin-right: 15px; font-weight: bold;">3</div>\n          <div style="flex: 1;">\n            <p style="margin: 0; font-weight: 600;">AI生成列表项标题</p>\n            <p style="margin: 5px 0 0; font-size: 14px; opacity: 0.8;">AI生成列表项描述</p>\n          </div>\n        </div>\n      </div>\n      \n      <p style="margin-bottom: 0; text-align: justify;">AI生成的正文段落，描述科技巨头和初创公司。</p>\n    </section>\n    \n    <!-- 6. 个人投资者机遇与挑战区块 (白色背景，带图标的垂直卡片) -->\n    <section style="margin: 15px 0; padding: 15px; background-color: white; border-radius: 16px; box-shadow: 0 5px 15px rgba(0,0,0,0.05);">\n      <h3 style="font-size: 22px; margin: 0 0 20px; color: #1a2a6c; font-weight: 700;">AI生成的个人投资者主题标题</h3>\n      \n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述机遇与挑战。</p>\n      \n      <!-- 垂直排列的带图标卡片容器 -->\n      <div style="margin: 20px 0; padding: 0 0;">\n        <!-- 单个带图标的卡片 -->\n        <div style="margin-bottom: 20px; padding: 15px; background-color: #f0f4ff; border-radius: 12px;">\n          <svg width="40" height="40" viewBox="0 0 24 24" style="fill: #1a2a6c; margin: 0 auto 10px; display: block;">\n            <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 15.5h-1.5V14h-1v-1.5H11v-1h1.5V10h1v1.5H15V13h-1.5v5.5zM5.5 9.5h3v-1h-2v-1h2v-1h-3V9.5zM9 11H6v1.5h2v1H6V15h3v-4zm6.5 2.5h-2v1h2V13.5z"></path>\n          </svg>\n          <h4 style="margin: 0 0 5px; font-size: 16px; text-align: center;">AI生成卡片标题一</h4>\n          <p style="margin: 0; font-size: 14px; text-align: center; opacity: 0.8;">AI生成卡片描述一</p>\n        </div>\n        <div style="margin-bottom: 20px; padding: 15px; background-color: #f0f4ff; border-radius: 12px;">\n          <svg width="40" height="40" viewBox="0 0 24 24" style="fill: #1a2a6c; margin: 0 auto 10px; display: block;">\n            <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"></path>\n          </svg>\n          <h4 style="margin: 0 0 5px; font-size: 16px; text-align: center;">AI生成卡片标题二</h4>\n          <p style="margin: 0; font-size: 14px; text-align: center; opacity: 0.8;">AI生成卡片描述二</p>\n        </div>\n        <div style="margin-bottom: 0; padding: 15px; background-color: #f0f4ff; border-radius: 12px;">\n          <svg width="40" height="40" viewBox="0 0 24 24" style="fill: #1a2a6c; margin: 0 auto 10px; display: block;">\n            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"></path>\n          </svg>\n          <h4 style="margin: 0 0 5px; font-size: 16px; text-align: center;">AI生成卡片标题三</h4>\n          <p style="margin: 0; font-size: 14px; text-align: center; opacity: 0.8;">AI生成卡片描述三</p>\n        </div>\n      </div>\n      \n      <p style="font-size: 18px; font-weight: 600; color: #b21f1f; margin: 25px 0 15px;">AI生成的子标题或强调句。</p>\n      \n      <p style="margin-bottom: 15px; text-align: justify;">AI生成的正文段落，描述如何明智利用AI工具。</p>\n      \n      <p style="margin-bottom: 0; text-align: justify;">AI生成的正文段落，描述选择工具和保持独立思考。</p>\n    </section>\n    \n    <!-- 7. 展望未来区块 (深蓝-红色渐变背景，底部圆角) -->\n    <section style="margin: 15px 0 25px; padding: 15px; background: linear-gradient(135deg, #1a2a6c, #b21f1f); border-radius: 16px; color: white; box-shadow: 0 5px 15px rgba(0,0,0,0.1);">\n      <h3 style="font-size: 22px; margin: 0 0 15px; font-weight: 700;">AI生成的未来展望标题</h3>\n      \n      <p style="margin-bottom: 15px; opacity: 0.9;">AI生成的展望引言段落。</p>\n      \n      <!-- 半透明背景的列表容器 -->\n      <div style="background-color: rgba(255,255,255,0.1); padding: 15px; border-radius: 12px; margin: 20px 0;">\n        <h4 style="margin: 0 0 10px; font-size: 18px;">AI生成未来趋势副标题</h4>\n        <p style="margin: 0 0 8px;"><span style="font-weight: 600; opacity: 1;">📊 AI生成趋势标题一</span> - 趋势描述内容</p>\n        <p style="margin: 0 0 8px;"><span style="font-weight: 600; opacity: 1;">🧠 AI生成趋势标题二</span> - 趋势描述内容</p>\n        <p style="margin: 0;"><span style="font-weight: 600; opacity: 1;">🔍 AI生成趋势标题三</span> - 趋势描述内容</p>\n      </div>\n      \n      <p style="margin: 0; font-size: 18px; font-weight: 500;">AI生成的结语或总结，关于未来投资者的角色。</p>\n    </section>\n    \n  </div>'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 12:11:03,370 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:11:03,370 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:11:03,394 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009D06930>
2025-07-21 12:11:03,395 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009CFC4D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:11:03,411 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CDDB50>
2025-07-21 12:11:03,411 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:11:03,413 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:11:03,413 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:11:03,413 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:11:03,413 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:11:21,693 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:11:21,694 - root - INFO - 获取生成历史请求
2025-07-21 12:11:21,695 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:11:21,696 - root - INFO - 获取发布历史请求
2025-07-21 12:11:21,697 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:11:21] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:11:21,699 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:11:21] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:11:51,695 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:11:51,696 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:11:51,696 - root - INFO - 获取生成历史请求
2025-07-21 12:11:51,696 - root - INFO - 获取发布历史请求
2025-07-21 12:11:51,699 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:11:51] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:11:51,699 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:11:51] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:12:08,187 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 12:12:08,187 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 12:12:08,188 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 12:12:08,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:12:08] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 12:12:08,197 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 12:12:08,197 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 12:12:08,198 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:12:08,198 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:12:08,198 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:12:08,199 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 12:12:08,199 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:12:08,201 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 12:12:08,300 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 12:12:08,301 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 12:12:08,301 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 12:12:08,301 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 12:12:08,302 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 12:12:08,302 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 12:12:08,302 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 12:12:08,303 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:12:08] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 12:12:08,311 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 12:12:08,311 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 12:12:08,312 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 12:12:08,312 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:12:08,312 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:12:08,313 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 12:12:08,806 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000009CF5DA0>, 'json_data': None}
2025-07-21 12:12:08,806 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 12:12:08,806 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:12:08,846 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009D07290>
2025-07-21 12:12:08,846 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009CFEFD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:12:08,866 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CDD520>
2025-07-21 12:12:08,866 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 12:12:08,867 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:12:08,867 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 12:12:08,867 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:12:08,867 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 12:12:08,909 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'cf3263ed-9ae4-94b4-bd95-2b09222f9b99'), (b'content-type', b'application/json'), (b'req-cost-time', b'26'), (b'req-arrive-time', b'1753071128462'), (b'resp-start-time', b'1753071128489'), (b'x-envoy-upstream-service-time', b'25'), (b'set-cookie', b'acw_tc=cf3263ed-9ae4-94b4-bd95-2b09222f9b9990352cbd3b893b86134f805b695d3b2a;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:12:08 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:12:08,912 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 12:12:08,913 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 12:12:08,915 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:12:08,915 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:12:08,916 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:12:08,917 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'cf3263ed-9ae4-94b4-bd95-2b09222f9b99', 'content-type': 'application/json', 'req-cost-time': '26', 'req-arrive-time': '1753071128462', 'resp-start-time': '1753071128489', 'x-envoy-upstream-service-time': '25', 'set-cookie': 'acw_tc=cf3263ed-9ae4-94b4-bd95-2b09222f9b9990352cbd3b893b86134f805b695d3b2a;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:12:08 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:12:08,919 - openai._base_client - DEBUG - request_id: cf3263ed-9ae4-94b4-bd95-2b09222f9b99
2025-07-21 12:12:08,936 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 12:12:08,936 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 12:12:08,937 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 12:12:08,937 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 12:12:08,938 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 12:12:08,939 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 12:12:08,939 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 12:12:08,941 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:12:08] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 12:12:08,962 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:12:08,962 - root - INFO - 获取生成历史请求
2025-07-21 12:12:08,965 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:12:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:12:08,978 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:12:08,978 - root - INFO - 获取发布历史请求
2025-07-21 12:12:08,979 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:12:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:12:21,700 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:12:21,701 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:12:21,703 - root - INFO - 获取生成历史请求
2025-07-21 12:12:21,703 - root - INFO - 获取发布历史请求
2025-07-21 12:12:21,708 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:12:21] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:12:21,710 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:12:21] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:12:51,686 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:12:51,686 - root - INFO - 获取生成历史请求
2025-07-21 12:12:51,686 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:12:51,687 - root - INFO - 获取发布历史请求
2025-07-21 12:12:51,688 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:12:51] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:12:51,688 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:12:51] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:13:21,697 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:13:21,698 - root - INFO - 获取生成历史请求
2025-07-21 12:13:21,700 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:13:21,701 - root - INFO - 获取发布历史请求
2025-07-21 12:13:21,705 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:13:21] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:13:21,708 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:13:21] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:13:49,936 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'3fdd05f2-0da7-9caf-8c8b-8867a7679a09'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'166512'), (b'req-arrive-time', b'1753071063006'), (b'resp-start-time', b'1753071229518'), (b'x-envoy-upstream-service-time', b'166497'), (b'set-cookie', b'acw_tc=3fdd05f2-0da7-9caf-8c8b-8867a7679a093e41090ecd44099c125e3faae59e53f4;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:13:49 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:13:49,938 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:13:49,939 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:13:49,940 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:13:49,941 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:13:49,941 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:13:49,942 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '3fdd05f2-0da7-9caf-8c8b-8867a7679a09', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '166512', 'req-arrive-time': '1753071063006', 'resp-start-time': '1753071229518', 'x-envoy-upstream-service-time': '166497', 'set-cookie': 'acw_tc=3fdd05f2-0da7-9caf-8c8b-8867a7679a093e41090ecd44099c125e3faae59e53f4;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:13:49 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:13:49,943 - openai._base_client - DEBUG - request_id: 3fdd05f2-0da7-9caf-8c8b-8867a7679a09
2025-07-21 12:13:49,948 - controllers.article_controller - INFO - 文章内容生成成功，长度: 9230字符
2025-07-21 12:13:49,948 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 12:13:49,948 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 昆明发生机动车撞人事件 当地回应
2025-07-21 12:13:50,410 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：昆明发生机动车撞人事件 当地回应\n内容预览：```html 昆明发生机动车撞人事件 当地回应 事件回顾与官方表态 <svg width="24" height="24"\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 12:13:50,410 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:13:50,410 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:13:50,460 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CDD760>
2025-07-21 12:13:50,460 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009D3A450> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:13:50,477 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CDDE50>
2025-07-21 12:13:50,478 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:13:50,478 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:13:50,478 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:13:50,479 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:13:50,479 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:13:51,692 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:13:51,692 - root - INFO - 获取生成历史请求
2025-07-21 12:13:51,692 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:13:51,692 - root - INFO - 获取发布历史请求
2025-07-21 12:13:51,694 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:13:51] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:13:51,695 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:13:51] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:13:51,872 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ddffbecb-22c6-9f25-9f50-8daf99967a44'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1381'), (b'req-arrive-time', b'1753071230075'), (b'resp-start-time', b'1753071231456'), (b'x-envoy-upstream-service-time', b'1380'), (b'set-cookie', b'acw_tc=ddffbecb-22c6-9f25-9f50-8daf99967a44159f4cc53334f37921fa9ff015f91a84;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:13:51 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:13:51,872 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:13:51,872 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:13:51,873 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:13:51,873 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:13:51,873 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:13:51,873 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ddffbecb-22c6-9f25-9f50-8daf99967a44', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1381', 'req-arrive-time': '1753071230075', 'resp-start-time': '1753071231456', 'x-envoy-upstream-service-time': '1380', 'set-cookie': 'acw_tc=ddffbecb-22c6-9f25-9f50-8daf99967a44159f4cc53334f37921fa9ff015f91a84;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:13:51 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:13:51,873 - openai._base_client - DEBUG - request_id: ddffbecb-22c6-9f25-9f50-8daf99967a44
2025-07-21 12:13:51,874 - services.dashscope_service - INFO - 文章摘要生成成功: 昆明一地发生机动车撞人事件，引发社会关注。当地相关部门迅速回应，通报事件进展及处理措施。文章梳理事件经过，带你了解最新官方表态与后续处置情况。
2025-07-21 12:13:51,874 - controllers.article_controller - INFO - 摘要生成完成: 昆明一地发生机动车撞人事件，引发社会关注。当地相关部门迅速回应，通报事件进展及处理措施。文章梳理事件...
2025-07-21 12:13:51,874 - controllers.article_controller - INFO - 文章字数约: 1000，计划生成配图数量: 1
2025-07-21 12:13:51,874 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 12:13:51,874 - controllers.article_controller - INFO - 开始处理文章配图，计划生成1张图片（仅本地路径，不上传微信）
2025-07-21 12:13:51,874 - controllers.article_controller - INFO - 计划在第[8]段后插入配图
2025-07-21 12:13:51,874 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 12:13:51,875 - services.image_service - INFO - 开始生成文章配图，标题: 昆明发生机动车撞人事件 当地回应, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/1
2025-07-21 12:13:51,901 - httpcore.connection - DEBUG - close.started
2025-07-21 12:13:51,901 - httpcore.connection - DEBUG - close.complete
2025-07-21 12:13:52,055 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': 'wanx2.1-t2i-plus', 'prompt': '吉卜力风格', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 12:13:52,055 - dashscope - DEBUG - Request body: {'model': 'wanx2.1-t2i-plus', 'parameters': {'n': 1, 'size': '1024*768', 'steps': 25}, 'input': {'prompt': '吉卜力风格', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts'}}
2025-07-21 12:13:52,056 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:13:52,280 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "POST /api/v1/services/aigc/text2image/image-synthesis HTTP/1.1" 200 None
2025-07-21 12:13:52,282 - dashscope - DEBUG - Response: {'request_id': '23afdb1a-9f42-9cb0-b0d0-538b6a55817f', 'output': {'task_id': 'ed95cf11-eb0b-4b53-9a8a-633f780ddb87', 'task_status': 'PENDING'}}
2025-07-21 12:13:52,284 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:52,286 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:13:52,408 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87 HTTP/1.1" 200 None
2025-07-21 12:13:52,409 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:52,410 - dashscope - INFO - The task ed95cf11-eb0b-4b53-9a8a-633f780ddb87 is  RUNNING
2025-07-21 12:13:53,411 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:53,689 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:13:53,817 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87 HTTP/1.1" 200 None
2025-07-21 12:13:53,817 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:53,818 - dashscope - INFO - The task ed95cf11-eb0b-4b53-9a8a-633f780ddb87 is  RUNNING
2025-07-21 12:13:54,818 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:54,818 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:13:54,901 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87 HTTP/1.1" 200 None
2025-07-21 12:13:54,902 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:54,902 - dashscope - INFO - The task ed95cf11-eb0b-4b53-9a8a-633f780ddb87 is  RUNNING
2025-07-21 12:13:56,903 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:56,903 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:13:57,017 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87 HTTP/1.1" 200 None
2025-07-21 12:13:57,018 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:57,018 - dashscope - INFO - The task ed95cf11-eb0b-4b53-9a8a-633f780ddb87 is  RUNNING
2025-07-21 12:13:59,019 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:59,020 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:13:59,131 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87 HTTP/1.1" 200 None
2025-07-21 12:13:59,132 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:13:59,132 - dashscope - INFO - The task ed95cf11-eb0b-4b53-9a8a-633f780ddb87 is  RUNNING
2025-07-21 12:14:01,133 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:14:01,134 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:14:01,260 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87 HTTP/1.1" 200 None
2025-07-21 12:14:01,260 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:14:01,262 - dashscope - INFO - The task ed95cf11-eb0b-4b53-9a8a-633f780ddb87 is  RUNNING
2025-07-21 12:14:05,263 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:14:05,263 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:14:05,342 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87 HTTP/1.1" 200 None
2025-07-21 12:14:05,344 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/ed95cf11-eb0b-4b53-9a8a-633f780ddb87
2025-07-21 12:14:05,346 - services.image_service - INFO - DashScope同步调用响应: {"status_code": 200, "request_id": "915c4c7b-27f9-96a6-b2f8-a44aa4f461e4", "code": null, "message": "", "output": {"task_id": "ed95cf11-eb0b-4b53-9a8a-633f780ddb87", "task_status": "SUCCEEDED", "results": [{"url": "https://dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com/1d/40/20250721/31781671/ed95cf11-eb0b-4b53-9a8a-633f780ddb872420430500.png?Expires=1753157640&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=TkrrJazFeNXjh0U%2FIRCZoKuuwhE%3D", "orig_prompt": "吉卜力风格", "actual_prompt": "吉卜力工作室动画风格，描绘一个宁静的欧洲小镇黄昏场景。石板街道两旁是爬满藤蔓的古老房屋，窗台上摆放着盛开的天竺葵。街角面包房飘出炊烟，橱窗透出温暖灯光。画面中央是一位扎着麻花辫的少女，身穿碎花连衣裙和针织开衫，骑着老式自行车缓缓驶过。背景可见远处钟楼与渐变橙红色的天空，柔和光影洒在地面水洼上形成彩虹倒影。水彩手绘质感，细腻的线条与饱和色彩，中景俯视视角。"}], "submit_time": "2025-07-21 12:13:51.837", "scheduled_time": "2025-07-21 12:13:51.869", "end_time": "2025-07-21 12:14:01.163", "task_metrics": {"TOTAL": 1, "SUCCEEDED": 1, "FAILED": 0}}, "usage": {"image_count": 1}}
2025-07-21 12:14:05,354 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com:443
2025-07-21 12:14:05,481 - urllib3.connectionpool - DEBUG - https://dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com:443 "GET /1d/40/20250721/31781671/ed95cf11-eb0b-4b53-9a8a-633f780ddb872420430500.png?Expires=1753157640&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=TkrrJazFeNXjh0U%2FIRCZoKuuwhE%3D HTTP/1.1" 200 1436616
2025-07-21 12:14:05,647 - services.image_service - INFO - 图片已保存到: cache\ed95cf11-eb0b-4b53-9a8a-633f780ddb872420430500.png
2025-07-21 12:14:05,647 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\ed95cf11-eb0b-4b53-9a8a-633f780ddb872420430500.png
2025-07-21 12:14:05,647 - controllers.article_controller - INFO - 在第8段后插入配图
2025-07-21 12:14:05,648 - controllers.article_controller - INFO - 配图处理完成，共插入1张图片
2025-07-21 12:14:05,675 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_昆明发生机动车撞人事件 当地回应_20250721_121405.html
2025-07-21 12:14:05,676 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 12:14:05,790 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 12:14:05,791 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 8664
2025-07-21 12:14:05,793 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 12:14:05,794 - controllers.article_controller - INFO - 内容清理完成，移除了 723 个字符，清理后长度: 8664
2025-07-21 12:14:05,796 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_昆明发生机动车撞人事件 当地回应_20250721_121405.html
2025-07-21 12:14:05,796 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=昆明发生机动车撞人事件 当地回应, 内容前100字=<div style="font-family: &quot;Noto Serif SC&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&q, 图片数=2
2025-07-21 12:14:05,796 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:14:05,797 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:14:05,801 - services.history_service - INFO - 添加生成历史记录: 昆明发生机动车撞人事件 当地回应
2025-07-21 12:14:05,801 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 12:14:05,801 - controllers.article_controller - INFO - 生成结果预览: 标题=昆明发生机动车撞人事件 当地回应, 内容长度=8664, 配图数量=1
2025-07-21 12:14:05,802 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:14:05] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 12:14:05,809 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:14:05,809 - root - INFO - 获取生成历史请求
2025-07-21 12:14:05,810 - root - INFO - 请求: GET /【微信永久素材URL】
2025-07-21 12:14:05,811 - root - INFO - 请求: GET /cache/ed95cf11-eb0b-4b53-9a8a-633f780ddb872420430500.png
2025-07-21 12:14:05,811 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:14:05] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:14:05,811 - root - WARNING - 404错误: http://192.168.124.16:5000/【微信永久素材URL】
2025-07-21 12:14:05,811 - root - INFO - 访问缓存文件: ed95cf11-eb0b-4b53-9a8a-633f780ddb872420430500.png
2025-07-21 12:14:05,811 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:14:05] "[33mGET /【微信永久素材URL】 HTTP/1.1[0m" 404 -
2025-07-21 12:14:05,812 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:14:05] "GET /cache/ed95cf11-eb0b-4b53-9a8a-633f780ddb872420430500.png HTTP/1.1" 200 -
2025-07-21 12:14:21,703 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:14:21,704 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:14:21,705 - root - INFO - 获取生成历史请求
2025-07-21 12:14:21,705 - root - INFO - 获取发布历史请求
2025-07-21 12:14:21,708 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:14:21] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:14:21,710 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:14:21] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:14:52,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:14:52,189 - root - INFO - 获取生成历史请求
2025-07-21 12:14:52,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:14:52,190 - root - INFO - 获取发布历史请求
2025-07-21 12:14:52,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:14:52] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:14:52,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:14:52] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:15:22,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:15:22,180 - root - INFO - 获取生成历史请求
2025-07-21 12:15:22,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:15:22,183 - root - INFO - 获取发布历史请求
2025-07-21 12:15:22,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:15:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:15:22,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:15:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:16:17,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:16:17,182 - root - INFO - 获取生成历史请求
2025-07-21 12:16:17,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:16:17,182 - root - INFO - 获取发布历史请求
2025-07-21 12:16:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:16:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:16:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:16:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:17:17,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:17:17,192 - root - INFO - 获取生成历史请求
2025-07-21 12:17:17,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:17:17,194 - root - INFO - 获取发布历史请求
2025-07-21 12:17:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:17:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:17:17,196 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:17:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:18:17,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:18:17,180 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:18:17,181 - root - INFO - 获取生成历史请求
2025-07-21 12:18:17,182 - root - INFO - 获取发布历史请求
2025-07-21 12:18:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:18:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:18:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:18:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:19:17,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:19:17,181 - root - INFO - 获取生成历史请求
2025-07-21 12:19:17,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:19:17,183 - root - INFO - 获取发布历史请求
2025-07-21 12:19:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:19:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:19:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:19:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:20:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:20:17,183 - root - INFO - 获取生成历史请求
2025-07-21 12:20:17,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:20:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:20:17,184 - root - INFO - 获取发布历史请求
2025-07-21 12:20:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:20:38,660 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:20:38,661 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:20:38,661 - root - INFO - 获取生成历史请求
2025-07-21 12:20:38,662 - root - INFO - 获取发布历史请求
2025-07-21 12:20:38,664 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:38] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:20:38,665 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:38] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:20:54,500 - root - INFO - 应用目录创建完成
2025-07-21 12:20:54,500 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:20:54,500 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:20:54,501 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:20:54,501 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:20:54,501 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 12:20:54,501 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:20:54,501 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:20:54,501 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:20:54,501 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 12:20:54,501 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:20:54,502 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 12:20:54,502 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 12:20:54,502 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 12:20:55,385 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 12:20:55,386 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 12:20:56,750 - root - INFO - 请求: GET /
2025-07-21 12:20:56,750 - root - INFO - 访问主页面
2025-07-21 12:20:56,760 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:56] "GET / HTTP/1.1" 200 -
2025-07-21 12:20:56,823 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 12:20:56,842 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 12:20:56,843 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 12:20:56,975 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:56] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 12:20:57,000 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:57] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 12:20:57,006 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:57] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 12:20:57,083 - root - INFO - 请求: GET /api/get_ip
2025-07-21 12:20:57,084 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:57] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 12:20:57,100 - root - INFO - 请求: GET /api/style-templates
2025-07-21 12:20:57,104 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:57] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 12:20:57,116 - root - INFO - 请求: GET /api/config
2025-07-21 12:20:57,116 - root - INFO - 处理配置请求: GET
2025-07-21 12:20:57,116 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 12:20:57,117 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:20:57,117 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 12:20:57,118 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:20:57] "GET /api/config HTTP/1.1" 200 -
2025-07-21 12:20:57,290 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 12:20:57,290 - root - INFO - 获取Gemini可用模型列表
2025-07-21 12:20:57,290 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 12:20:57,291 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:20:57,291 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:20:57,291 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 12:20:58,374 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 12:20:58,374 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 12:20:58,375 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 12:21:27,128 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:21:27,131 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:21:27,131 - root - INFO - 获取生成历史请求
2025-07-21 12:21:27,131 - root - INFO - 获取发布历史请求
2025-07-21 12:21:27,137 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:21:27] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:21:27,139 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:21:27] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:21:40,441 - root - INFO - 请求: POST /api/generate-article
2025-07-21 12:21:40,441 - root - INFO - 生成文章请求
2025-07-21 12:21:40,441 - controllers.article_controller - INFO - 【唯一请求ID】9423c396-4ea5-44c5-9b8b-8318c5a090bf - generate_article
2025-07-21 12:21:40,441 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '上海市民崩溃:今年的蝉为啥这么多', 'word_count': 1000, 'image_count': 1, 'format_template': '', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '3D风格，仰视，电影光影', 'negative_prompt': '', 'size': ''}}
2025-07-21 12:21:40,441 - controllers.article_controller - INFO - 开始生成文章，标题: 上海市民崩溃:今年的蝉为啥这么多
2025-07-21 12:21:40,442 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 12:21:40,442 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:21:40,442 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 12:21:40,442 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 12:21:40,888 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请帮我撰写一篇关于《上海市民崩溃:今年的蝉为啥这么多》的微信公众号文章。请严格遵循您将在下方接收到的HTML排版结构和样式风格进行输出（请直接输出完整的HTML代码，不包含其他说明文字）。\n\n---\n**重要：微信公众号文章内容输出规范**\n1.  **HTML格式：** 必须使用标准的HTML标签和内联`style`属性。\n2.  **禁止JavaScript：** 禁止使用任何JavaScript代码，包括`<script>`标签、`javascript:`协议的链接以及所有HTML元素的`on`事件属性（如`onclick`, `onload`等）。\n4.  **字符数限制：** 最终输出的HTML内容总字符数必须小于等于20000字符，且可见文本字数约为1000字。请注意HTML标签和样式本身会占用字符，请在保证排版效果的前提下尽量简洁。\n5.  **禁止外部CSS/内嵌<style>：** 禁止使用外部CSS文件或在HTML中嵌入`<style>`标签，所有样式必须通过元素的`style=""`属性以内联形式声明。\n6.  **`backdrop-filter` 兼容性：** 如果样式定义中包含`backdrop-filter`属性，请注意其在微信Webview中的兼容性可能不稳定，建议作为可选效果，或考虑使用半透明背景替代。\n\nHTML标签使用规范：\n- <h2>、<h3> 用于段落标题\n- <p> 用于正文段落\n- <ul>、<li> 用于要点列表\n- <blockquote> 用于引用或重要观点\n- <strong> 用于强调重要内容\n\n请直接输出HTML格式的文章内容，不要包含其他说明文字或代码块之外的任何文本：'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 12:21:40,920 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:21:40,920 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:21:40,959 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB68D0>
2025-07-21 12:21:40,959 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B9C650> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:21:40,973 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB6630>
2025-07-21 12:21:40,973 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:21:40,974 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:21:40,974 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:21:40,974 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:21:40,974 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:21:57,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:21:57,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:21:57,194 - root - INFO - 获取生成历史请求
2025-07-21 12:21:57,194 - root - INFO - 获取发布历史请求
2025-07-21 12:21:57,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:21:57] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:21:57,202 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:21:57] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:22:19,114 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'd82c769b-d426-933b-8968-533f88114ccb'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'38128'), (b'req-arrive-time', b'1753071700577'), (b'resp-start-time', b'1753071738705'), (b'x-envoy-upstream-service-time', b'38127'), (b'set-cookie', b'acw_tc=d82c769b-d426-933b-8968-533f88114ccb5b6e53fc2cb4582be2f6aede96b5964c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:22:18 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:22:19,114 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:22:19,115 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:22:19,115 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:22:19,115 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:22:19,115 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:22:19,116 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'd82c769b-d426-933b-8968-533f88114ccb', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '38128', 'req-arrive-time': '1753071700577', 'resp-start-time': '1753071738705', 'x-envoy-upstream-service-time': '38127', 'set-cookie': 'acw_tc=d82c769b-d426-933b-8968-533f88114ccb5b6e53fc2cb4582be2f6aede96b5964c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:22:18 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:22:19,116 - openai._base_client - DEBUG - request_id: d82c769b-d426-933b-8968-533f88114ccb
2025-07-21 12:22:19,118 - controllers.article_controller - INFO - 文章内容生成成功，长度: 3314字符
2025-07-21 12:22:19,119 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 12:22:19,119 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 上海市民崩溃:今年的蝉为啥这么多
2025-07-21 12:22:19,569 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：上海市民崩溃:今年的蝉为啥这么多\n内容预览：```html 上海市民崩溃：今年的蝉为啥这么多？ 最近，上海的朋友圈被一种声音刷屏了——“知了知了”，不是夏天来了，是蝉声太吵了！不少市民表示，今年的蝉简直“多到离谱”，不仅白天震耳欲聋，晚上也吵得人睡不着。这到底是怎么回事？难道蝉也搞“报复性增长”了？ 一、蝉的数量为何暴增？ 根据上海林业部门的初步调查，今年蝉的数量明显增加，主要原因是气候条件特别适合蝉的生长。 气温回升快，湿度适中，适合蝉的若虫破土而出。 去年冬季偏暖，使得更多蝉的幼虫存活下来。 城市绿化面积增加，为蝉提供了更多栖息地。\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 12:22:19,569 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:22:19,569 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:22:19,609 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BE0C50>
2025-07-21 12:22:19,609 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B9FDD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:22:19,622 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB6030>
2025-07-21 12:22:19,622 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:22:19,622 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:22:19,623 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:22:19,623 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:22:19,623 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:22:21,125 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'8d77f207-5dcc-90e4-a379-f62ab3a5643b'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1491'), (b'req-arrive-time', b'1753071739226'), (b'resp-start-time', b'1753071740717'), (b'x-envoy-upstream-service-time', b'1489'), (b'set-cookie', b'acw_tc=8d77f207-5dcc-90e4-a379-f62ab3a5643be1687ccf0d765570effa9b01544f7f11;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:22:20 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:22:21,126 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:22:21,127 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:22:21,127 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:22:21,128 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:22:21,128 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:22:21,129 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '8d77f207-5dcc-90e4-a379-f62ab3a5643b', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1491', 'req-arrive-time': '1753071739226', 'resp-start-time': '1753071740717', 'x-envoy-upstream-service-time': '1489', 'set-cookie': 'acw_tc=8d77f207-5dcc-90e4-a379-f62ab3a5643be1687ccf0d765570effa9b01544f7f11;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:22:20 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:22:21,129 - openai._base_client - DEBUG - request_id: 8d77f207-5dcc-90e4-a379-f62ab3a5643b
2025-07-21 12:22:21,130 - services.dashscope_service - INFO - 文章摘要生成成功: 上海街头蝉声震耳，市民直呼“崩溃”！今年蝉群数量暴增，原因竟是暖冬、湿热天气和绿化增多。气候+环境=蝉的狂欢，人类的“灾难”？揭秘蝉灾背后的科学真相。
2025-07-21 12:22:21,130 - controllers.article_controller - INFO - 摘要生成完成: 上海街头蝉声震耳，市民直呼“崩溃”！今年蝉群数量暴增，原因竟是暖冬、湿热天气和绿化增多。气候+环境=...
2025-07-21 12:22:21,131 - controllers.article_controller - INFO - 文章字数约: 1000，计划生成配图数量: 1
2025-07-21 12:22:21,131 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 12:22:21,131 - controllers.article_controller - INFO - 开始处理文章配图，计划生成1张图片（仅本地路径，不上传微信）
2025-07-21 12:22:21,132 - controllers.article_controller - INFO - 计划在第[6]段后插入配图
2025-07-21 12:22:21,132 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 12:22:21,133 - services.image_service - INFO - 开始生成文章配图，标题: 上海市民崩溃:今年的蝉为啥这么多, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/1
2025-07-21 12:22:21,190 - httpcore.connection - DEBUG - close.started
2025-07-21 12:22:21,190 - httpcore.connection - DEBUG - close.complete
2025-07-21 12:22:21,338 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': 'wanx2.1-t2i-plus', 'prompt': '3D风格，仰视，电影光影', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 12:22:21,338 - dashscope - DEBUG - Request body: {'model': 'wanx2.1-t2i-plus', 'parameters': {'n': 1, 'size': '1024*768', 'steps': 25}, 'input': {'prompt': '3D风格，仰视，电影光影', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts'}}
2025-07-21 12:22:21,339 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:22:21,509 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "POST /api/v1/services/aigc/text2image/image-synthesis HTTP/1.1" 200 None
2025-07-21 12:22:21,509 - dashscope - DEBUG - Response: {'request_id': 'd5f24c91-157f-9cb3-a634-a97037ba2d25', 'output': {'task_id': 'cc83dd7f-1f7f-45da-8ee9-9724337ca711', 'task_status': 'PENDING'}}
2025-07-21 12:22:21,510 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:21,512 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:22:21,626 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711 HTTP/1.1" 200 None
2025-07-21 12:22:21,627 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:21,628 - dashscope - INFO - The task cc83dd7f-1f7f-45da-8ee9-9724337ca711 is  RUNNING
2025-07-21 12:22:22,567 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 12:22:22,567 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 12:22:22,568 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 12:22:22,568 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:22] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 12:22:22,576 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 12:22:22,577 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 12:22:22,577 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:22:22,577 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:22:22,578 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:22:22,578 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 12:22:22,578 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:22:22,579 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 12:22:22,629 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:22,630 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:22:22,681 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 12:22:22,682 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 12:22:22,682 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 12:22:22,683 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 12:22:22,683 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 12:22:22,683 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 12:22:22,684 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 12:22:22,684 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:22] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 12:22:22,693 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 12:22:22,693 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 12:22:22,693 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 12:22:22,694 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:22:22,694 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:22:22,695 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 12:22:22,745 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711 HTTP/1.1" 200 None
2025-07-21 12:22:22,746 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:22,746 - dashscope - INFO - The task cc83dd7f-1f7f-45da-8ee9-9724337ca711 is  RUNNING
2025-07-21 12:22:23,151 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x000000000A41EE80>, 'json_data': None}
2025-07-21 12:22:23,152 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 12:22:23,152 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:22:23,188 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A43D310>
2025-07-21 12:22:23,188 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000000000A42CC50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:22:23,206 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A43CFB0>
2025-07-21 12:22:23,207 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 12:22:23,207 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:22:23,207 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 12:22:23,207 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:22:23,208 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 12:22:23,250 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'85bf2abd-43db-9b27-aa1d-8d54c802421f'), (b'content-type', b'application/json'), (b'req-cost-time', b'30'), (b'req-arrive-time', b'1753071742812'), (b'resp-start-time', b'1753071742842'), (b'x-envoy-upstream-service-time', b'29'), (b'set-cookie', b'acw_tc=85bf2abd-43db-9b27-aa1d-8d54c802421f0a790a25f79047a96b05083022cbd516;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:22:22 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:22:23,250 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 12:22:23,250 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 12:22:23,250 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:22:23,251 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:22:23,252 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:22:23,252 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '85bf2abd-43db-9b27-aa1d-8d54c802421f', 'content-type': 'application/json', 'req-cost-time': '30', 'req-arrive-time': '1753071742812', 'resp-start-time': '1753071742842', 'x-envoy-upstream-service-time': '29', 'set-cookie': 'acw_tc=85bf2abd-43db-9b27-aa1d-8d54c802421f0a790a25f79047a96b05083022cbd516;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:22:22 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:22:23,252 - openai._base_client - DEBUG - request_id: 85bf2abd-43db-9b27-aa1d-8d54c802421f
2025-07-21 12:22:23,255 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 12:22:23,255 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 12:22:23,255 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 12:22:23,256 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 12:22:23,256 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 12:22:23,256 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 12:22:23,256 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 12:22:23,257 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:23] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 12:22:23,264 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:22:23,265 - root - INFO - 获取生成历史请求
2025-07-21 12:22:23,266 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:23] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:22:23,273 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:22:23,273 - root - INFO - 获取发布历史请求
2025-07-21 12:22:23,274 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:23] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:22:23,747 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:23,747 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:22:23,862 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711 HTTP/1.1" 200 None
2025-07-21 12:22:23,863 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:23,864 - dashscope - INFO - The task cc83dd7f-1f7f-45da-8ee9-9724337ca711 is  RUNNING
2025-07-21 12:22:25,866 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:25,869 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:22:25,992 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711 HTTP/1.1" 200 None
2025-07-21 12:22:25,992 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:25,993 - dashscope - INFO - The task cc83dd7f-1f7f-45da-8ee9-9724337ca711 is  RUNNING
2025-07-21 12:22:27,115 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:22:27,115 - root - INFO - 获取生成历史请求
2025-07-21 12:22:27,115 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:22:27,115 - root - INFO - 获取发布历史请求
2025-07-21 12:22:27,116 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:27] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:22:27,116 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:27] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:22:27,994 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:27,995 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:22:28,107 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711 HTTP/1.1" 200 None
2025-07-21 12:22:28,107 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:28,108 - dashscope - INFO - The task cc83dd7f-1f7f-45da-8ee9-9724337ca711 is  RUNNING
2025-07-21 12:22:30,109 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:30,111 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:22:30,210 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711 HTTP/1.1" 200 None
2025-07-21 12:22:30,211 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:30,212 - dashscope - INFO - The task cc83dd7f-1f7f-45da-8ee9-9724337ca711 is  RUNNING
2025-07-21 12:22:34,213 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:34,213 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:22:34,310 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711 HTTP/1.1" 200 None
2025-07-21 12:22:34,312 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/cc83dd7f-1f7f-45da-8ee9-9724337ca711
2025-07-21 12:22:34,313 - services.image_service - INFO - DashScope同步调用响应: {"status_code": 200, "request_id": "d054e369-e53e-9635-afbf-73b47282f377", "code": null, "message": "", "output": {"task_id": "cc83dd7f-1f7f-45da-8ee9-9724337ca711", "task_status": "SUCCEEDED", "results": [{"url": "https://dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com/1d/e5/20250721/ce62dca3/cc83dd7f-1f7f-45da-8ee9-9724337ca71178460323.png?Expires=1753158151&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=irxS4SDKYbTbEIzOD1XhZXTFcEI%3D", "orig_prompt": "3D风格，仰视，电影光影", "actual_prompt": "写实风格3D渲染，低角度仰视视角，一位身着银色未来感装甲的战士屹立于废墟之上。装甲表面带有细腻的金属划痕与光泽，肩部镶嵌蓝色能量核心，散发冷冽光芒。背景中破碎的城市轮廓隐约可见，乌云密布的天空透出微弱的金色余晖，营造出强烈的电影级光影对比。人物姿态挺拔，面部轮廓分明，目光坚定望向远方，充满史诗感与视觉冲击力。"}], "submit_time": "2025-07-21 12:22:21.086", "scheduled_time": "2025-07-21 12:22:21.125", "end_time": "2025-07-21 12:22:31.558", "task_metrics": {"TOTAL": 1, "SUCCEEDED": 1, "FAILED": 0}}, "usage": {"image_count": 1}}
2025-07-21 12:22:34,318 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com:443
2025-07-21 12:22:34,403 - urllib3.connectionpool - DEBUG - https://dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com:443 "GET /1d/e5/20250721/ce62dca3/cc83dd7f-1f7f-45da-8ee9-9724337ca71178460323.png?Expires=1753158151&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=irxS4SDKYbTbEIzOD1XhZXTFcEI%3D HTTP/1.1" 200 964332
2025-07-21 12:22:34,937 - services.image_service - INFO - 图片已保存到: cache\cc83dd7f-1f7f-45da-8ee9-9724337ca71178460323.png
2025-07-21 12:22:34,938 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\cc83dd7f-1f7f-45da-8ee9-9724337ca71178460323.png
2025-07-21 12:22:34,938 - controllers.article_controller - INFO - 在第6段后插入配图
2025-07-21 12:22:34,938 - controllers.article_controller - INFO - 配图处理完成，共插入1张图片
2025-07-21 12:22:34,940 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_上海市民崩溃今年的蝉为啥这么多_20250721_122234.html
2025-07-21 12:22:34,940 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 12:22:35,067 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 12:22:35,067 - controllers.article_controller - WARNING - 未找到</div>标签，保留全部内容
2025-07-21 12:22:35,069 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 12:22:35,069 - controllers.article_controller - INFO - 内容清理完成，移除了 8 个字符，清理后长度: 3461
2025-07-21 12:22:35,076 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_上海市民崩溃今年的蝉为啥这么多_20250721_122235.html
2025-07-21 12:22:35,076 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=上海市民崩溃:今年的蝉为啥这么多, 内容前100字=<h2 style="font-size: 24px; font-weight: bold; margin-bottom: 10px; color: #333;">上海市民崩溃：今年的蝉为啥这么多？<, 图片数=1
2025-07-21 12:22:35,076 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:22:35,077 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:22:35,081 - services.history_service - INFO - 添加生成历史记录: 上海市民崩溃:今年的蝉为啥这么多
2025-07-21 12:22:35,081 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 12:22:35,081 - controllers.article_controller - INFO - 生成结果预览: 标题=上海市民崩溃:今年的蝉为啥这么多, 内容长度=3461, 配图数量=1
2025-07-21 12:22:35,081 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:35] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 12:22:35,087 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:22:35,088 - root - INFO - 获取生成历史请求
2025-07-21 12:22:35,088 - root - INFO - 请求: GET /cache/cc83dd7f-1f7f-45da-8ee9-9724337ca71178460323.png
2025-07-21 12:22:35,088 - root - INFO - 访问缓存文件: cc83dd7f-1f7f-45da-8ee9-9724337ca71178460323.png
2025-07-21 12:22:35,088 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:35] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:22:35,090 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:35] "GET /cache/cc83dd7f-1f7f-45da-8ee9-9724337ca71178460323.png HTTP/1.1" 200 -
2025-07-21 12:22:57,121 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:22:57,122 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:22:57,122 - root - INFO - 获取生成历史请求
2025-07-21 12:22:57,122 - root - INFO - 获取发布历史请求
2025-07-21 12:22:57,125 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:57] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:22:57,126 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:22:57] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:23:27,119 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:23:27,119 - root - INFO - 获取生成历史请求
2025-07-21 12:23:27,120 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:23:27,121 - root - INFO - 获取发布历史请求
2025-07-21 12:23:27,121 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:23:27] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:23:27,122 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:23:27] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:23:57,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:23:57,187 - root - INFO - 获取生成历史请求
2025-07-21 12:23:57,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:23:57,187 - root - INFO - 获取发布历史请求
2025-07-21 12:23:57,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:23:57] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:23:57,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:23:57] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:24:27,177 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:24:27,177 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:24:27,177 - root - INFO - 获取生成历史请求
2025-07-21 12:24:27,178 - root - INFO - 获取发布历史请求
2025-07-21 12:24:27,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:24:27] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:24:27,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:24:27] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:25:17,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:25:17,181 - root - INFO - 获取生成历史请求
2025-07-21 12:25:17,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:25:17,182 - root - INFO - 获取发布历史请求
2025-07-21 12:25:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:25:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:25:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:25:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:26:17,174 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:26:17,174 - root - INFO - 获取生成历史请求
2025-07-21 12:26:17,175 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:26:17,175 - root - INFO - 获取发布历史请求
2025-07-21 12:26:17,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:26:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:26:17,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:26:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:27:17,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:27:17,182 - root - INFO - 获取生成历史请求
2025-07-21 12:27:17,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:27:17,182 - root - INFO - 获取发布历史请求
2025-07-21 12:27:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:27:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:27:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:27:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:28:17,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:28:17,180 - root - INFO - 获取生成历史请求
2025-07-21 12:28:17,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:28:17,182 - root - INFO - 获取发布历史请求
2025-07-21 12:28:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:28:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:28:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:28:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:28:35,652 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:28:35,652 - root - INFO - 获取生成历史请求
2025-07-21 12:28:35,653 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:28:35,653 - root - INFO - 获取发布历史请求
2025-07-21 12:28:35,654 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:28:35] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:28:35,655 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:28:35] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:29:39,132 - root - INFO - 应用目录创建完成
2025-07-21 12:29:39,133 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:29:39,133 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:29:39,133 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:29:39,133 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:29:39,133 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 12:29:39,134 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:29:39,134 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:29:39,134 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:29:39,134 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 12:29:39,134 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:29:39,134 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 12:29:39,135 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 12:29:39,135 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 12:29:40,012 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 12:29:40,012 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 12:29:42,267 - root - INFO - 请求: GET /
2025-07-21 12:29:42,267 - root - INFO - 访问主页面
2025-07-21 12:29:42,277 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:29:42] "GET / HTTP/1.1" 200 -
2025-07-21 12:29:42,333 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 12:29:42,336 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 12:29:42,337 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 12:29:42,549 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:29:42] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 12:29:42,558 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:29:42] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 12:29:42,558 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:29:42] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 12:29:42,639 - root - INFO - 请求: GET /api/get_ip
2025-07-21 12:29:42,640 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:29:42] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 12:29:42,646 - root - INFO - 请求: GET /api/style-templates
2025-07-21 12:29:42,652 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:29:42] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 12:29:42,661 - root - INFO - 请求: GET /api/config
2025-07-21 12:29:42,661 - root - INFO - 处理配置请求: GET
2025-07-21 12:29:42,662 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 12:29:42,662 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:29:42,663 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 12:29:42,663 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:29:42] "GET /api/config HTTP/1.1" 200 -
2025-07-21 12:29:42,826 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 12:29:42,826 - root - INFO - 获取Gemini可用模型列表
2025-07-21 12:29:42,826 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 12:29:42,827 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:29:42,827 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:29:42,827 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 12:29:43,989 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 12:29:43,989 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 12:29:43,990 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 12:29:58,556 - root - INFO - 请求: POST /api/generate-article
2025-07-21 12:29:58,557 - root - INFO - 生成文章请求
2025-07-21 12:29:58,557 - controllers.article_controller - INFO - 【唯一请求ID】f888a01d-0351-4c2e-873c-85a8a263e530 - generate_article
2025-07-21 12:29:58,557 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '千万粉网红演唱会不露脸 主办方回应', 'word_count': 1000, 'image_count': 1, 'format_template': '', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '', 'negative_prompt': '', 'size': ''}}
2025-07-21 12:29:58,557 - controllers.article_controller - INFO - 开始生成文章，标题: 千万粉网红演唱会不露脸 主办方回应
2025-07-21 12:29:58,557 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 12:29:58,559 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:29:58,559 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 12:29:58,559 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 12:29:59,043 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请帮我撰写一篇关于《千万粉网红演唱会不露脸 主办方回应》的微信公众号文章。请严格遵循您将在下方接收到的HTML排版结构和样式风格进行输出（请直接输出完整的HTML代码，不包含其他说明文字）。\n\n---\n**重要：微信公众号文章内容输出规范**\n1.  **HTML格式：** 必须使用标准的HTML标签和内联`style`属性。\n2.  **禁止JavaScript：** 禁止使用任何JavaScript代码，包括`<script>`标签、`javascript:`协议的链接以及所有HTML元素的`on`事件属性（如`onclick`, `onload`等）。\n4.  **字符数限制：** 最终输出的HTML内容总字符数必须小于等于20000字符，且可见文本字数约为1000字。请注意HTML标签和样式本身会占用字符，请在保证排版效果的前提下尽量简洁。\n5.  **禁止外部CSS/内嵌<style>：** 禁止使用外部CSS文件或在HTML中嵌入`<style>`标签，所有样式必须通过元素的`style=""`属性以内联形式声明。\n6.  **`backdrop-filter` 兼容性：** 如果样式定义中包含`backdrop-filter`属性，请注意其在微信Webview中的兼容性可能不稳定，建议作为可选效果，或考虑使用半透明背景替代。\n\nHTML标签使用规范：\n- <h2>、<h3> 用于段落标题\n- <p> 用于正文段落\n- <ul>、<li> 用于要点列表\n- <blockquote> 用于引用或重要观点\n- <strong> 用于强调重要内容\n\n请直接输出HTML格式的文章内容，不要包含其他说明文字或代码块之外的任何文本：'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 12:29:59,071 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:29:59,072 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:29:59,112 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BE2840>
2025-07-21 12:29:59,112 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BD0150> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:29:59,128 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BE2420>
2025-07-21 12:29:59,129 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:29:59,129 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:29:59,129 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:29:59,129 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:29:59,129 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:30:12,671 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:30:12,671 - root - INFO - 获取生成历史请求
2025-07-21 12:30:12,671 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:30:12,672 - root - INFO - 获取发布历史请求
2025-07-21 12:30:12,672 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:30:12] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:30:12,673 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:30:12] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:30:30,570 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'eca77326-f193-9aaf-88af-3f040e20175d'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'31429'), (b'req-arrive-time', b'1753072198739'), (b'resp-start-time', b'1753072230169'), (b'x-envoy-upstream-service-time', b'31428'), (b'set-cookie', b'acw_tc=eca77326-f193-9aaf-88af-3f040e20175d3fa176fba9b05c161fc7a074a0736e53;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:30:29 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:30:30,571 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:30:30,571 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:30:30,571 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:30:30,571 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:30:30,572 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:30:30,572 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'eca77326-f193-9aaf-88af-3f040e20175d', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '31429', 'req-arrive-time': '1753072198739', 'resp-start-time': '1753072230169', 'x-envoy-upstream-service-time': '31428', 'set-cookie': 'acw_tc=eca77326-f193-9aaf-88af-3f040e20175d3fa176fba9b05c161fc7a074a0736e53;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:30:29 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:30:30,572 - openai._base_client - DEBUG - request_id: eca77326-f193-9aaf-88af-3f040e20175d
2025-07-21 12:30:30,574 - controllers.article_controller - INFO - 文章内容生成成功，长度: 1971字符
2025-07-21 12:30:30,574 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 12:30:30,574 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 千万粉网红演唱会不露脸 主办方回应
2025-07-21 12:30:31,064 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：千万粉网红演唱会不露脸 主办方回应\n内容预览：```html 千万粉网红演唱会不露脸，主办方回应 近日，一场备受关注的“千万粉丝网红演唱会”在某地举办，然而现场观众和粉丝却意外发现，这位网红全程未露脸，仅通过声音与观众互动。这一反常举动迅速引发热议，登上多个社交平台热搜。 据悉，该网红在某短视频平台拥有超千万粉丝，以独特嗓音和亲民形象走红。此次演唱会原定为其首次线下亮相，不少粉丝更是从外地赶来，只为一睹“真容”。但现场全程未露脸，仅通过声音互动，令不少观众感到失望。 对此，主办方回应称：“因艺人个人原因，出于隐私保护考虑，决定不露脸演出。现场已通过灯光、音效和互动环节尽力营造氛围，感谢粉丝理解与支持。” 粉丝反应两极分化 部分粉丝表示理解：“声音就是他的特色，能听到现场演唱已经很满足。”也有粉丝表示不满：“花了好几百块，连脸都没看到，感觉被欺骗了。” <p style="font-size:16px;line-height:1.75em;co\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 12:30:31,065 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:30:31,065 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:30:31,098 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C10B60>
2025-07-21 12:30:31,098 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BD3CD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:30:31,113 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BE24E0>
2025-07-21 12:30:31,113 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:30:31,113 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:30:31,113 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:30:31,114 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:30:31,114 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:30:33,322 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'aba5443b-683d-9bab-9ec1-b0d12431a8fc'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'2196'), (b'req-arrive-time', b'1753072230724'), (b'resp-start-time', b'1753072232920'), (b'x-envoy-upstream-service-time', b'2195'), (b'set-cookie', b'acw_tc=aba5443b-683d-9bab-9ec1-b0d12431a8fc4247b90328e46db327c49310f6299ca1;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:30:32 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:30:33,323 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:30:33,323 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:30:33,324 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:30:33,324 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:30:33,324 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:30:33,325 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'aba5443b-683d-9bab-9ec1-b0d12431a8fc', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '2196', 'req-arrive-time': '1753072230724', 'resp-start-time': '1753072232920', 'x-envoy-upstream-service-time': '2195', 'set-cookie': 'acw_tc=aba5443b-683d-9bab-9ec1-b0d12431a8fc4247b90328e46db327c49310f6299ca1;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:30:32 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:30:33,325 - openai._base_client - DEBUG - request_id: aba5443b-683d-9bab-9ec1-b0d12431a8fc
2025-07-21 12:30:33,326 - services.dashscope_service - INFO - 文章摘要生成成功: 千万粉网红演唱会全程未露脸，仅用声音互动，引发观众热议。主办方称出于隐私保护，粉丝反应两极分化。有人理解支持，也有人质疑体验打折。一场“听得到看不到”的演出，究竟值不值？
2025-07-21 12:30:33,326 - controllers.article_controller - INFO - 摘要生成完成: 千万粉网红演唱会全程未露脸，仅用声音互动，引发观众热议。主办方称出于隐私保护，粉丝反应两极分化。有人...
2025-07-21 12:30:33,326 - controllers.article_controller - INFO - 文章字数约: 1000，计划生成配图数量: 1
2025-07-21 12:30:33,326 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 12:30:33,327 - controllers.article_controller - INFO - 开始处理文章配图，计划生成1张图片（仅本地路径，不上传微信）
2025-07-21 12:30:33,327 - controllers.article_controller - INFO - 计划在第[6]段后插入配图
2025-07-21 12:30:33,327 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 12:30:33,327 - services.image_service - INFO - 开始生成文章配图，标题: 千万粉网红演唱会不露脸 主办方回应, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/1
2025-07-21 12:30:33,327 - services.image_service - ERROR - 生成文章配图时发生错误: type object 'PromptManager' has no attribute 'image_prompt'
2025-07-21 12:30:33,328 - controllers.article_controller - WARNING - 第1张配图生成失败
2025-07-21 12:30:33,328 - controllers.article_controller - INFO - 配图处理完成，共插入0张图片
2025-07-21 12:30:33,337 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_千万粉网红演唱会不露脸 主办方回应_20250721_123033.html
2025-07-21 12:30:33,338 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 12:30:33,377 - httpcore.connection - DEBUG - close.started
2025-07-21 12:30:33,379 - httpcore.connection - DEBUG - close.complete
2025-07-21 12:30:33,409 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 12:30:33,409 - controllers.article_controller - WARNING - 未找到</div>标签，保留全部内容
2025-07-21 12:30:33,410 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 12:30:33,410 - controllers.article_controller - INFO - 内容清理完成，移除了 8 个字符，清理后长度: 1963
2025-07-21 12:30:33,413 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_千万粉网红演唱会不露脸 主办方回应_20250721_123033.html
2025-07-21 12:30:33,414 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=千万粉网红演唱会不露脸 主办方回应, 内容前100字=<h2 style="font-size:24px;font-weight:bold;line-height:1.5em;">千万粉网红演唱会不露脸，主办方回应</h2>
<p style="font, 图片数=0
2025-07-21 12:30:33,414 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:30:33,414 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:30:33,418 - services.history_service - INFO - 添加生成历史记录: 千万粉网红演唱会不露脸 主办方回应
2025-07-21 12:30:33,420 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 12:30:33,420 - controllers.article_controller - INFO - 生成结果预览: 标题=千万粉网红演唱会不露脸 主办方回应, 内容长度=1963, 配图数量=1
2025-07-21 12:30:33,420 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:30:33] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 12:30:33,426 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:30:33,426 - root - INFO - 获取生成历史请求
2025-07-21 12:30:33,427 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:30:33] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:30:42,667 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:30:42,668 - root - INFO - 获取生成历史请求
2025-07-21 12:30:42,670 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:30:42,671 - root - INFO - 获取发布历史请求
2025-07-21 12:30:42,673 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:30:42] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:30:42,674 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:30:42] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:31:12,681 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:31:12,683 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:31:12,684 - root - INFO - 获取生成历史请求
2025-07-21 12:31:12,685 - root - INFO - 获取发布历史请求
2025-07-21 12:31:12,690 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:31:12] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:31:12,692 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:31:12] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:31:35,198 - root - INFO - 请求: POST /api/generate-article
2025-07-21 12:31:35,198 - root - INFO - 生成文章请求
2025-07-21 12:31:35,198 - controllers.article_controller - INFO - 【唯一请求ID】4bbc9a2c-774b-4cde-ba9c-a8838bba1d9e - generate_article
2025-07-21 12:31:35,199 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '千万粉网红演唱会不露脸 主办方回应', 'word_count': 1000, 'image_count': 1, 'format_template': '', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '电影光影、俯视图、吉卜力风格', 'negative_prompt': '', 'size': ''}}
2025-07-21 12:31:35,199 - controllers.article_controller - INFO - 开始生成文章，标题: 千万粉网红演唱会不露脸 主办方回应
2025-07-21 12:31:35,199 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 12:31:35,200 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:31:35,200 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 12:31:35,200 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 12:31:35,677 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请帮我撰写一篇关于《千万粉网红演唱会不露脸 主办方回应》的微信公众号文章。请严格遵循您将在下方接收到的HTML排版结构和样式风格进行输出（请直接输出完整的HTML代码，不包含其他说明文字）。\n\n---\n**重要：微信公众号文章内容输出规范**\n1.  **HTML格式：** 必须使用标准的HTML标签和内联`style`属性。\n2.  **禁止JavaScript：** 禁止使用任何JavaScript代码，包括`<script>`标签、`javascript:`协议的链接以及所有HTML元素的`on`事件属性（如`onclick`, `onload`等）。\n4.  **字符数限制：** 最终输出的HTML内容总字符数必须小于等于20000字符，且可见文本字数约为1000字。请注意HTML标签和样式本身会占用字符，请在保证排版效果的前提下尽量简洁。\n5.  **禁止外部CSS/内嵌<style>：** 禁止使用外部CSS文件或在HTML中嵌入`<style>`标签，所有样式必须通过元素的`style=""`属性以内联形式声明。\n6.  **`backdrop-filter` 兼容性：** 如果样式定义中包含`backdrop-filter`属性，请注意其在微信Webview中的兼容性可能不稳定，建议作为可选效果，或考虑使用半透明背景替代。\n\nHTML标签使用规范：\n- <h2>、<h3> 用于段落标题\n- <p> 用于正文段落\n- <ul>、<li> 用于要点列表\n- <blockquote> 用于引用或重要观点\n- <strong> 用于强调重要内容\n\n请直接输出HTML格式的文章内容，不要包含其他说明文字或代码块之外的任何文本：'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 12:31:35,678 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:31:35,678 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:31:35,704 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A1A4710>
2025-07-21 12:31:35,704 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000000000A0C3950> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:31:35,719 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A161220>
2025-07-21 12:31:35,719 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:31:35,720 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:31:35,720 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:31:35,720 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:31:35,721 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:31:42,670 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:31:42,670 - root - INFO - 获取生成历史请求
2025-07-21 12:31:42,670 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:31:42,671 - root - INFO - 获取发布历史请求
2025-07-21 12:31:42,671 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:31:42] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:31:42,672 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:31:42] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:32:07,272 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'e8427cdb-bb56-992b-b85f-491011b7672b'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'31540'), (b'req-arrive-time', b'1753072295331'), (b'resp-start-time', b'1753072326872'), (b'x-envoy-upstream-service-time', b'31539'), (b'set-cookie', b'acw_tc=e8427cdb-bb56-992b-b85f-491011b7672bf82a9b1b05e3054a4f621556fb51eead;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:32:06 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:32:07,272 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:32:07,272 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:32:07,273 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:32:07,273 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:32:07,273 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:32:07,273 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'e8427cdb-bb56-992b-b85f-491011b7672b', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '31540', 'req-arrive-time': '1753072295331', 'resp-start-time': '1753072326872', 'x-envoy-upstream-service-time': '31539', 'set-cookie': 'acw_tc=e8427cdb-bb56-992b-b85f-491011b7672bf82a9b1b05e3054a4f621556fb51eead;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:32:06 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:32:07,273 - openai._base_client - DEBUG - request_id: e8427cdb-bb56-992b-b85f-491011b7672b
2025-07-21 12:32:07,274 - controllers.article_controller - INFO - 文章内容生成成功，长度: 2611字符
2025-07-21 12:32:07,274 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 12:32:07,274 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 千万粉网红演唱会不露脸 主办方回应
2025-07-21 12:32:07,771 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：千万粉网红演唱会不露脸 主办方回应\n内容预览：```html 千万粉网红演唱会不露脸 主办方回应 近日，一场备受关注的千万粉丝网红演唱会引发网友热议。与以往明星演唱会不同的是，这位网红全程未露脸，仅通过声音和创意表演与粉丝互动，现场观众和线上观众反应两极分化。事件迅速登上热搜，主办方随后发布正式回应。 网红演唱会不露脸引争议 据现场观众反馈，这位拥有千万粉丝的网红在演唱会中始终未露脸，仅通过全息投影、面具、剪影等形式呈现表演。部分粉丝表示理解，认为“声音就是他的标志”；但也有不少观众表示失望，认为“花了高价门票却看不到真人”。 线上直播平台的数据显示，该场演唱会观看人数突破300万，互动量高达80万次，但评论区也出现了大量关于“是否物有所值”的讨论。 <h3 style="font-size:20px;line-height:1.5;color:#333333;font-weight:bold;ma\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 12:32:07,772 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:32:07,772 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:32:07,794 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A1A7020>
2025-07-21 12:32:07,795 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BEABD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:32:07,810 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A1A6C00>
2025-07-21 12:32:07,811 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:32:07,811 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:32:07,811 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:32:07,811 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:32:07,812 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:32:09,825 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'31dccbad-863f-9097-b4c3-1663dded15a5'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'2001'), (b'req-arrive-time', b'1753072327423'), (b'resp-start-time', b'1753072329425'), (b'x-envoy-upstream-service-time', b'2000'), (b'set-cookie', b'acw_tc=31dccbad-863f-9097-b4c3-1663dded15a5c77942f3c33d7896ab01505d7060d1f9;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:32:09 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:32:09,825 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:32:09,825 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:32:09,826 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:32:09,826 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:32:09,826 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:32:09,826 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '31dccbad-863f-9097-b4c3-1663dded15a5', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '2001', 'req-arrive-time': '1753072327423', 'resp-start-time': '1753072329425', 'x-envoy-upstream-service-time': '2000', 'set-cookie': 'acw_tc=31dccbad-863f-9097-b4c3-1663dded15a5c77942f3c33d7896ab01505d7060d1f9;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:32:09 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:32:09,826 - openai._base_client - DEBUG - request_id: 31dccbad-863f-9097-b4c3-1663dded15a5
2025-07-21 12:32:09,827 - services.dashscope_service - INFO - 文章摘要生成成功: 千万粉丝网红演唱会全程未露脸，仅以声音和创意形式表演，引发观众热议。线上观看人数破300万，但“值不值”成讨论焦点。主办方回应称表演形式为艺术创新。
2025-07-21 12:32:09,827 - controllers.article_controller - INFO - 摘要生成完成: 千万粉丝网红演唱会全程未露脸，仅以声音和创意形式表演，引发观众热议。线上观看人数破300万，但“值不...
2025-07-21 12:32:09,827 - controllers.article_controller - INFO - 文章字数约: 1000，计划生成配图数量: 1
2025-07-21 12:32:09,828 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 12:32:09,828 - controllers.article_controller - INFO - 开始处理文章配图，计划生成1张图片（仅本地路径，不上传微信）
2025-07-21 12:32:09,828 - controllers.article_controller - INFO - 计划在第[5]段后插入配图
2025-07-21 12:32:09,828 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 12:32:09,828 - services.image_service - INFO - 开始生成文章配图，标题: 千万粉网红演唱会不露脸 主办方回应, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/1
2025-07-21 12:32:09,833 - httpcore.connection - DEBUG - close.started
2025-07-21 12:32:09,833 - httpcore.connection - DEBUG - close.complete
2025-07-21 12:32:09,994 - httpcore.connection - DEBUG - close.started
2025-07-21 12:32:09,994 - httpcore.connection - DEBUG - close.complete
2025-07-21 12:32:10,063 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': 'wanx2.1-t2i-plus', 'prompt': '电影光影、俯视图、吉卜力风格', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 12:32:10,063 - dashscope - DEBUG - Request body: {'model': 'wanx2.1-t2i-plus', 'parameters': {'n': 1, 'size': '1024*768', 'steps': 25}, 'input': {'prompt': '电影光影、俯视图、吉卜力风格', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts'}}
2025-07-21 12:32:10,065 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:32:10,250 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "POST /api/v1/services/aigc/text2image/image-synthesis HTTP/1.1" 200 None
2025-07-21 12:32:10,252 - dashscope - DEBUG - Response: {'request_id': 'a43682e4-86d9-9cc2-a77c-8d536276d07c', 'output': {'task_id': '99459e77-eac8-4717-bee7-004d4346d23d', 'task_status': 'PENDING'}}
2025-07-21 12:32:10,253 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:10,255 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:32:10,359 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d HTTP/1.1" 200 None
2025-07-21 12:32:10,367 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:10,369 - dashscope - INFO - The task 99459e77-eac8-4717-bee7-004d4346d23d is  RUNNING
2025-07-21 12:32:11,369 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:11,372 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:32:11,495 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d HTTP/1.1" 200 None
2025-07-21 12:32:11,497 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:11,499 - dashscope - INFO - The task 99459e77-eac8-4717-bee7-004d4346d23d is  RUNNING
2025-07-21 12:32:12,500 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:12,500 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:32:12,623 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d HTTP/1.1" 200 None
2025-07-21 12:32:12,623 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:12,623 - dashscope - INFO - The task 99459e77-eac8-4717-bee7-004d4346d23d is  RUNNING
2025-07-21 12:32:12,663 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:32:12,664 - root - INFO - 获取生成历史请求
2025-07-21 12:32:12,664 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:32:12,664 - root - INFO - 获取发布历史请求
2025-07-21 12:32:12,665 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:12] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:32:12,666 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:12] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:32:14,625 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:14,626 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:32:14,763 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d HTTP/1.1" 200 None
2025-07-21 12:32:14,763 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:14,763 - dashscope - INFO - The task 99459e77-eac8-4717-bee7-004d4346d23d is  RUNNING
2025-07-21 12:32:16,765 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:16,765 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:32:16,926 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d HTTP/1.1" 200 None
2025-07-21 12:32:16,927 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:16,927 - dashscope - INFO - The task 99459e77-eac8-4717-bee7-004d4346d23d is  RUNNING
2025-07-21 12:32:18,928 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:18,929 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:32:19,049 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d HTTP/1.1" 200 None
2025-07-21 12:32:19,050 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:19,050 - dashscope - INFO - The task 99459e77-eac8-4717-bee7-004d4346d23d is  RUNNING
2025-07-21 12:32:23,051 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:23,051 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:32:23,178 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d HTTP/1.1" 200 None
2025-07-21 12:32:23,179 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/99459e77-eac8-4717-bee7-004d4346d23d
2025-07-21 12:32:23,179 - services.image_service - INFO - DashScope同步调用响应: {"status_code": 200, "request_id": "ee871672-e0f5-92f0-addd-938c867a6eb9", "code": null, "message": "", "output": {"task_id": "99459e77-eac8-4717-bee7-004d4346d23d", "task_status": "SUCCEEDED", "results": [{"url": "https://dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com/1d/eb/20250721/31781671/99459e77-eac8-4717-bee7-004d4346d23d2872161795.png?Expires=1753158738&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=wmCdW2wK83%2FVnnWkrisb%2Fe6G%2BBc%3D", "orig_prompt": "电影光影、俯视图、吉卜力风格", "actual_prompt": "吉卜力风格动画场景，俯视视角下的奇幻小镇。红瓦屋顶与葱郁树木交错分布，石板小路蜿蜒穿行其间。画面中心是一座木制风车，叶片在微风中缓缓转动，周围散落着亮着暖黄色灯光的矮房。天空布满细腻的云层，光影交错间营造出柔和的午后氛围。建筑与植被纹理精致，色彩饱满且富有手绘质感，搭配电影级光影层次，呈现出梦幻而温馨的童话世界。"}], "submit_time": "2025-07-21 12:32:09.830", "scheduled_time": "2025-07-21 12:32:09.863", "end_time": "2025-07-21 12:32:19.082", "task_metrics": {"TOTAL": 1, "SUCCEEDED": 1, "FAILED": 0}}, "usage": {"image_count": 1}}
2025-07-21 12:32:23,181 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com:443
2025-07-21 12:32:23,294 - urllib3.connectionpool - DEBUG - https://dashscope-result-wlcb.oss-cn-wulanchabu.aliyuncs.com:443 "GET /1d/eb/20250721/31781671/99459e77-eac8-4717-bee7-004d4346d23d2872161795.png?Expires=1753158738&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=wmCdW2wK83%2FVnnWkrisb%2Fe6G%2BBc%3D HTTP/1.1" 200 1314859
2025-07-21 12:32:23,429 - services.image_service - INFO - 图片已保存到: cache\99459e77-eac8-4717-bee7-004d4346d23d2872161795.png
2025-07-21 12:32:23,429 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\99459e77-eac8-4717-bee7-004d4346d23d2872161795.png
2025-07-21 12:32:23,429 - controllers.article_controller - INFO - 在第5段后插入配图
2025-07-21 12:32:23,430 - controllers.article_controller - INFO - 配图处理完成，共插入1张图片
2025-07-21 12:32:23,445 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_千万粉网红演唱会不露脸 主办方回应_20250721_123223.html
2025-07-21 12:32:23,445 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 12:32:23,445 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 12:32:23,445 - controllers.article_controller - WARNING - 未找到</div>标签，保留全部内容
2025-07-21 12:32:23,446 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 12:32:23,447 - controllers.article_controller - INFO - 内容清理完成，移除了 8 个字符，清理后长度: 2760
2025-07-21 12:32:23,472 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_千万粉网红演唱会不露脸 主办方回应_20250721_123223.html
2025-07-21 12:32:23,472 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=千万粉网红演唱会不露脸 主办方回应, 内容前100字=<h2 style="font-size:24px;line-height:1.5;color:#333333;font-weight:bold;margin:20px 0;">千万粉网红演唱会不露脸, 图片数=1
2025-07-21 12:32:23,473 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:32:23,473 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:32:23,478 - services.history_service - INFO - 添加生成历史记录: 千万粉网红演唱会不露脸 主办方回应
2025-07-21 12:32:23,478 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 12:32:23,479 - controllers.article_controller - INFO - 生成结果预览: 标题=千万粉网红演唱会不露脸 主办方回应, 内容长度=2760, 配图数量=1
2025-07-21 12:32:23,479 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:23] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 12:32:23,484 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:32:23,485 - root - INFO - 请求: GET /cache/99459e77-eac8-4717-bee7-004d4346d23d2872161795.png
2025-07-21 12:32:23,485 - root - INFO - 获取生成历史请求
2025-07-21 12:32:23,485 - root - INFO - 访问缓存文件: 99459e77-eac8-4717-bee7-004d4346d23d2872161795.png
2025-07-21 12:32:23,487 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:23] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:32:23,487 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:23] "GET /cache/99459e77-eac8-4717-bee7-004d4346d23d2872161795.png HTTP/1.1" 200 -
2025-07-21 12:32:32,345 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 12:32:32,345 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 12:32:32,346 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 12:32:32,346 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:32] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 12:32:32,355 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 12:32:32,355 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 12:32:32,356 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:32:32,357 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:32:32,357 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:32:32,358 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 12:32:32,358 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:32:32,360 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 12:32:32,462 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 12:32:32,463 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 12:32:32,463 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 12:32:32,464 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 12:32:32,464 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 12:32:32,464 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 12:32:32,465 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 12:32:32,465 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:32] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 12:32:32,474 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 12:32:32,474 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 12:32:32,474 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 12:32:32,475 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:32:32,476 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:32:32,476 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 12:32:32,985 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000001266FC0>, 'json_data': None}
2025-07-21 12:32:32,986 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 12:32:32,986 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:32:33,018 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000000C8AB10>
2025-07-21 12:32:33,018 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B73250> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:32:33,036 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000000C8B200>
2025-07-21 12:32:33,037 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 12:32:33,039 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:32:33,040 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 12:32:33,041 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:32:33,042 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 12:32:33,073 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'78d8e465-1f43-9b2a-a908-bc7825c482c3'), (b'content-type', b'application/json'), (b'req-cost-time', b'21'), (b'req-arrive-time', b'1753072352653'), (b'resp-start-time', b'1753072352674'), (b'x-envoy-upstream-service-time', b'20'), (b'set-cookie', b'acw_tc=78d8e465-1f43-9b2a-a908-bc7825c482c33e454acca28bc974d0797889b6090f2b;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:32:32 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:32:33,075 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 12:32:33,076 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 12:32:33,078 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:32:33,079 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:32:33,080 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:32:33,081 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '78d8e465-1f43-9b2a-a908-bc7825c482c3', 'content-type': 'application/json', 'req-cost-time': '21', 'req-arrive-time': '1753072352653', 'resp-start-time': '1753072352674', 'x-envoy-upstream-service-time': '20', 'set-cookie': 'acw_tc=78d8e465-1f43-9b2a-a908-bc7825c482c33e454acca28bc974d0797889b6090f2b;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:32:32 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:32:33,082 - openai._base_client - DEBUG - request_id: 78d8e465-1f43-9b2a-a908-bc7825c482c3
2025-07-21 12:32:33,093 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 12:32:33,094 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 12:32:33,094 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 12:32:33,095 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 12:32:33,096 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 12:32:33,096 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 12:32:33,097 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 12:32:33,099 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:33] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 12:32:33,119 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:32:33,119 - root - INFO - 获取生成历史请求
2025-07-21 12:32:33,122 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:33] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:32:33,139 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:32:33,140 - root - INFO - 获取发布历史请求
2025-07-21 12:32:33,142 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:33] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:32:43,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:32:43,187 - root - INFO - 获取生成历史请求
2025-07-21 12:32:43,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:32:43,188 - root - INFO - 获取发布历史请求
2025-07-21 12:32:43,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:43] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:32:43,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:32:43] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:33:13,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:33:13,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:33:13,182 - root - INFO - 获取生成历史请求
2025-07-21 12:33:13,183 - root - INFO - 获取发布历史请求
2025-07-21 12:33:13,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:33:13] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:33:13,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:33:13] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:33:43,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:33:43,188 - root - INFO - 获取生成历史请求
2025-07-21 12:33:43,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:33:43,188 - root - INFO - 获取发布历史请求
2025-07-21 12:33:43,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:33:43] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:33:43,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:33:43] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:34:17,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:34:17,190 - root - INFO - 获取生成历史请求
2025-07-21 12:34:17,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:34:17,192 - root - INFO - 获取发布历史请求
2025-07-21 12:34:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:34:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:34:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:34:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:35:17,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:35:17,180 - root - INFO - 获取生成历史请求
2025-07-21 12:35:17,180 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:35:17,181 - root - INFO - 获取发布历史请求
2025-07-21 12:35:17,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:35:17,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:35:42,665 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:35:42,666 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:35:42,666 - root - INFO - 获取生成历史请求
2025-07-21 12:35:42,666 - root - INFO - 获取发布历史请求
2025-07-21 12:35:42,668 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:42] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:35:42,668 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:42] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:35:56,064 - root - INFO - 应用目录创建完成
2025-07-21 12:35:56,064 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:35:56,064 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:35:56,064 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:35:56,065 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:35:56,065 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 12:35:56,065 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 12:35:56,065 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 12:35:56,065 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 12:35:56,065 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 12:35:56,066 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 12:35:56,066 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 12:35:56,066 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 12:35:56,066 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 12:35:56,941 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 12:35:56,942 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 12:35:58,656 - root - INFO - 请求: GET /
2025-07-21 12:35:58,656 - root - INFO - 访问主页面
2025-07-21 12:35:58,665 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:58] "GET / HTTP/1.1" 200 -
2025-07-21 12:35:58,730 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 12:35:58,739 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 12:35:58,740 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 12:35:58,919 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:58] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 12:35:58,923 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:58] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 12:35:58,933 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:58] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 12:35:59,007 - root - INFO - 请求: GET /api/get_ip
2025-07-21 12:35:59,008 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:59] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 12:35:59,026 - root - INFO - 请求: GET /api/style-templates
2025-07-21 12:35:59,031 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:59] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 12:35:59,045 - root - INFO - 请求: GET /api/config
2025-07-21 12:35:59,046 - root - INFO - 处理配置请求: GET
2025-07-21 12:35:59,046 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 12:35:59,047 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:35:59,047 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 12:35:59,047 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:35:59] "GET /api/config HTTP/1.1" 200 -
2025-07-21 12:35:59,213 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 12:35:59,213 - root - INFO - 获取Gemini可用模型列表
2025-07-21 12:35:59,213 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 12:35:59,214 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:35:59,214 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:35:59,214 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 12:36:00,328 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 12:36:00,328 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 12:36:00,329 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 12:36:27,710 - root - INFO - 请求: POST /api/generate-article
2025-07-21 12:36:27,711 - root - INFO - 生成文章请求
2025-07-21 12:36:27,711 - controllers.article_controller - INFO - 【唯一请求ID】28801d15-f999-4ea5-aedc-d042d9ed2392 - generate_article
2025-07-21 12:36:27,711 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '千万粉网红演唱会不露脸 主办方回应：旺仔小乔', 'word_count': 1000, 'image_count': 1, 'format_template': '', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '', 'negative_prompt': '', 'size': ''}}
2025-07-21 12:36:27,711 - controllers.article_controller - INFO - 开始生成文章，标题: 千万粉网红演唱会不露脸 主办方回应：旺仔小乔
2025-07-21 12:36:27,711 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 12:36:27,712 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:36:27,712 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 12:36:27,712 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 12:36:28,186 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请帮我撰写一篇关于《千万粉网红演唱会不露脸 主办方回应：旺仔小乔》的微信公众号文章。请严格遵循您将在下方接收到的HTML排版结构和样式风格进行输出（请直接输出完整的HTML代码，不包含其他说明文字）。\n\n---\n**重要：微信公众号文章内容输出规范**\n1.  **HTML格式：** 必须使用标准的HTML标签和内联`style`属性。\n2.  **禁止JavaScript：** 禁止使用任何JavaScript代码，包括`<script>`标签、`javascript:`协议的链接以及所有HTML元素的`on`事件属性（如`onclick`, `onload`等）。\n4.  **字符数限制：** 最终输出的HTML内容总字符数必须小于等于20000字符，且可见文本字数约为1000字。请注意HTML标签和样式本身会占用字符，请在保证排版效果的前提下尽量简洁。\n5.  **禁止外部CSS/内嵌<style>：** 禁止使用外部CSS文件或在HTML中嵌入`<style>`标签，所有样式必须通过元素的`style=""`属性以内联形式声明。\n6.  **`backdrop-filter` 兼容性：** 如果样式定义中包含`backdrop-filter`属性，请注意其在微信Webview中的兼容性可能不稳定，建议作为可选效果，或考虑使用半透明背景替代。\n\nHTML标签使用规范：\n- <h2>、<h3> 用于段落标题\n- <p> 用于正文段落\n- <ul>、<li> 用于要点列表\n- <blockquote> 用于引用或重要观点\n- <strong> 用于强调重要内容\n\n请直接输出HTML格式的文章内容，不要包含其他说明文字或代码块之外的任何文本：'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 12:36:28,214 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:36:28,214 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:36:28,239 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C729C0>
2025-07-21 12:36:28,239 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009C60150> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:36:28,257 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C72720>
2025-07-21 12:36:28,258 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:36:28,258 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:36:28,258 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:36:28,258 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:36:28,258 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:36:29,046 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:36:29,046 - root - INFO - 获取生成历史请求
2025-07-21 12:36:29,046 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:36:29,046 - root - INFO - 获取发布历史请求
2025-07-21 12:36:29,047 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:36:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:36:29,047 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:36:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:36:59,049 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:36:59,050 - root - INFO - 获取生成历史请求
2025-07-21 12:36:59,050 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:36:59,050 - root - INFO - 获取发布历史请求
2025-07-21 12:36:59,051 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:36:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:36:59,052 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:36:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:37:02,169 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'8d2b550e-aa98-9360-9d94-7d941dfc9f26'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'33900'), (b'req-arrive-time', b'1753072587874'), (b'resp-start-time', b'1753072621774'), (b'x-envoy-upstream-service-time', b'33899'), (b'set-cookie', b'acw_tc=8d2b550e-aa98-9360-9d94-7d941dfc9f26205911e614c9fe88699ed02245a70c30;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:37:01 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:37:02,806 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:37:02,807 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:37:02,807 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:37:02,807 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:37:02,807 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:37:02,808 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '8d2b550e-aa98-9360-9d94-7d941dfc9f26', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '33900', 'req-arrive-time': '1753072587874', 'resp-start-time': '1753072621774', 'x-envoy-upstream-service-time': '33899', 'set-cookie': 'acw_tc=8d2b550e-aa98-9360-9d94-7d941dfc9f26205911e614c9fe88699ed02245a70c30;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:37:01 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:37:02,808 - openai._base_client - DEBUG - request_id: 8d2b550e-aa98-9360-9d94-7d941dfc9f26
2025-07-21 12:37:02,811 - controllers.article_controller - INFO - 文章内容生成成功，长度: 2528字符
2025-07-21 12:37:02,811 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 12:37:02,811 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 千万粉网红演唱会不露脸 主办方回应：旺仔小乔
2025-07-21 12:37:03,310 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：千万粉网红演唱会不露脸 主办方回应：旺仔小乔\n内容预览：千万粉网红演唱会不露脸 主办方回应：旺仔小乔 发布于2024年X月X日 | 阅读时长约3分钟 近日，拥有千万粉丝的网红“旺仔小乔”在一场线下演唱会中全程未露脸，引发网友热议。不少粉丝表示失望，甚至质疑主办方是否涉嫌虚假宣传。面对争议，主办方第一时间做出回应，解释了整场演出的安排。 不露脸演出引争议 作为抖音平台极具影响力的头部网红，“旺仔小乔”凭借独特的音乐风格和亲民形象积累了大量粉丝。此次演唱会原本被视为其与粉丝近距离互动的重要机会，然而现场全程未露面，仅通过大屏幕播放音频和画面进行表演。 <blockquote style="border-left: 4px sol\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 12:37:03,311 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:37:03,311 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:37:03,352 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C73260>
2025-07-21 12:37:03,352 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009C63C50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:37:03,372 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C72420>
2025-07-21 12:37:03,372 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:37:03,373 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:37:03,374 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:37:03,375 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:37:03,376 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:37:05,274 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'23af625d-e4e9-9a61-95c6-76c7a88c9143'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1888'), (b'req-arrive-time', b'1753072622991'), (b'resp-start-time', b'1753072624879'), (b'x-envoy-upstream-service-time', b'1886'), (b'set-cookie', b'acw_tc=23af625d-e4e9-9a61-95c6-76c7a88c91439ce8b200507d1f3667cba84d91e2032b;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:37:04 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:37:05,275 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:37:05,275 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:37:05,275 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:37:05,275 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:37:05,275 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:37:05,277 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '23af625d-e4e9-9a61-95c6-76c7a88c9143', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1888', 'req-arrive-time': '1753072622991', 'resp-start-time': '1753072624879', 'x-envoy-upstream-service-time': '1886', 'set-cookie': 'acw_tc=23af625d-e4e9-9a61-95c6-76c7a88c91439ce8b200507d1f3667cba84d91e2032b;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:37:04 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:37:05,277 - openai._base_client - DEBUG - request_id: 23af625d-e4e9-9a61-95c6-76c7a88c9143
2025-07-21 12:37:05,277 - services.dashscope_service - INFO - 文章摘要生成成功: 千万粉网红“旺仔小乔”演唱会全程未露脸，仅通过大屏播放音画表演，引发粉丝质疑虚假宣传。主办方回应称演出安排出于特殊考虑。事件引发对网红线下活动真实性的广泛讨论。
2025-07-21 12:37:05,277 - controllers.article_controller - INFO - 摘要生成完成: 千万粉网红“旺仔小乔”演唱会全程未露脸，仅通过大屏播放音画表演，引发粉丝质疑虚假宣传。主办方回应称演...
2025-07-21 12:37:05,278 - controllers.article_controller - INFO - 文章字数约: 1000，计划生成配图数量: 1
2025-07-21 12:37:05,278 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 12:37:05,278 - controllers.article_controller - INFO - 开始处理文章配图，计划生成1张图片（仅本地路径，不上传微信）
2025-07-21 12:37:05,278 - controllers.article_controller - INFO - 计划在第[5]段后插入配图
2025-07-21 12:37:05,278 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 12:37:05,278 - services.image_service - INFO - 开始生成文章配图，标题: 千万粉网红演唱会不露脸 主办方回应：旺仔小乔, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/1
2025-07-21 12:37:05,310 - httpcore.connection - DEBUG - close.started
2025-07-21 12:37:05,311 - httpcore.connection - DEBUG - close.complete
2025-07-21 12:37:05,462 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': 'wanx2.1-t2i-plus', 'prompt': '为文章《千万粉网红演唱会不露脸 主办方回应：旺仔小乔》生成一张高质量的配图。\n要求：\n1. 图片风格现代、简洁、专业，具有海报感。\n2. 色调温和，适合微信公众号\n3. 构图美观，有设计感\n4. 与文章主题相关\n5. 图片中不要包含过多文字，最好无文字，仅以视觉元素表达主题\n6. 尺寸比例适合作为文章封面\n7. 使用中国读者喜欢的视觉元素\n\n文章描述：千万粉网红“旺仔小乔”演唱会全程未露脸，仅通过大屏播放音画表演，引发粉丝质疑虚假宣传。主办方回应称演出安排出于特殊考虑。事件引发对网红线下活动真实性的广泛讨论。\n请根据文章内容生成相关的视觉元素。\n\n请用英文输出提示词。', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 12:37:05,463 - dashscope - DEBUG - Request body: {'model': 'wanx2.1-t2i-plus', 'parameters': {'n': 1, 'size': '1024*768', 'steps': 25}, 'input': {'prompt': '为文章《千万粉网红演唱会不露脸 主办方回应：旺仔小乔》生成一张高质量的配图。\n要求：\n1. 图片风格现代、简洁、专业，具有海报感。\n2. 色调温和，适合微信公众号\n3. 构图美观，有设计感\n4. 与文章主题相关\n5. 图片中不要包含过多文字，最好无文字，仅以视觉元素表达主题\n6. 尺寸比例适合作为文章封面\n7. 使用中国读者喜欢的视觉元素\n\n文章描述：千万粉网红“旺仔小乔”演唱会全程未露脸，仅通过大屏播放音画表演，引发粉丝质疑虚假宣传。主办方回应称演出安排出于特殊考虑。事件引发对网红线下活动真实性的广泛讨论。\n请根据文章内容生成相关的视觉元素。\n\n请用英文输出提示词。', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts'}}
2025-07-21 12:37:05,464 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:37:05,686 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "POST /api/v1/services/aigc/text2image/image-synthesis HTTP/1.1" 200 None
2025-07-21 12:37:05,686 - dashscope - DEBUG - Response: {'request_id': '047862cc-cb29-97ac-bc11-6cbca1104210', 'output': {'task_id': 'c6af2871-1d19-4cad-a156-9d4be7ebcd6e', 'task_status': 'PENDING'}}
2025-07-21 12:37:05,687 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:05,687 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:37:05,809 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e HTTP/1.1" 200 None
2025-07-21 12:37:05,809 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:05,810 - dashscope - INFO - The task c6af2871-1d19-4cad-a156-9d4be7ebcd6e is  RUNNING
2025-07-21 12:37:06,811 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:06,812 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:37:06,886 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e HTTP/1.1" 200 None
2025-07-21 12:37:06,887 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:06,887 - dashscope - INFO - The task c6af2871-1d19-4cad-a156-9d4be7ebcd6e is  RUNNING
2025-07-21 12:37:07,888 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:07,889 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:37:08,007 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e HTTP/1.1" 200 None
2025-07-21 12:37:08,008 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:08,009 - dashscope - INFO - The task c6af2871-1d19-4cad-a156-9d4be7ebcd6e is  RUNNING
2025-07-21 12:37:10,009 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:10,010 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:37:10,137 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e HTTP/1.1" 200 None
2025-07-21 12:37:10,137 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:10,137 - dashscope - INFO - The task c6af2871-1d19-4cad-a156-9d4be7ebcd6e is  RUNNING
2025-07-21 12:37:12,139 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:12,140 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:37:12,250 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e HTTP/1.1" 200 None
2025-07-21 12:37:12,250 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:12,251 - dashscope - INFO - The task c6af2871-1d19-4cad-a156-9d4be7ebcd6e is  RUNNING
2025-07-21 12:37:14,252 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:14,253 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:37:14,372 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e HTTP/1.1" 200 None
2025-07-21 12:37:14,372 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:14,373 - dashscope - INFO - The task c6af2871-1d19-4cad-a156-9d4be7ebcd6e is  RUNNING
2025-07-21 12:37:18,374 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:18,375 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:37:18,478 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e HTTP/1.1" 200 None
2025-07-21 12:37:18,479 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/c6af2871-1d19-4cad-a156-9d4be7ebcd6e
2025-07-21 12:37:18,479 - services.image_service - INFO - DashScope同步调用响应: {"status_code": 200, "request_id": "7143645c-5165-9862-9e62-205aff3547c0", "code": null, "message": "", "output": {"task_id": "c6af2871-1d19-4cad-a156-9d4be7ebcd6e", "task_status": "SUCCEEDED", "results": [{"url": "https://dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com/1d/07/20250721/ce62dca3/c6af2871-1d19-4cad-a156-9d4be7ebcd6e1540480394.png?Expires=1753159034&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=6H2pfCenvq3ZOJuN8VT7r7VfKbk%3D", "orig_prompt": "为文章《千万粉网红演唱会不露脸 主办方回应：旺仔小乔》生成一张高质量的配图。\n要求：\n1. 图片风格现代、简洁、专业，具有海报感。\n2. 色调温和，适合微信公众号\n3. 构图美观，有设计感\n4. 与文章主题相关\n5. 图片中不要包含过多文字，最好无文字，仅以视觉元素表达主题\n6. 尺寸比例适合作为文章封面\n7. 使用中国读者喜欢的视觉元素\n\n文章描述：千万粉网红“旺仔小乔”演唱会全程未露脸，仅通过大屏播放音画表演，引发粉丝质疑虚假宣传。主办方回应称演出安排出于特殊考虑。事件引发对网红线下活动真实性的广泛讨论。\n请根据文章内容生成相关的视觉元素。\n\n请用英文输出提示词。", "actual_prompt": "Stage performance poster design with minimalist aesthetic, modern Chinese visual elements. Silhouette of a female performer in traditional-inspired outfit standing on stage against glowing screen backdrop. Abstract facial mask motif floating mid-air between stage and audience. Soft gradient lighting in warm sand tones with subtle metallic accents. Elegant asymmetrical composition with shallow depth of field effect. Concert atmosphere with distant crowd blur and light beams. Professional photography style with slight film grain texture."}], "submit_time": "2025-07-21 12:37:05.268", "scheduled_time": "2025-07-21 12:37:05.306", "end_time": "2025-07-21 12:37:15.043", "task_metrics": {"TOTAL": 1, "SUCCEEDED": 1, "FAILED": 0}}, "usage": {"image_count": 1}}
2025-07-21 12:37:18,481 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com:443
2025-07-21 12:37:18,559 - urllib3.connectionpool - DEBUG - https://dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com:443 "GET /1d/07/20250721/ce62dca3/c6af2871-1d19-4cad-a156-9d4be7ebcd6e1540480394.png?Expires=1753159034&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=6H2pfCenvq3ZOJuN8VT7r7VfKbk%3D HTTP/1.1" 200 281121
2025-07-21 12:37:18,585 - services.image_service - INFO - 图片已保存到: cache\c6af2871-1d19-4cad-a156-9d4be7ebcd6e1540480394.png
2025-07-21 12:37:18,586 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\c6af2871-1d19-4cad-a156-9d4be7ebcd6e1540480394.png
2025-07-21 12:37:18,586 - controllers.article_controller - INFO - 在第5段后插入配图
2025-07-21 12:37:18,586 - controllers.article_controller - INFO - 配图处理完成，共插入1张图片
2025-07-21 12:37:18,588 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_千万粉网红演唱会不露脸 主办方回应旺仔小_20250721_123718.html
2025-07-21 12:37:18,589 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 12:37:18,709 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 12:37:18,710 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 2685
2025-07-21 12:37:18,711 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 12:37:18,711 - controllers.article_controller - INFO - 内容清理完成，未发现需要清理的内容
2025-07-21 12:37:18,732 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_千万粉网红演唱会不露脸 主办方回应旺仔小_20250721_123718.html
2025-07-21 12:37:18,732 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=千万粉网红演唱会不露脸 主办方回应：旺仔小乔, 内容前100字=<div style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.6; color: #3, 图片数=1
2025-07-21 12:37:18,732 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:37:18,733 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:37:18,737 - services.history_service - INFO - 添加生成历史记录: 千万粉网红演唱会不露脸 主办方回应：旺仔小乔
2025-07-21 12:37:18,737 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 12:37:18,737 - controllers.article_controller - INFO - 生成结果预览: 标题=千万粉网红演唱会不露脸 主办方回应：旺仔小乔, 内容长度=2685, 配图数量=1
2025-07-21 12:37:18,737 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:18] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 12:37:18,747 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:37:18,747 - root - INFO - 获取生成历史请求
2025-07-21 12:37:18,748 - root - INFO - 请求: GET /cache/c6af2871-1d19-4cad-a156-9d4be7ebcd6e1540480394.png
2025-07-21 12:37:18,748 - root - INFO - 访问缓存文件: c6af2871-1d19-4cad-a156-9d4be7ebcd6e1540480394.png
2025-07-21 12:37:18,749 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:18] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:37:18,749 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:18] "GET /cache/c6af2871-1d19-4cad-a156-9d4be7ebcd6e1540480394.png HTTP/1.1" 200 -
2025-07-21 12:37:29,055 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:37:29,055 - root - INFO - 获取生成历史请求
2025-07-21 12:37:29,055 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:37:29,055 - root - INFO - 获取发布历史请求
2025-07-21 12:37:29,057 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:37:29,058 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:37:45,582 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 12:37:45,582 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 12:37:45,583 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 12:37:45,583 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:45] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 12:37:45,591 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 12:37:45,592 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 12:37:45,592 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:37:45,593 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:37:45,593 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:37:45,594 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 12:37:45,594 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 12:37:45,595 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 12:37:45,700 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 12:37:45,701 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 12:37:45,701 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 12:37:45,701 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 12:37:45,702 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 12:37:45,702 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 12:37:45,703 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 12:37:45,703 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:45] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 12:37:45,713 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 12:37:45,713 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 12:37:45,713 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 12:37:45,714 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:37:45,714 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:37:45,715 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 12:37:46,195 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x000000000A76CE00>, 'json_data': None}
2025-07-21 12:37:46,195 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 12:37:46,196 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:37:46,222 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A7C8B30>
2025-07-21 12:37:46,222 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000000000A7831D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:37:46,243 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000A7C93A0>
2025-07-21 12:37:46,244 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 12:37:46,246 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:37:46,247 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 12:37:46,248 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:37:46,248 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 12:37:46,283 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1eebc2e7-d118-9f70-9f7b-f02d44b915c8'), (b'content-type', b'application/json'), (b'req-cost-time', b'24'), (b'req-arrive-time', b'1753072665862'), (b'resp-start-time', b'1753072665887'), (b'x-envoy-upstream-service-time', b'24'), (b'set-cookie', b'acw_tc=1eebc2e7-d118-9f70-9f7b-f02d44b915c8bcb8d53891d6ec915e1170d468805abe;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:37:45 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:37:46,285 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 12:37:46,286 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 12:37:46,287 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:37:46,288 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:37:46,289 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:37:46,290 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1eebc2e7-d118-9f70-9f7b-f02d44b915c8', 'content-type': 'application/json', 'req-cost-time': '24', 'req-arrive-time': '1753072665862', 'resp-start-time': '1753072665887', 'x-envoy-upstream-service-time': '24', 'set-cookie': 'acw_tc=1eebc2e7-d118-9f70-9f7b-f02d44b915c8bcb8d53891d6ec915e1170d468805abe;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:37:45 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:37:46,291 - openai._base_client - DEBUG - request_id: 1eebc2e7-d118-9f70-9f7b-f02d44b915c8
2025-07-21 12:37:46,308 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 12:37:46,309 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 12:37:46,310 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 12:37:46,310 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 12:37:46,312 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 12:37:46,313 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 12:37:46,314 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 12:37:46,316 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:46] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 12:37:46,331 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:37:46,331 - root - INFO - 获取生成历史请求
2025-07-21 12:37:46,334 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:46] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:37:46,348 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:37:46,348 - root - INFO - 获取发布历史请求
2025-07-21 12:37:46,349 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:46] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:37:59,052 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:37:59,053 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:37:59,053 - root - INFO - 获取生成历史请求
2025-07-21 12:37:59,053 - root - INFO - 获取发布历史请求
2025-07-21 12:37:59,055 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:37:59,055 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:37:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:38:29,059 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:38:29,060 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:38:29,060 - root - INFO - 获取生成历史请求
2025-07-21 12:38:29,060 - root - INFO - 获取发布历史请求
2025-07-21 12:38:29,062 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:38:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:38:29,062 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:38:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:38:32,495 - root - INFO - 请求: POST /api/generate-article
2025-07-21 12:38:32,826 - root - INFO - 生成文章请求
2025-07-21 12:38:32,827 - controllers.article_controller - INFO - 【唯一请求ID】dda80878-3b1c-4f81-b5fd-3d8c93df5cdc - generate_article
2025-07-21 12:38:32,827 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '千万粉网红演唱会不露脸 主办方回应：旺仔小乔', 'word_count': 1000, 'image_count': 1, 'format_template': '', 'ai_model': 'dashscope', 'image_model': 'dashscope', 'custom_image_prompt': '', 'dashscope_params': {'model_name': 'wanx2.1-t2i-plus', 'positive_prompt': '吉卜力、电影、演唱会、蒙面', 'negative_prompt': '', 'size': ''}}
2025-07-21 12:38:32,827 - controllers.article_controller - INFO - 开始生成文章，标题: 千万粉网红演唱会不露脸 主办方回应：旺仔小乔
2025-07-21 12:38:32,827 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: dashscope
2025-07-21 12:38:32,827 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:38:32,828 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 12:38:32,828 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 12:38:33,302 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请帮我撰写一篇关于《千万粉网红演唱会不露脸 主办方回应：旺仔小乔》的微信公众号文章。请严格遵循您将在下方接收到的HTML排版结构和样式风格进行输出（请直接输出完整的HTML代码，不包含其他说明文字）。\n\n---\n**重要：微信公众号文章内容输出规范**\n1.  **HTML格式：** 必须使用标准的HTML标签和内联`style`属性。\n2.  **禁止JavaScript：** 禁止使用任何JavaScript代码，包括`<script>`标签、`javascript:`协议的链接以及所有HTML元素的`on`事件属性（如`onclick`, `onload`等）。\n4.  **字符数限制：** 最终输出的HTML内容总字符数必须小于等于20000字符，且可见文本字数约为1000字。请注意HTML标签和样式本身会占用字符，请在保证排版效果的前提下尽量简洁。\n5.  **禁止外部CSS/内嵌<style>：** 禁止使用外部CSS文件或在HTML中嵌入`<style>`标签，所有样式必须通过元素的`style=""`属性以内联形式声明。\n6.  **`backdrop-filter` 兼容性：** 如果样式定义中包含`backdrop-filter`属性，请注意其在微信Webview中的兼容性可能不稳定，建议作为可选效果，或考虑使用半透明背景替代。\n\nHTML标签使用规范：\n- <h2>、<h3> 用于段落标题\n- <p> 用于正文段落\n- <ul>、<li> 用于要点列表\n- <blockquote> 用于引用或重要观点\n- <strong> 用于强调重要内容\n\n请直接输出HTML格式的文章内容，不要包含其他说明文字或代码块之外的任何文本：'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 12:38:33,303 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:38:33,303 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:38:33,351 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000000C31AF0>
2025-07-21 12:38:33,351 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000000000A7852D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:38:33,368 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000000C316D0>
2025-07-21 12:38:33,368 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:38:33,369 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:38:33,369 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:38:33,369 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:38:33,369 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:38:57,139 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'6750c317-76eb-9c26-8e91-d64068a03c2e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'23757'), (b'req-arrive-time', b'1753072712987'), (b'resp-start-time', b'1753072736745'), (b'x-envoy-upstream-service-time', b'23755'), (b'set-cookie', b'acw_tc=6750c317-76eb-9c26-8e91-d64068a03c2eceeff37f0f1b8cfd789b0496f78f0ede;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:38:56 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:38:57,139 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:38:57,139 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:38:57,139 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:38:57,140 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:38:57,140 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:38:57,140 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '6750c317-76eb-9c26-8e91-d64068a03c2e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '23757', 'req-arrive-time': '1753072712987', 'resp-start-time': '1753072736745', 'x-envoy-upstream-service-time': '23755', 'set-cookie': 'acw_tc=6750c317-76eb-9c26-8e91-d64068a03c2eceeff37f0f1b8cfd789b0496f78f0ede;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:38:56 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:38:57,140 - openai._base_client - DEBUG - request_id: 6750c317-76eb-9c26-8e91-d64068a03c2e
2025-07-21 12:38:57,141 - controllers.article_controller - INFO - 文章内容生成成功，长度: 2082字符
2025-07-21 12:38:57,141 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 12:38:57,141 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 千万粉网红演唱会不露脸 主办方回应：旺仔小乔
2025-07-21 12:38:57,605 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：千万粉网红演唱会不露脸 主办方回应：旺仔小乔\n内容预览：```html 千万粉网红演唱会不露脸，主办方回应：旺仔小乔 近日，拥有千万粉丝的网红“旺仔小乔”在一场线下演唱会上全程未露脸，引发网友热议。不少粉丝表示失望，认为“既然是演唱会，就应该看到真人出场”。而主办方则迅速回应，称此举是为了保护艺人隐私，并强调“演出效果并不受影响”。 演唱会现场：只闻其声，不见其人 据现场观众反馈，“旺仔小乔”整场演出均以幕后配音形式完成，舞台屏幕上播放的是提前制作好的动画和虚拟形象。虽然互动环节依旧活跃，但许多粉丝仍感到不解：“花了门票钱，结果连真人影子都没看到。” 主办方回应：尊重艺人隐私与安全 面对争议，主办方在微博发布声明，表示“旺仔小乔”因个人原因选择不露面，但所有演出内容均为本人配音与策划，现场气氛热烈，观众反应良好。声明中还强调：“我们尊重每一位艺人的选择，也希望粉丝能理解和支持。” <h3 style="font-size:\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 12:38:57,605 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 12:38:57,606 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 12:38:57,650 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000000C44500>
2025-07-21 12:38:57,650 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000000000A7D81D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 12:38:57,668 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000000C33FE0>
2025-07-21 12:38:57,668 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 12:38:57,669 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 12:38:57,669 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 12:38:57,669 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 12:38:57,669 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 12:38:59,050 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:38:59,051 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:38:59,051 - root - INFO - 获取生成历史请求
2025-07-21 12:38:59,051 - root - INFO - 获取发布历史请求
2025-07-21 12:38:59,054 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:38:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:38:59,055 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:38:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:38:59,511 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'2e95357d-2880-9528-be1d-26940e5868f1'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1826'), (b'req-arrive-time', b'1753072737288'), (b'resp-start-time', b'1753072739114'), (b'x-envoy-upstream-service-time', b'1824'), (b'set-cookie', b'acw_tc=2e95357d-2880-9528-be1d-26940e5868f14352ab5e934222056d424c48125baa01;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 04:38:58 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 12:38:59,512 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 12:38:59,512 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 12:38:59,512 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 12:38:59,512 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 12:38:59,513 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 12:38:59,513 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '2e95357d-2880-9528-be1d-26940e5868f1', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1826', 'req-arrive-time': '1753072737288', 'resp-start-time': '1753072739114', 'x-envoy-upstream-service-time': '1824', 'set-cookie': 'acw_tc=2e95357d-2880-9528-be1d-26940e5868f14352ab5e934222056d424c48125baa01;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 04:38:58 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 12:38:59,513 - openai._base_client - DEBUG - request_id: 2e95357d-2880-9528-be1d-26940e5868f1
2025-07-21 12:38:59,513 - services.dashscope_service - INFO - 文章摘要生成成功: 千万粉网红“旺仔小乔”演唱会全程不露脸，仅以配音形式演出，引发粉丝争议。主办方回应称此举出于保护艺人隐私，并强调演出效果未受影响。事件引发对艺人与粉丝边界、演出形式创新的广泛讨论。
2025-07-21 12:38:59,514 - controllers.article_controller - INFO - 摘要生成完成: 千万粉网红“旺仔小乔”演唱会全程不露脸，仅以配音形式演出，引发粉丝争议。主办方回应称此举出于保护艺人...
2025-07-21 12:38:59,514 - controllers.article_controller - INFO - 文章字数约: 1000，计划生成配图数量: 1
2025-07-21 12:38:59,514 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 12:38:59,514 - controllers.article_controller - INFO - 开始处理文章配图，计划生成1张图片（仅本地路径，不上传微信）
2025-07-21 12:38:59,514 - controllers.article_controller - INFO - 计划在第[4]段后插入配图
2025-07-21 12:38:59,514 - controllers.article_controller - INFO - 生成第1张配图，使用模型: dashscope
2025-07-21 12:38:59,514 - services.image_service - INFO - 开始生成文章配图，标题: 千万粉网红演唱会不露脸 主办方回应：旺仔小乔, 生图模型: dashscope, AI模型: dashscope, 图片索引: 1/1
2025-07-21 12:38:59,514 - services.image_service - INFO - DashScope生图参数: {'api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'model': 'wanx2.1-t2i-plus', 'prompt': '吉卜力、电影、演唱会、蒙面', 'n': 1, 'size': '1024*768', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts', 'steps': 25}
2025-07-21 12:38:59,515 - dashscope - DEBUG - Request body: {'model': 'wanx2.1-t2i-plus', 'parameters': {'n': 1, 'size': '1024*768', 'steps': 25}, 'input': {'prompt': '吉卜力、电影、演唱会、蒙面', 'negative_prompt': '模糊, 低质量, 扭曲, 失真, 过曝, 过暗, 低分辨率, artifact, blurry, bad anatomy, bad hands, watermark, signature, text, cropped, worst quality, low quality, jpeg artifacts'}}
2025-07-21 12:38:59,515 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:38:59,711 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "POST /api/v1/services/aigc/text2image/image-synthesis HTTP/1.1" 200 None
2025-07-21 12:38:59,711 - dashscope - DEBUG - Response: {'request_id': '414a6cbd-05f7-95c3-b784-687a54b39069', 'output': {'task_id': '07bbf122-74b3-4c94-8ac4-a526ad3ca89f', 'task_status': 'PENDING'}}
2025-07-21 12:38:59,712 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:38:59,712 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:38:59,825 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f HTTP/1.1" 200 None
2025-07-21 12:38:59,825 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:38:59,827 - dashscope - INFO - The task 07bbf122-74b3-4c94-8ac4-a526ad3ca89f is  RUNNING
2025-07-21 12:39:00,827 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:00,898 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:39:01,010 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f HTTP/1.1" 200 None
2025-07-21 12:39:01,010 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:01,011 - dashscope - INFO - The task 07bbf122-74b3-4c94-8ac4-a526ad3ca89f is  RUNNING
2025-07-21 12:39:02,011 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:02,012 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:39:02,133 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f HTTP/1.1" 200 None
2025-07-21 12:39:02,133 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:02,133 - dashscope - INFO - The task 07bbf122-74b3-4c94-8ac4-a526ad3ca89f is  RUNNING
2025-07-21 12:39:04,134 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:04,135 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:39:04,250 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f HTTP/1.1" 200 None
2025-07-21 12:39:04,250 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:04,251 - dashscope - INFO - The task 07bbf122-74b3-4c94-8ac4-a526ad3ca89f is  RUNNING
2025-07-21 12:39:06,252 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:06,252 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:39:06,394 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f HTTP/1.1" 200 None
2025-07-21 12:39:06,395 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:06,397 - dashscope - INFO - The task 07bbf122-74b3-4c94-8ac4-a526ad3ca89f is  RUNNING
2025-07-21 12:39:08,399 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:08,403 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:39:08,504 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f HTTP/1.1" 200 None
2025-07-21 12:39:08,505 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:08,505 - dashscope - INFO - The task 07bbf122-74b3-4c94-8ac4-a526ad3ca89f is  RUNNING
2025-07-21 12:39:12,507 - dashscope - DEBUG - Starting request: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:12,511 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope.aliyuncs.com:443
2025-07-21 12:39:12,627 - urllib3.connectionpool - DEBUG - https://dashscope.aliyuncs.com:443 "GET /api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f HTTP/1.1" 200 None
2025-07-21 12:39:12,628 - dashscope - DEBUG - Starting processing response: https://dashscope.aliyuncs.com/api/v1/tasks/07bbf122-74b3-4c94-8ac4-a526ad3ca89f
2025-07-21 12:39:12,630 - services.image_service - INFO - DashScope同步调用响应: {"status_code": 200, "request_id": "f46d4467-ba83-9b9a-a313-344236ac8757", "code": null, "message": "", "output": {"task_id": "07bbf122-74b3-4c94-8ac4-a526ad3ca89f", "task_status": "SUCCEEDED", "results": [{"url": "https://dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com/1d/1e/20250721/ce62dca3/07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png?Expires=1753159149&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=ROLY0Udv1MFXRhWg4ey2bEQ2f2s%3D", "orig_prompt": "吉卜力、电影、演唱会、蒙面", "actual_prompt": "吉卜力风格动画电影场景，神秘的蒙面歌手站在露天演唱会舞台上。舞台位于悬崖边缘，背后是繁星点点的夜空与波光粼粼的海面。歌手身穿深蓝色长袍，兜帽遮住大半张脸，只露出眼睛与嘴巴，手中握着一支发光麦克风。舞台下方坐满戴面具的观众，手持荧光棒，气氛梦幻而温暖。远处有漂浮的灯笼和飞过的飞艇。画面充满细腻的手绘质感与柔和光影，广角俯视构图。"}], "submit_time": "2025-07-21 12:38:59.294", "scheduled_time": "2025-07-21 12:38:59.344", "end_time": "2025-07-21 12:39:09.913", "task_metrics": {"TOTAL": 1, "SUCCEEDED": 1, "FAILED": 0}}, "usage": {"image_count": 1}}
2025-07-21 12:39:12,638 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com:443
2025-07-21 12:39:12,729 - urllib3.connectionpool - DEBUG - https://dashscope-result-wlcb-acdr-1.oss-cn-wulanchabu-acdr-1.aliyuncs.com:443 "GET /1d/1e/20250721/ce62dca3/07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png?Expires=1753159149&OSSAccessKeyId=LTAI5tKPD3TMqf2Lna1fASuh&Signature=ROLY0Udv1MFXRhWg4ey2bEQ2f2s%3D HTTP/1.1" 200 1083676
2025-07-21 12:39:12,800 - services.image_service - INFO - 图片已保存到: cache\07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png
2025-07-21 12:39:12,801 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png
2025-07-21 12:39:12,801 - controllers.article_controller - INFO - 在第4段后插入配图
2025-07-21 12:39:12,802 - controllers.article_controller - INFO - 配图处理完成，共插入1张图片
2025-07-21 12:39:12,829 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_千万粉网红演唱会不露脸 主办方回应旺仔小_20250721_123912.html
2025-07-21 12:39:12,830 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 12:39:12,830 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 12:39:12,831 - controllers.article_controller - WARNING - 未找到</div>标签，保留全部内容
2025-07-21 12:39:12,833 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 12:39:12,834 - controllers.article_controller - INFO - 内容清理完成，移除了 8 个字符，清理后长度: 2231
2025-07-21 12:39:12,839 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_千万粉网红演唱会不露脸 主办方回应旺仔小_20250721_123912.html
2025-07-21 12:39:12,839 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=千万粉网红演唱会不露脸 主办方回应：旺仔小乔, 内容前100字=<h2 style="font-size:24px;font-weight:bold;line-height:1.5;color:#333;">千万粉网红演唱会不露脸，主办方回应：旺仔小乔</h2>
, 图片数=1
2025-07-21 12:39:12,840 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:39:12,841 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 12:39:12,851 - services.history_service - INFO - 添加生成历史记录: 千万粉网红演唱会不露脸 主办方回应：旺仔小乔
2025-07-21 12:39:12,851 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 12:39:12,852 - controllers.article_controller - INFO - 生成结果预览: 标题=千万粉网红演唱会不露脸 主办方回应：旺仔小乔, 内容长度=2231, 配图数量=1
2025-07-21 12:39:12,853 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:39:12] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 12:39:12,865 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:39:12,866 - root - INFO - 请求: GET /cache/07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png
2025-07-21 12:39:12,866 - root - INFO - 获取生成历史请求
2025-07-21 12:39:12,866 - root - INFO - 访问缓存文件: 07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png
2025-07-21 12:39:12,867 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:39:12] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:39:12,868 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:39:12] "GET /cache/07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png HTTP/1.1" 200 -
2025-07-21 12:39:29,057 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:39:29,058 - root - INFO - 获取生成历史请求
2025-07-21 12:39:29,059 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:39:29,060 - root - INFO - 获取发布历史请求
2025-07-21 12:39:29,062 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:39:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:39:29,063 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:39:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:39:59,055 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:39:59,055 - root - INFO - 获取生成历史请求
2025-07-21 12:39:59,057 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:39:59,057 - root - INFO - 获取发布历史请求
2025-07-21 12:39:59,058 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:39:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:39:59,059 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:39:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:40:29,052 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:40:29,052 - root - INFO - 获取生成历史请求
2025-07-21 12:40:29,053 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:40:29,053 - root - INFO - 获取发布历史请求
2025-07-21 12:40:29,054 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:40:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:40:29,055 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:40:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:40:59,051 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:40:59,051 - root - INFO - 获取生成历史请求
2025-07-21 12:40:59,052 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:40:59,052 - root - INFO - 获取发布历史请求
2025-07-21 12:40:59,053 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:40:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:40:59,053 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:40:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:41:29,062 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:41:29,063 - root - INFO - 获取生成历史请求
2025-07-21 12:41:29,064 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:41:29,064 - root - INFO - 获取发布历史请求
2025-07-21 12:41:29,065 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:41:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:41:29,066 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:41:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:41:59,055 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:41:59,056 - root - INFO - 获取生成历史请求
2025-07-21 12:41:59,057 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:41:59,057 - root - INFO - 获取发布历史请求
2025-07-21 12:41:59,058 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:41:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:41:59,060 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:41:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:42:29,060 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:42:29,062 - root - INFO - 获取生成历史请求
2025-07-21 12:42:29,064 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:42:29,066 - root - INFO - 获取发布历史请求
2025-07-21 12:42:29,071 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:42:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:42:29,073 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:42:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:42:59,062 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:42:59,063 - root - INFO - 获取生成历史请求
2025-07-21 12:42:59,065 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:42:59,066 - root - INFO - 获取发布历史请求
2025-07-21 12:42:59,070 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:42:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:42:59,072 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:42:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:43:29,053 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:43:29,053 - root - INFO - 获取生成历史请求
2025-07-21 12:43:29,054 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:43:29,054 - root - INFO - 获取发布历史请求
2025-07-21 12:43:29,055 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:43:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:43:29,056 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:43:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:43:59,059 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:43:59,059 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:43:59,059 - root - INFO - 获取生成历史请求
2025-07-21 12:43:59,059 - root - INFO - 获取发布历史请求
2025-07-21 12:43:59,060 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:43:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:43:59,061 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:43:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:44:29,052 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:44:29,053 - root - INFO - 获取生成历史请求
2025-07-21 12:44:29,053 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:44:29,053 - root - INFO - 获取发布历史请求
2025-07-21 12:44:29,054 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:44:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:44:29,054 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:44:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:44:59,045 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:44:59,045 - root - INFO - 获取生成历史请求
2025-07-21 12:44:59,046 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:44:59,046 - root - INFO - 获取发布历史请求
2025-07-21 12:44:59,046 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:44:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:44:59,047 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:44:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:45:29,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:45:29,179 - root - INFO - 获取生成历史请求
2025-07-21 12:45:29,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:45:29,180 - root - INFO - 获取发布历史请求
2025-07-21 12:45:29,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:45:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:45:29,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:45:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:45:59,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:45:59,178 - root - INFO - 获取生成历史请求
2025-07-21 12:45:59,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:45:59,179 - root - INFO - 获取发布历史请求
2025-07-21 12:45:59,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:45:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:45:59,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:45:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:47:17,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:47:17,189 - root - INFO - 获取生成历史请求
2025-07-21 12:47:17,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:47:17,190 - root - INFO - 获取发布历史请求
2025-07-21 12:47:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:47:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:47:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:47:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:48:17,176 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:48:17,177 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:48:17,178 - root - INFO - 获取生成历史请求
2025-07-21 12:48:17,178 - root - INFO - 获取发布历史请求
2025-07-21 12:48:17,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:48:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:48:17,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:48:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:49:17,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:49:17,179 - root - INFO - 获取生成历史请求
2025-07-21 12:49:17,180 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:49:17,180 - root - INFO - 获取发布历史请求
2025-07-21 12:49:17,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:49:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:49:17,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:49:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:50:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:50:17,189 - root - INFO - 获取生成历史请求
2025-07-21 12:50:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:50:17,189 - root - INFO - 获取发布历史请求
2025-07-21 12:50:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:50:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:50:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:50:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:51:17,177 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:51:17,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:51:17,178 - root - INFO - 获取生成历史请求
2025-07-21 12:51:17,178 - root - INFO - 获取发布历史请求
2025-07-21 12:51:17,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:51:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:51:17,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:51:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:52:17,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:52:17,188 - root - INFO - 获取生成历史请求
2025-07-21 12:52:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:52:17,189 - root - INFO - 获取发布历史请求
2025-07-21 12:52:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:52:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:52:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:52:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:53:17,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:53:17,183 - root - INFO - 获取生成历史请求
2025-07-21 12:53:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:53:17,184 - root - INFO - 获取发布历史请求
2025-07-21 12:53:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:53:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:53:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:53:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:54:17,177 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:54:17,177 - root - INFO - 获取生成历史请求
2025-07-21 12:54:17,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:54:17,178 - root - INFO - 获取发布历史请求
2025-07-21 12:54:17,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:54:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:54:17,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:54:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:55:17,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:55:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:55:17,184 - root - INFO - 获取生成历史请求
2025-07-21 12:55:17,185 - root - INFO - 获取发布历史请求
2025-07-21 12:55:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:55:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:55:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:55:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:56:17,176 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:56:17,176 - root - INFO - 获取生成历史请求
2025-07-21 12:56:17,177 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:56:17,177 - root - INFO - 获取发布历史请求
2025-07-21 12:56:17,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:56:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:56:17,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:56:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:57:17,174 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:57:17,174 - root - INFO - 获取生成历史请求
2025-07-21 12:57:17,175 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:57:17,176 - root - INFO - 获取发布历史请求
2025-07-21 12:57:17,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:57:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:57:17,177 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:57:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:58:17,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:58:17,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:58:17,193 - root - INFO - 获取生成历史请求
2025-07-21 12:58:17,193 - root - INFO - 获取发布历史请求
2025-07-21 12:58:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:58:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:58:17,196 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:58:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 12:59:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 12:59:17,185 - root - INFO - 获取生成历史请求
2025-07-21 12:59:17,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 12:59:17,186 - root - INFO - 获取发布历史请求
2025-07-21 12:59:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:59:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 12:59:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 12:59:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:00:17,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:00:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:00:17,189 - root - INFO - 获取生成历史请求
2025-07-21 13:00:17,190 - root - INFO - 获取发布历史请求
2025-07-21 13:00:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:00:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:00:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:00:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:01:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:01:17,184 - root - INFO - 获取生成历史请求
2025-07-21 13:01:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:01:17,185 - root - INFO - 获取发布历史请求
2025-07-21 13:01:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:01:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:01:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:01:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:02:17,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:02:17,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:02:17,191 - root - INFO - 获取生成历史请求
2025-07-21 13:02:17,191 - root - INFO - 获取发布历史请求
2025-07-21 13:02:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:02:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:02:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:02:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:03:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:03:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:03:17,189 - root - INFO - 获取生成历史请求
2025-07-21 13:03:17,190 - root - INFO - 获取发布历史请求
2025-07-21 13:03:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:03:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:03:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:03:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:04:17,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:04:17,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:04:17,192 - root - INFO - 获取生成历史请求
2025-07-21 13:04:17,192 - root - INFO - 获取发布历史请求
2025-07-21 13:04:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:04:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:04:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:04:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:05:17,193 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:05:17,194 - root - INFO - 获取生成历史请求
2025-07-21 13:05:17,197 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:05:17,198 - root - INFO - 获取发布历史请求
2025-07-21 13:05:17,203 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:05:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:05:17,206 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:05:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:06:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:06:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:06:17,189 - root - INFO - 获取生成历史请求
2025-07-21 13:06:17,189 - root - INFO - 获取发布历史请求
2025-07-21 13:06:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:06:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:06:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:06:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:07:17,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:07:17,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:07:17,193 - root - INFO - 获取生成历史请求
2025-07-21 13:07:17,193 - root - INFO - 获取发布历史请求
2025-07-21 13:07:17,196 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:07:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:07:17,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:07:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:08:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:08:17,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:08:17,187 - root - INFO - 获取生成历史请求
2025-07-21 13:08:17,187 - root - INFO - 获取发布历史请求
2025-07-21 13:08:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:08:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:08:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:08:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:09:17,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:09:17,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:09:17,190 - root - INFO - 获取生成历史请求
2025-07-21 13:09:17,191 - root - INFO - 获取发布历史请求
2025-07-21 13:09:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:09:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:09:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:09:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:10:17,177 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:10:17,178 - root - INFO - 获取生成历史请求
2025-07-21 13:10:17,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:10:17,178 - root - INFO - 获取发布历史请求
2025-07-21 13:10:17,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:10:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:10:17,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:10:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:11:17,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:11:17,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:11:17,182 - root - INFO - 获取生成历史请求
2025-07-21 13:11:17,182 - root - INFO - 获取发布历史请求
2025-07-21 13:11:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:11:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:11:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:11:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:12:17,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:12:17,190 - root - INFO - 获取生成历史请求
2025-07-21 13:12:17,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:12:17,191 - root - INFO - 获取发布历史请求
2025-07-21 13:12:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:12:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:12:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:12:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:13:17,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:13:17,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:13:17,181 - root - INFO - 获取生成历史请求
2025-07-21 13:13:17,182 - root - INFO - 获取发布历史请求
2025-07-21 13:13:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:13:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:13:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:13:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:14:17,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:14:17,181 - root - INFO - 获取生成历史请求
2025-07-21 13:14:17,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:14:17,183 - root - INFO - 获取发布历史请求
2025-07-21 13:14:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:14:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:14:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:14:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:15:17,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:15:17,187 - root - INFO - 获取生成历史请求
2025-07-21 13:15:17,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:15:17,189 - root - INFO - 获取发布历史请求
2025-07-21 13:15:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:15:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:15:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:15:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:16:17,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:16:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:16:17,185 - root - INFO - 获取生成历史请求
2025-07-21 13:16:17,186 - root - INFO - 获取发布历史请求
2025-07-21 13:16:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:16:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:16:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:16:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:17:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:17:17,188 - root - INFO - 获取生成历史请求
2025-07-21 13:17:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:17:17,189 - root - INFO - 获取发布历史请求
2025-07-21 13:17:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:17:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:17:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:17:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:18:17,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:18:17,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:18:17,183 - root - INFO - 获取生成历史请求
2025-07-21 13:18:17,184 - root - INFO - 获取发布历史请求
2025-07-21 13:18:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:18:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:18:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:18:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:19:17,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:19:17,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:19:17,181 - root - INFO - 获取生成历史请求
2025-07-21 13:19:17,181 - root - INFO - 获取发布历史请求
2025-07-21 13:19:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:19:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:19:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:19:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:20:17,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:20:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:20:17,186 - root - INFO - 获取生成历史请求
2025-07-21 13:20:17,186 - root - INFO - 获取发布历史请求
2025-07-21 13:20:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:20:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:20:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:20:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:21:17,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:21:17,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:21:17,188 - root - INFO - 获取生成历史请求
2025-07-21 13:21:17,188 - root - INFO - 获取发布历史请求
2025-07-21 13:21:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:21:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:21:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:21:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:22:17,177 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:22:17,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:22:17,178 - root - INFO - 获取生成历史请求
2025-07-21 13:22:17,178 - root - INFO - 获取发布历史请求
2025-07-21 13:22:17,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:22:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:22:17,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:22:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:23:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:23:17,184 - root - INFO - 获取生成历史请求
2025-07-21 13:23:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:23:17,186 - root - INFO - 获取发布历史请求
2025-07-21 13:23:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:23:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:23:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:23:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:24:17,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:24:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:24:17,190 - root - INFO - 获取生成历史请求
2025-07-21 13:24:17,191 - root - INFO - 获取发布历史请求
2025-07-21 13:24:17,196 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:24:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:24:17,198 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:24:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:25:17,177 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:25:17,177 - root - INFO - 获取生成历史请求
2025-07-21 13:25:17,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:25:17,179 - root - INFO - 获取发布历史请求
2025-07-21 13:25:17,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:25:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:25:17,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:25:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:26:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:26:17,184 - root - INFO - 获取生成历史请求
2025-07-21 13:26:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:26:17,186 - root - INFO - 获取发布历史请求
2025-07-21 13:26:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:26:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:26:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:26:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:27:17,192 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:27:17,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:27:17,193 - root - INFO - 获取生成历史请求
2025-07-21 13:27:17,193 - root - INFO - 获取发布历史请求
2025-07-21 13:27:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:27:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:27:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:27:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:28:17,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:28:17,184 - root - INFO - 获取生成历史请求
2025-07-21 13:28:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:28:17,185 - root - INFO - 获取发布历史请求
2025-07-21 13:28:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:28:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:28:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:28:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:29:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:29:17,185 - root - INFO - 获取生成历史请求
2025-07-21 13:29:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:29:17,186 - root - INFO - 获取发布历史请求
2025-07-21 13:29:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:29:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:29:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:29:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:30:17,193 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:30:17,194 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:30:17,194 - root - INFO - 获取生成历史请求
2025-07-21 13:30:17,195 - root - INFO - 获取发布历史请求
2025-07-21 13:30:17,198 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:30:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:30:17,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:30:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:31:17,193 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:31:17,194 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:31:17,503 - root - INFO - 获取生成历史请求
2025-07-21 13:31:17,503 - root - INFO - 获取发布历史请求
2025-07-21 13:31:17,504 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:31:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:31:17,505 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:31:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:32:17,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:32:17,184 - root - INFO - 获取生成历史请求
2025-07-21 13:32:17,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:32:17,186 - root - INFO - 获取发布历史请求
2025-07-21 13:32:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:32:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:32:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:32:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:33:17,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:33:17,178 - root - INFO - 获取生成历史请求
2025-07-21 13:33:17,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:33:17,179 - root - INFO - 获取发布历史请求
2025-07-21 13:33:17,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:33:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:33:17,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:33:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:34:17,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:34:17,187 - root - INFO - 获取生成历史请求
2025-07-21 13:34:17,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:34:17,188 - root - INFO - 获取发布历史请求
2025-07-21 13:34:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:34:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:34:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:34:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:35:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:35:17,183 - root - INFO - 获取生成历史请求
2025-07-21 13:35:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:35:17,184 - root - INFO - 获取发布历史请求
2025-07-21 13:35:17,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:35:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:35:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:35:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:36:17,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:36:17,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:36:17,182 - root - INFO - 获取生成历史请求
2025-07-21 13:36:17,182 - root - INFO - 获取发布历史请求
2025-07-21 13:36:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:36:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:36:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:36:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:37:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:37:17,186 - root - INFO - 获取生成历史请求
2025-07-21 13:37:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:37:17,188 - root - INFO - 获取发布历史请求
2025-07-21 13:37:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:37:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:37:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:37:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:38:17,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:38:17,178 - root - INFO - 获取生成历史请求
2025-07-21 13:38:17,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:38:17,179 - root - INFO - 获取发布历史请求
2025-07-21 13:38:17,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:38:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:38:17,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:38:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 13:39:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 13:39:17,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 13:39:17,189 - root - INFO - 获取生成历史请求
2025-07-21 13:39:17,189 - root - INFO - 获取发布历史请求
2025-07-21 13:39:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:39:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 13:39:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 13:39:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:06:50,592 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:06:50,599 - root - INFO - 获取生成历史请求
2025-07-21 14:06:50,604 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:06:50] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:06:50,616 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:06:50,622 - root - INFO - 获取发布历史请求
2025-07-21 14:06:50,624 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:06:50] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:06:59,058 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:06:59,060 - root - INFO - 获取生成历史请求
2025-07-21 14:06:59,060 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:06:59,060 - root - INFO - 获取发布历史请求
2025-07-21 14:06:59,061 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:06:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:06:59,061 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:06:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:07:29,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:07:29,191 - root - INFO - 获取生成历史请求
2025-07-21 14:07:29,194 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:07:29,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:07:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:07:29,199 - root - INFO - 获取发布历史请求
2025-07-21 14:07:29,203 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:07:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:07:59,175 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:07:59,175 - root - INFO - 获取生成历史请求
2025-07-21 14:07:59,175 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:07:59,176 - root - INFO - 获取发布历史请求
2025-07-21 14:07:59,176 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:07:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:07:59,177 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:07:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:08:29,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:08:29,184 - root - INFO - 获取生成历史请求
2025-07-21 14:08:29,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:08:29,185 - root - INFO - 获取发布历史请求
2025-07-21 14:08:29,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:08:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:08:29,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:08:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:08:59,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:08:59,188 - root - INFO - 获取生成历史请求
2025-07-21 14:08:59,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:08:59,190 - root - INFO - 获取发布历史请求
2025-07-21 14:08:59,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:08:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:08:59,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:08:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:10:17,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:10:17,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:10:17,181 - root - INFO - 获取生成历史请求
2025-07-21 14:10:17,181 - root - INFO - 获取发布历史请求
2025-07-21 14:10:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:10:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:10:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:10:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:10:36,701 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:10:36,701 - root - INFO - 获取生成历史请求
2025-07-21 14:10:36,702 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:10:36,702 - root - INFO - 获取发布历史请求
2025-07-21 14:10:36,703 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:10:36] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:10:36,704 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:10:36] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:10:56,137 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 14:10:56,137 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 14:10:56,139 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:10:56] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 14:10:56,140 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:10:56] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 14:10:59,045 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:10:59,045 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:10:59,045 - root - INFO - 获取生成历史请求
2025-07-21 14:10:59,045 - root - INFO - 获取发布历史请求
2025-07-21 14:10:59,046 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:10:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:10:59,046 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:10:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:11:29,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:11:29,191 - root - INFO - 获取生成历史请求
2025-07-21 14:11:29,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:11:29,192 - root - INFO - 获取发布历史请求
2025-07-21 14:11:29,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:11:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:11:29,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:11:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:11:59,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:11:59,182 - root - INFO - 获取生成历史请求
2025-07-21 14:11:59,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:11:59,183 - root - INFO - 获取发布历史请求
2025-07-21 14:11:59,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:11:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:11:59,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:11:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:12:29,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:12:29,189 - root - INFO - 获取生成历史请求
2025-07-21 14:12:29,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:12:29,190 - root - INFO - 获取发布历史请求
2025-07-21 14:12:29,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:12:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:12:29,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:12:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:12:59,196 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:12:59,199 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:12:59,200 - root - INFO - 获取生成历史请求
2025-07-21 14:12:59,201 - root - INFO - 获取发布历史请求
2025-07-21 14:12:59,206 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:12:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:12:59,208 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:12:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:14:17,195 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:14:17,195 - root - INFO - 获取生成历史请求
2025-07-21 14:14:17,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:14:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:14:17,198 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:14:17,199 - root - INFO - 获取发布历史请求
2025-07-21 14:14:17,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:14:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:14:29,176 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:14:29,177 - root - INFO - 获取生成历史请求
2025-07-21 14:14:29,177 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:14:29,177 - root - INFO - 获取发布历史请求
2025-07-21 14:14:29,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:14:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:14:29,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:14:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:14:59,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:14:59,191 - root - INFO - 获取生成历史请求
2025-07-21 14:14:59,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:14:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:14:59,194 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:14:59,194 - root - INFO - 获取发布历史请求
2025-07-21 14:14:59,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:14:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:16:34,121 - root - INFO - 应用目录创建完成
2025-07-21 14:16:34,121 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 14:16:34,122 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 14:16:34,122 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 14:16:34,122 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 14:16:34,122 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 14:16:34,122 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 14:16:34,122 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 14:16:34,123 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 14:16:34,123 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 14:16:34,123 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 14:16:34,123 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 14:16:34,123 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 14:16:34,123 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 14:16:35,042 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 14:16:35,042 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 14:16:52,800 - root - INFO - 请求: GET /
2025-07-21 14:16:52,800 - root - INFO - 访问主页面
2025-07-21 14:16:52,840 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:16:52] "GET / HTTP/1.1" 200 -
2025-07-21 14:16:52,892 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 14:16:52,894 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 14:16:52,894 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 14:16:53,092 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:16:53] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 14:16:53,093 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:16:53] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 14:16:53,098 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:16:53] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 14:16:53,178 - root - INFO - 请求: GET /api/get_ip
2025-07-21 14:16:53,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:16:53] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 14:16:53,199 - root - INFO - 请求: GET /api/style-templates
2025-07-21 14:16:53,214 - root - INFO - 请求: GET /api/config
2025-07-21 14:16:53,214 - root - INFO - 处理配置请求: GET
2025-07-21 14:16:53,215 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 14:16:53,215 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 14:16:53,215 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 14:16:53,215 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:16:53] "GET /api/config HTTP/1.1" 200 -
2025-07-21 14:16:53,324 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:16:53] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 14:16:53,372 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 14:16:53,372 - root - INFO - 获取Gemini可用模型列表
2025-07-21 14:16:53,372 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 14:16:53,373 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 14:16:53,373 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 14:16:53,373 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 14:16:55,632 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 14:16:55,632 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 14:16:55,633 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 14:17:23,231 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:17:23,232 - root - INFO - 获取生成历史请求
2025-07-21 14:17:23,233 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:17:23,234 - root - INFO - 获取发布历史请求
2025-07-21 14:17:23,237 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:17:23] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:17:23,238 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:17:23] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:17:54,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:17:54,178 - root - INFO - 获取生成历史请求
2025-07-21 14:17:54,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:17:54,179 - root - INFO - 获取发布历史请求
2025-07-21 14:17:54,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:17:54] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:17:54,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:17:54] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:18:19,829 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 14:18:19,829 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 14:18:19,829 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 14:18:19,830 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:18:19] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 14:18:19,838 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 14:18:19,838 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 14:18:19,838 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 14:18:19,838 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 14:18:19,839 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 14:18:19,839 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 14:18:19,839 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 14:18:20,585 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 14:18:20,684 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 14:18:20,685 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 14:18:20,685 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 14:18:20,685 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 14:18:20,686 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 14:18:20,686 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 14:18:20,686 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 14:18:20,686 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:18:20] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 14:18:20,694 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 14:18:20,694 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 14:18:20,694 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 14:18:20,695 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 14:18:20,695 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 14:18:20,695 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 14:18:21,191 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000009C065C0>, 'json_data': None}
2025-07-21 14:18:21,224 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 14:18:21,224 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 14:18:21,269 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C188F0>
2025-07-21 14:18:21,270 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009C005D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 14:18:21,288 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009C18800>
2025-07-21 14:18:21,289 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 14:18:21,290 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 14:18:21,291 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 14:18:21,292 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 14:18:21,292 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 14:18:21,338 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'756191a8-36fc-9d4e-91bf-0b8efd3f7e7b'), (b'content-type', b'application/json'), (b'req-cost-time', b'34'), (b'req-arrive-time', b'1753078700994'), (b'resp-start-time', b'1753078701029'), (b'x-envoy-upstream-service-time', b'33'), (b'set-cookie', b'acw_tc=756191a8-36fc-9d4e-91bf-0b8efd3f7e7bba3b598e5c1f35df5e435f5a028cedb9;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 06:18:20 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 14:18:21,339 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 14:18:21,339 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 14:18:21,340 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 14:18:21,340 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 14:18:21,341 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 14:18:21,341 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '756191a8-36fc-9d4e-91bf-0b8efd3f7e7b', 'content-type': 'application/json', 'req-cost-time': '34', 'req-arrive-time': '1753078700994', 'resp-start-time': '1753078701029', 'x-envoy-upstream-service-time': '33', 'set-cookie': 'acw_tc=756191a8-36fc-9d4e-91bf-0b8efd3f7e7bba3b598e5c1f35df5e435f5a028cedb9;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 06:18:20 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 14:18:21,342 - openai._base_client - DEBUG - request_id: 756191a8-36fc-9d4e-91bf-0b8efd3f7e7b
2025-07-21 14:18:21,349 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 14:18:21,350 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 14:18:21,350 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 14:18:21,350 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 14:18:21,351 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 14:18:21,351 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 14:18:21,352 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 14:18:21,353 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:18:21] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 14:18:21,365 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:18:21,366 - root - INFO - 获取生成历史请求
2025-07-21 14:18:21,368 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:18:21] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:18:21,376 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:18:21,376 - root - INFO - 获取发布历史请求
2025-07-21 14:18:21,377 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:18:21] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:18:24,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:18:24,191 - root - INFO - 获取生成历史请求
2025-07-21 14:18:24,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:18:24,192 - root - INFO - 获取发布历史请求
2025-07-21 14:18:24,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:18:24] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:18:24,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:18:24] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:18:54,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:18:54,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:18:54,185 - root - INFO - 获取生成历史请求
2025-07-21 14:18:54,186 - root - INFO - 获取发布历史请求
2025-07-21 14:18:54,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:18:54] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:18:54,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:18:54] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:19:24,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:19:24,191 - root - INFO - 获取生成历史请求
2025-07-21 14:19:24,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:19:24,192 - root - INFO - 获取发布历史请求
2025-07-21 14:19:24,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:19:24] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:19:24,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:19:24] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:19:54,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:19:54,189 - root - INFO - 获取生成历史请求
2025-07-21 14:19:54,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:19:54,190 - root - INFO - 获取发布历史请求
2025-07-21 14:19:54,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:19:54] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:19:54,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:19:54] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:21:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:21:17,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:21:17,186 - root - INFO - 获取生成历史请求
2025-07-21 14:21:17,186 - root - INFO - 获取发布历史请求
2025-07-21 14:21:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:21:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:21:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:21:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:22:17,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:22:17,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:22:17,181 - root - INFO - 获取生成历史请求
2025-07-21 14:22:17,181 - root - INFO - 获取发布历史请求
2025-07-21 14:22:17,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:22:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:22:17,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:22:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:23:17,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:23:17,186 - root - INFO - 获取生成历史请求
2025-07-21 14:23:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:23:17,188 - root - INFO - 获取发布历史请求
2025-07-21 14:23:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:23:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:23:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:23:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:24:17,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:24:17,182 - root - INFO - 获取生成历史请求
2025-07-21 14:24:17,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:24:17,183 - root - INFO - 获取发布历史请求
2025-07-21 14:24:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:24:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:24:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:24:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:25:17,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:25:17,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:25:17,182 - root - INFO - 获取生成历史请求
2025-07-21 14:25:17,182 - root - INFO - 获取发布历史请求
2025-07-21 14:25:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:25:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:25:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:25:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:26:17,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:26:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:26:17,187 - root - INFO - 获取生成历史请求
2025-07-21 14:26:17,188 - root - INFO - 获取发布历史请求
2025-07-21 14:26:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:26:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:26:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:26:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:27:17,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:27:17,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:27:17,192 - root - INFO - 获取生成历史请求
2025-07-21 14:27:17,192 - root - INFO - 获取发布历史请求
2025-07-21 14:27:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:27:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:27:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:27:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:28:17,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:28:17,188 - root - INFO - 获取生成历史请求
2025-07-21 14:28:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:28:17,189 - root - INFO - 获取发布历史请求
2025-07-21 14:28:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:28:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:28:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:28:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:29:17,192 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:29:17,192 - root - INFO - 获取生成历史请求
2025-07-21 14:29:17,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:29:17,193 - root - INFO - 获取发布历史请求
2025-07-21 14:29:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:29:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:29:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:29:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:30:17,192 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:30:17,192 - root - INFO - 获取生成历史请求
2025-07-21 14:30:17,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:30:17,193 - root - INFO - 获取发布历史请求
2025-07-21 14:30:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:30:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:30:17,196 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:30:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:31:17,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:31:17,188 - root - INFO - 获取生成历史请求
2025-07-21 14:31:17,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:31:17,189 - root - INFO - 获取发布历史请求
2025-07-21 14:31:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:31:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:31:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:31:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:32:17,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:32:17,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:32:17,190 - root - INFO - 获取生成历史请求
2025-07-21 14:32:17,191 - root - INFO - 获取发布历史请求
2025-07-21 14:32:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:32:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:32:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:32:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:33:17,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:33:17,190 - root - INFO - 获取生成历史请求
2025-07-21 14:33:17,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:33:17,191 - root - INFO - 获取发布历史请求
2025-07-21 14:33:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:33:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:33:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:33:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:34:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:34:17,188 - root - INFO - 获取生成历史请求
2025-07-21 14:34:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:34:17,189 - root - INFO - 获取发布历史请求
2025-07-21 14:34:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:34:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:34:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:34:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:35:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:35:17,184 - root - INFO - 获取生成历史请求
2025-07-21 14:35:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:35:17,185 - root - INFO - 获取发布历史请求
2025-07-21 14:35:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:35:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:35:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:35:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:36:17,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:36:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:36:17,188 - root - INFO - 获取生成历史请求
2025-07-21 14:36:17,188 - root - INFO - 获取发布历史请求
2025-07-21 14:36:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:36:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:36:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:36:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:37:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:37:17,184 - root - INFO - 获取生成历史请求
2025-07-21 14:37:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:37:17,185 - root - INFO - 获取发布历史请求
2025-07-21 14:37:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:37:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:37:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:37:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:38:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:38:17,189 - root - INFO - 获取生成历史请求
2025-07-21 14:38:17,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:38:17,191 - root - INFO - 获取发布历史请求
2025-07-21 14:38:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:38:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:38:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:38:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:39:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:39:17,186 - root - INFO - 获取生成历史请求
2025-07-21 14:39:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:39:17,187 - root - INFO - 获取发布历史请求
2025-07-21 14:39:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:39:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:39:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:39:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:40:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:40:17,188 - root - INFO - 获取生成历史请求
2025-07-21 14:40:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:40:17,189 - root - INFO - 获取发布历史请求
2025-07-21 14:40:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:40:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:40:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:40:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:41:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:41:17,186 - root - INFO - 获取生成历史请求
2025-07-21 14:41:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:41:17,187 - root - INFO - 获取发布历史请求
2025-07-21 14:41:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:41:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:41:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:41:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:42:17,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:42:17,184 - root - INFO - 获取生成历史请求
2025-07-21 14:42:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:42:17,185 - root - INFO - 获取发布历史请求
2025-07-21 14:42:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:42:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:42:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:42:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:43:17,192 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:43:17,193 - root - INFO - 获取生成历史请求
2025-07-21 14:43:17,194 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:43:17,195 - root - INFO - 获取发布历史请求
2025-07-21 14:43:17,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:43:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:43:17,198 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:43:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:44:17,193 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:44:17,194 - root - INFO - 获取生成历史请求
2025-07-21 14:44:17,195 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:44:17,196 - root - INFO - 获取发布历史请求
2025-07-21 14:44:17,198 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:44:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:44:17,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:44:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:45:17,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:45:17,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:45:17,191 - root - INFO - 获取生成历史请求
2025-07-21 14:45:17,191 - root - INFO - 获取发布历史请求
2025-07-21 14:45:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:45:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:45:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:45:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:46:17,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:46:17,183 - root - INFO - 获取生成历史请求
2025-07-21 14:46:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:46:17,184 - root - INFO - 获取发布历史请求
2025-07-21 14:46:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:46:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:46:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:46:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:47:17,178 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:47:17,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:47:17,180 - root - INFO - 获取生成历史请求
2025-07-21 14:47:17,181 - root - INFO - 获取发布历史请求
2025-07-21 14:47:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:47:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:47:17,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:47:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:48:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:48:17,186 - root - INFO - 获取生成历史请求
2025-07-21 14:48:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:48:17,187 - root - INFO - 获取发布历史请求
2025-07-21 14:48:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:48:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:48:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:48:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:49:17,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:49:17,185 - root - INFO - 获取生成历史请求
2025-07-21 14:49:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:49:17,187 - root - INFO - 获取发布历史请求
2025-07-21 14:49:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:49:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:49:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:49:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:50:17,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:50:17,187 - root - INFO - 获取生成历史请求
2025-07-21 14:50:17,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:50:17,188 - root - INFO - 获取发布历史请求
2025-07-21 14:50:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:50:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 14:50:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:50:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:51:17,193 - root - INFO - 请求: GET /api/generation-history
2025-07-21 14:51:17,195 - root - INFO - 请求: GET /api/publish-history
2025-07-21 14:51:17,195 - root - INFO - 获取生成历史请求
2025-07-21 14:51:17,195 - root - INFO - 获取发布历史请求
2025-07-21 14:51:17,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:51:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 14:51:17,201 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 14:51:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 15:29:05,001 - root - INFO - 应用目录创建完成
2025-07-21 15:29:05,038 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 15:29:05,039 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 15:29:05,039 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 15:29:05,039 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 15:29:05,039 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 15:29:05,039 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 15:29:05,039 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 15:29:05,039 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 15:29:05,040 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 15:29:05,040 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 15:29:05,040 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 15:29:05,040 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 15:29:05,040 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 15:29:06,021 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 15:29:06,023 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 16:01:40,078 - root - INFO - 应用目录创建完成
2025-07-21 16:01:40,078 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 16:01:40,079 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 16:01:40,079 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 16:01:40,079 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 16:01:40,079 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 16:01:40,079 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 16:01:40,079 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 16:01:40,080 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 16:01:40,080 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 16:01:40,080 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 16:01:40,080 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 16:01:40,080 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 16:01:40,081 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 16:01:40,952 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 16:01:40,953 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 20:30:44,345 - root - INFO - 应用目录创建完成
2025-07-21 20:30:44,368 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:30:44,368 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 20:30:44,368 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 20:30:44,368 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 20:30:44,368 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 20:30:44,369 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:30:44,369 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 20:30:44,370 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 20:30:44,370 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 20:30:44,370 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 20:30:44,370 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 20:30:44,371 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 20:30:44,371 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 20:30:45,480 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 20:30:45,483 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 20:30:48,351 - root - INFO - 请求: GET /
2025-07-21 20:30:48,352 - root - INFO - 访问主页面
2025-07-21 20:30:48,470 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:30:48] "GET / HTTP/1.1" 200 -
2025-07-21 20:30:48,604 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 20:30:48,636 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 20:30:48,646 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 20:30:48,868 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:30:48] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 20:30:48,874 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:30:48] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 20:30:48,971 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:30:48] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 20:30:49,085 - root - INFO - 请求: GET /api/get_ip
2025-07-21 20:30:49,086 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:30:49] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 20:30:49,157 - root - INFO - 请求: GET /api/style-templates
2025-07-21 20:30:49,284 - root - INFO - 请求: GET /api/config
2025-07-21 20:30:49,286 - root - INFO - 处理配置请求: GET
2025-07-21 20:30:49,287 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 20:30:49,304 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:30:49,307 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 20:30:49,313 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:30:49] "GET /api/config HTTP/1.1" 200 -
2025-07-21 20:30:49,418 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:30:49] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 20:30:49,603 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 20:30:49,605 - root - INFO - 获取Gemini可用模型列表
2025-07-21 20:30:49,606 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 20:30:49,607 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:30:49,608 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:30:49,608 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 20:30:53,049 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 20:30:53,050 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 20:30:53,101 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 20:31:19,215 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:31:19,217 - root - INFO - 获取发布历史请求
2025-07-21 20:31:19,221 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:31:19,221 - root - INFO - 获取生成历史请求
2025-07-21 20:31:19,227 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:31:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:31:19,245 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:31:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:31:49,135 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:31:49,136 - root - INFO - 获取生成历史请求
2025-07-21 20:31:49,139 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:31:49,144 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:31:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:31:49,146 - root - INFO - 获取发布历史请求
2025-07-21 20:31:49,152 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:31:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:32:19,130 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:32:19,136 - root - INFO - 获取生成历史请求
2025-07-21 20:32:19,143 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:32:19,145 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:32:19,147 - root - INFO - 获取发布历史请求
2025-07-21 20:32:19,149 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:32:23,230 - root - INFO - 请求: POST /api/article-content
2025-07-21 20:32:23,231 - root - INFO - 获取文章内容请求
2025-07-21 20:32:23,278 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:23] "POST /api/article-content HTTP/1.1" 200 -
2025-07-21 20:32:23,338 - root - INFO - 请求: GET /cache/07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png
2025-07-21 20:32:23,338 - root - INFO - 访问缓存文件: 07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png
2025-07-21 20:32:23,356 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:23] "GET /cache/07bbf122-74b3-4c94-8ac4-a526ad3ca89f1165523515.png HTTP/1.1" 200 -
2025-07-21 20:32:32,840 - root - INFO - 请求: POST /api/article-content
2025-07-21 20:32:32,840 - root - INFO - 获取文章内容请求
2025-07-21 20:32:32,866 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:32] "POST /api/article-content HTTP/1.1" 200 -
2025-07-21 20:32:32,962 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125311.jpg
2025-07-21 20:32:32,962 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125311.jpg
2025-07-21 20:32:32,963 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图5_20250719_125323.jpg
2025-07-21 20:32:32,964 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图5_20250719_125323.jpg
2025-07-21 20:32:32,964 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图6_20250719_125327.jpg
2025-07-21 20:32:33,001 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图7_20250719_125330.jpg
2025-07-21 20:32:33,003 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图6_20250719_125327.jpg
2025-07-21 20:32:33,003 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图7_20250719_125330.jpg
2025-07-21 20:32:33,006 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图8_20250719_125333.jpg
2025-07-21 20:32:33,007 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图8_20250719_125333.jpg
2025-07-21 20:32:33,007 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图5_20250719_125323.jpg HTTP/1.1" 200 -
2025-07-21 20:32:33,017 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图1_20250719_125311.jpg HTTP/1.1" 200 -
2025-07-21 20:32:33,028 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图7_20250719_125330.jpg HTTP/1.1" 200 -
2025-07-21 20:32:33,039 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图6_20250719_125327.jpg HTTP/1.1" 200 -
2025-07-21 20:32:33,074 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_125314.jpg
2025-07-21 20:32:33,082 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_125314.jpg
2025-07-21 20:32:33,117 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_125317.jpg
2025-07-21 20:32:33,118 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_125317.jpg
2025-07-21 20:32:33,120 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图4_20250719_125320.jpg
2025-07-21 20:32:33,121 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图4_20250719_125320.jpg
2025-07-21 20:32:33,132 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图8_20250719_125333.jpg HTTP/1.1" 200 -
2025-07-21 20:32:33,138 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图4_20250719_125320.jpg HTTP/1.1" 200 -
2025-07-21 20:32:33,149 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图9_20250719_125336.jpg
2025-07-21 20:32:33,150 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图9_20250719_125336.jpg
2025-07-21 20:32:33,166 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125339.jpg
2025-07-21 20:32:33,166 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125339.jpg
2025-07-21 20:32:33,170 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图9_20250719_125336.jpg HTTP/1.1" 200 -
2025-07-21 20:32:33,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图3_20250719_125317.jpg HTTP/1.1" 200 -
2025-07-21 20:32:33,228 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图1_20250719_125339.jpg HTTP/1.1" 200 -
2025-07-21 20:32:33,269 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:33] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图2_20250719_125314.jpg HTTP/1.1" 200 -
2025-07-21 20:32:34,913 - root - INFO - 请求: POST /api/article-content
2025-07-21 20:32:34,914 - root - INFO - 获取文章内容请求
2025-07-21 20:32:34,915 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:34] "POST /api/article-content HTTP/1.1" 200 -
2025-07-21 20:32:46,539 - root - INFO - 请求: POST /api/article-content
2025-07-21 20:32:46,539 - root - INFO - 获取文章内容请求
2025-07-21 20:32:46,568 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:46] "POST /api/article-content HTTP/1.1" 200 -
2025-07-21 20:32:49,114 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:32:49,114 - root - INFO - 获取生成历史请求
2025-07-21 20:32:49,115 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:32:49,115 - root - INFO - 获取发布历史请求
2025-07-21 20:32:49,116 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:32:49,117 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:32:53,096 - root - INFO - 请求: POST /api/article-content
2025-07-21 20:32:53,096 - root - INFO - 获取文章内容请求
2025-07-21 20:32:53,126 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:53] "POST /api/article-content HTTP/1.1" 200 -
2025-07-21 20:32:53,151 - root - INFO - 请求: GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182655.jpg
2025-07-21 20:32:53,152 - root - INFO - 请求: GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182703.jpg
2025-07-21 20:32:53,153 - root - INFO - 访问缓存文件: article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182655.jpg
2025-07-21 20:32:53,153 - root - INFO - 访问缓存文件: article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182703.jpg
2025-07-21 20:32:53,155 - root - INFO - 请求: GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182711.jpg
2025-07-21 20:32:53,156 - root - INFO - 请求: GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182718.jpg
2025-07-21 20:32:53,156 - root - INFO - 访问缓存文件: article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182711.jpg
2025-07-21 20:32:53,156 - root - INFO - 访问缓存文件: article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182718.jpg
2025-07-21 20:32:53,157 - root - INFO - 请求: GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182726.jpg
2025-07-21 20:32:53,158 - root - INFO - 访问缓存文件: article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182726.jpg
2025-07-21 20:32:53,163 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:53] "GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182655.jpg HTTP/1.1" 200 -
2025-07-21 20:32:53,168 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:53] "GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182711.jpg HTTP/1.1" 200 -
2025-07-21 20:32:53,173 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:53] "GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182718.jpg HTTP/1.1" 200 -
2025-07-21 20:32:53,177 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:53] "GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182726.jpg HTTP/1.1" 200 -
2025-07-21 20:32:53,218 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:53] "GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182703.jpg HTTP/1.1" 200 -
2025-07-21 20:32:53,395 - root - INFO - 请求: GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182734.jpg
2025-07-21 20:32:53,396 - root - INFO - 访问缓存文件: article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182734.jpg
2025-07-21 20:32:53,404 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:53] "GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182734.jpg HTTP/1.1" 200 -
2025-07-21 20:32:53,446 - root - INFO - 请求: GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182743.jpg
2025-07-21 20:32:53,447 - root - INFO - 访问缓存文件: article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182743.jpg
2025-07-21 20:32:53,468 - root - INFO - 请求: GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182750.jpg
2025-07-21 20:32:53,469 - root - INFO - 访问缓存文件: article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182750.jpg
2025-07-21 20:32:53,483 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:53] "GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182743.jpg HTTP/1.1" 200 -
2025-07-21 20:32:53,500 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:32:53] "GET /cache/article_coze_人执着于被爱被认可会更难以挣脱现实的困境_20250714_182750.jpg HTTP/1.1" 200 -
2025-07-21 20:33:19,150 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:33:19,151 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:33:19,151 - root - INFO - 获取生成历史请求
2025-07-21 20:33:19,151 - root - INFO - 获取发布历史请求
2025-07-21 20:33:19,153 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:33:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:33:19,153 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:33:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:33:41,422 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 20:33:41,456 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 20:33:41,457 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 20:33:41,457 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:33:41] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 20:33:41,467 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 20:33:41,467 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 20:33:41,467 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 20:33:41,467 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:33:41,468 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:33:41,468 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 20:33:41,468 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 20:33:41,486 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 20:33:41,748 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 20:33:41,749 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 20:33:41,749 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 20:33:41,750 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 20:33:41,750 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 20:33:41,750 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 20:33:41,752 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 20:33:41,753 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:33:41] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 20:33:41,769 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 20:33:41,769 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 20:33:41,770 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 20:33:41,770 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:33:41,771 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:33:41,771 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 20:33:42,912 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000008C7BC40>, 'json_data': None}
2025-07-21 20:33:42,985 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 20:33:42,986 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:33:43,009 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008C7DCD0>
2025-07-21 20:33:43,010 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008C33B50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:33:43,029 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008C7D6D0>
2025-07-21 20:33:43,029 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 20:33:43,030 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:33:43,030 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 20:33:43,030 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:33:43,030 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 20:33:43,073 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1445cc9f-a033-9784-aaa4-68bfcf7982c5'), (b'content-type', b'application/json'), (b'req-cost-time', b'29'), (b'req-arrive-time', b'1753101223079'), (b'resp-start-time', b'1753101223108'), (b'x-envoy-upstream-service-time', b'28'), (b'set-cookie', b'acw_tc=1445cc9f-a033-9784-aaa4-68bfcf7982c55ed996116e5821bc12c755d372705b5e;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:33:42 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:33:43,073 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 20:33:43,092 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 20:33:43,113 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:33:43,114 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:33:43,115 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:33:43,116 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1445cc9f-a033-9784-aaa4-68bfcf7982c5', 'content-type': 'application/json', 'req-cost-time': '29', 'req-arrive-time': '1753101223079', 'resp-start-time': '1753101223108', 'x-envoy-upstream-service-time': '28', 'set-cookie': 'acw_tc=1445cc9f-a033-9784-aaa4-68bfcf7982c55ed996116e5821bc12c755d372705b5e;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:33:42 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:33:43,117 - openai._base_client - DEBUG - request_id: 1445cc9f-a033-9784-aaa4-68bfcf7982c5
2025-07-21 20:33:43,122 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 20:33:43,123 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 20:33:43,123 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 20:33:43,123 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 20:33:43,123 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 20:33:43,123 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 20:33:43,124 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 20:33:43,124 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:33:43] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 20:33:43,146 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:33:43,147 - root - INFO - 获取生成历史请求
2025-07-21 20:33:43,149 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:33:43] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:33:43,162 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:33:43,162 - root - INFO - 获取发布历史请求
2025-07-21 20:33:43,163 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:33:43] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:33:49,113 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:33:49,113 - root - INFO - 获取生成历史请求
2025-07-21 20:33:49,114 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:33:49,114 - root - INFO - 获取发布历史请求
2025-07-21 20:33:49,115 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:33:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:33:49,115 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:33:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:34:19,144 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:34:19,145 - root - INFO - 获取发布历史请求
2025-07-21 20:34:19,148 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:34:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:34:19,150 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:34:19,150 - root - INFO - 获取生成历史请求
2025-07-21 20:34:19,153 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:34:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:34:48,958 - root - INFO - 请求: POST /api/article-content
2025-07-21 20:34:48,959 - root - INFO - 获取文章内容请求
2025-07-21 20:34:48,962 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:34:48] "POST /api/article-content HTTP/1.1" 200 -
2025-07-21 20:34:49,135 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:34:49,138 - root - INFO - 获取生成历史请求
2025-07-21 20:34:49,146 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:34:49,147 - root - INFO - 获取发布历史请求
2025-07-21 20:34:49,152 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:34:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:34:49,157 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:34:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:35:19,129 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:35:19,130 - root - INFO - 获取生成历史请求
2025-07-21 20:35:19,131 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:35:19,131 - root - INFO - 获取发布历史请求
2025-07-21 20:35:19,132 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:35:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:35:19,133 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:35:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:35:49,116 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:35:49,116 - root - INFO - 获取生成历史请求
2025-07-21 20:35:49,118 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:35:49,119 - root - INFO - 获取发布历史请求
2025-07-21 20:35:49,121 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:35:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:35:49,122 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:35:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:36:19,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:36:19,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:36:19,183 - root - INFO - 获取生成历史请求
2025-07-21 20:36:19,183 - root - INFO - 获取发布历史请求
2025-07-21 20:36:19,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:36:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:36:19,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:36:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:36:49,117 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:36:49,117 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:36:49,117 - root - INFO - 获取生成历史请求
2025-07-21 20:36:49,117 - root - INFO - 获取发布历史请求
2025-07-21 20:36:49,119 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:36:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:36:49,119 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:36:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:37:19,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:37:19,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:37:19,186 - root - INFO - 获取生成历史请求
2025-07-21 20:37:19,186 - root - INFO - 获取发布历史请求
2025-07-21 20:37:19,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:37:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:37:19,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:37:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:37:49,135 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:37:49,137 - root - INFO - 获取生成历史请求
2025-07-21 20:37:49,142 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:37:49,144 - root - INFO - 获取发布历史请求
2025-07-21 20:37:49,146 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:37:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:37:49,150 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:37:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:38:19,152 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:38:19,154 - root - INFO - 获取生成历史请求
2025-07-21 20:38:19,157 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:38:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:38:19,160 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:38:19,164 - root - INFO - 获取发布历史请求
2025-07-21 20:38:19,167 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:38:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:38:49,128 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:38:49,129 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:38:49,130 - root - INFO - 获取生成历史请求
2025-07-21 20:38:49,130 - root - INFO - 获取发布历史请求
2025-07-21 20:38:49,132 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:38:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:38:49,133 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:38:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:39:19,142 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:39:19,143 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:39:19,144 - root - INFO - 获取生成历史请求
2025-07-21 20:39:19,144 - root - INFO - 获取发布历史请求
2025-07-21 20:39:19,145 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:39:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:39:19,146 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:39:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:39:49,130 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:39:49,131 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:39:49,132 - root - INFO - 获取生成历史请求
2025-07-21 20:39:49,132 - root - INFO - 获取发布历史请求
2025-07-21 20:39:49,134 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:39:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:39:49,135 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:39:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:40:19,152 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:40:19,153 - root - INFO - 获取发布历史请求
2025-07-21 20:40:19,154 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:40:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:40:19,156 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:40:19,156 - root - INFO - 获取生成历史请求
2025-07-21 20:40:19,160 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:40:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:40:49,116 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:40:49,116 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:40:49,116 - root - INFO - 获取生成历史请求
2025-07-21 20:40:49,116 - root - INFO - 获取发布历史请求
2025-07-21 20:40:49,118 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:40:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:40:49,118 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:40:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:41:19,122 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:41:19,123 - root - INFO - 获取生成历史请求
2025-07-21 20:41:19,124 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:41:19,125 - root - INFO - 获取发布历史请求
2025-07-21 20:41:19,126 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:41:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:41:19,128 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:41:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:41:49,113 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:41:49,113 - root - INFO - 获取生成历史请求
2025-07-21 20:41:49,114 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:41:49,114 - root - INFO - 获取发布历史请求
2025-07-21 20:41:49,115 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:41:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:41:49,116 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:41:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:42:19,111 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:42:19,111 - root - INFO - 获取生成历史请求
2025-07-21 20:42:19,112 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:42:19,112 - root - INFO - 获取发布历史请求
2025-07-21 20:42:19,113 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:42:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:42:19,113 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:42:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:42:25,419 - root - INFO - 请求: POST /api/generate-article
2025-07-21 20:42:25,419 - root - INFO - 生成文章请求
2025-07-21 20:42:25,420 - controllers.article_controller - INFO - 【唯一请求ID】9d2eb4fb-6242-4c38-9b78-33e8431ae5f9 - generate_article
2025-07-21 20:42:25,420 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '句句都不黄，句句都很撩', 'word_count': 8000, 'image_count': 10, 'format_template': '<!-- 0. 文章通用外层容器（AI可用于包裹整篇文章） -->\n<!-- AI可自行决定是否需要一个统一的根容器，例如： -->\n<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;">\n\n\n\n    <!-- 2. 空行占位符 (AI可根据需要添加多个以创建间距) -->\n    <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n\n    <!-- 3. 普通文本内容区块 (有左右内边距，行高2，默认字体颜色) -->\n    <!-- AI可在此区块内放置多段内容，包括普通文本、强调文本和提示信息。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的普通段落内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 48, 48); line-height: 2; font-style: normal; font-weight: 400; text-align: justify; font-size: 16px; box-sizing: border-box;">\n        <span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;"><strong style="box-sizing: border-box;">AI生成的红色强调文本，如金句。</strong></span>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n    </section>\n\n    <!-- 4. 带左侧小图和标题的章节区块（图片有左侧位移效果） -->\n    <!-- AI可复用此结构作为文章新章节的开头。 -->\n    <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(18px, 0px, 0px); box-sizing: border-box;">\n      <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 35%; height: auto; box-sizing: border-box;">\n      </section>\n    </section>\n    <section style="font-size: 24px; color: rgb(62, 62, 62); padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，上半句，模拟H2</span></strong></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，下半句，模拟H2</span></strong></p>\n    </section>\n\n    <!-- 5. 带有编号的列表项区块 (文本居中编号 + 普通段落，有左右内边距) -->\n    <!-- AI可复用此结构来展示多条编号内容，如洞察、事实。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">01.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第一段内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">02.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第二段内容，可包含<strong style="box-sizing: border-box;"><span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;">红色强调文本</span></strong>。</p>\n    </section>\n\n    <!-- 6. 图片来源/说明区块 (小字，左右内边距) -->\n    <section style="margin-top: 0px; margin-bottom: 0px; box-sizing: border-box;">\n      <section style="margin: 0px; box-sizing: border-box;">\n        <section style="font-size: 13px; color: rgb(136, 136, 136); padding: 0px 13px; box-sizing: border-box;">\n          <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的图片来源或说明文字。</p>\n        </section>\n      </section>\n    </section>\n\n    <!-- 7. 浅灰色背景的通用分割线/内容区块 (宽度92%，居中，有特定背景色和内边距) -->\n    <!-- AI可复用此结构作为文章中的视觉分隔，或放置提示信息、作者信息等。 -->\n    <section style="margin: 0px; text-align: center; box-sizing: border-box;">\n      <section style="border-top: 0.1em solid rgba(0, 0, 0, 0); border-bottom: 0.1em solid rgba(0, 0, 0, 0); transform: rotate(0deg); width: 92%; display: inline-block; background-color: rgba(136, 136, 136, 0.08); height: auto; padding: 15px 5px; box-sizing: border-box;">\n        \n        <!-- 7.1 内部左侧小图区块 (小图有左侧位移) -->\n        <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(15px, 0px, 0px); box-sizing: border-box;">\n          <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 20%; height: auto; box-sizing: border-box;">\n          </section>\n        </section>\n\n        <!-- 7.2 内部缩放图片区块 (如横向装饰线) -->\n        <section style="transform: scale(0.9); transform-origin: center center; margin-top: -1px; margin-bottom: -1px; box-sizing: border-box;">\n          <section style="text-align: center; margin-top: 10px; margin-bottom: 10px; line-height: 0; box-sizing: border-box;">\n            <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; box-sizing: border-box;">\n            </section>\n          </section>\n        </section>\n      </section>\n    </section>\n\n\n</div>', 'ai_model': 'dashscope', 'image_model': 'pexels', 'custom_image_prompt': ''}
2025-07-21 20:42:25,420 - controllers.article_controller - INFO - 开始生成文章，标题: 句句都不黄，句句都很撩
2025-07-21 20:42:25,420 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: pexels
2025-07-21 20:42:25,421 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:42:25,421 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 20:42:25,421 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 20:42:26,033 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘句句都不黄，句句都很撩’的公众号文章，排版核心风格要与模板一致，字数约8000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n<!-- 0. 文章通用外层容器（AI可用于包裹整篇文章） -->\n<!-- AI可自行决定是否需要一个统一的根容器，例如： -->\n<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;">\n\n\n\n    <!-- 2. 空行占位符 (AI可根据需要添加多个以创建间距) -->\n    <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n\n    <!-- 3. 普通文本内容区块 (有左右内边距，行高2，默认字体颜色) -->\n    <!-- AI可在此区块内放置多段内容，包括普通文本、强调文本和提示信息。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的普通段落内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 48, 48); line-height: 2; font-style: normal; font-weight: 400; text-align: justify; font-size: 16px; box-sizing: border-box;">\n        <span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;"><strong style="box-sizing: border-box;">AI生成的红色强调文本，如金句。</strong></span>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n    </section>\n\n    <!-- 4. 带左侧小图和标题的章节区块（图片有左侧位移效果） -->\n    <!-- AI可复用此结构作为文章新章节的开头。 -->\n    <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(18px, 0px, 0px); box-sizing: border-box;">\n      <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 35%; height: auto; box-sizing: border-box;">\n      </section>\n    </section>\n    <section style="font-size: 24px; color: rgb(62, 62, 62); padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，上半句，模拟H2</span></strong></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，下半句，模拟H2</span></strong></p>\n    </section>\n\n    <!-- 5. 带有编号的列表项区块 (文本居中编号 + 普通段落，有左右内边距) -->\n    <!-- AI可复用此结构来展示多条编号内容，如洞察、事实。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">01.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第一段内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">02.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第二段内容，可包含<strong style="box-sizing: border-box;"><span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;">红色强调文本</span></strong>。</p>\n    </section>\n\n    <!-- 6. 图片来源/说明区块 (小字，左右内边距) -->\n    <section style="margin-top: 0px; margin-bottom: 0px; box-sizing: border-box;">\n      <section style="margin: 0px; box-sizing: border-box;">\n        <section style="font-size: 13px; color: rgb(136, 136, 136); padding: 0px 13px; box-sizing: border-box;">\n          <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的图片来源或说明文字。</p>\n        </section>\n      </section>\n    </section>\n\n    <!-- 7. 浅灰色背景的通用分割线/内容区块 (宽度92%，居中，有特定背景色和内边距) -->\n    <!-- AI可复用此结构作为文章中的视觉分隔，或放置提示信息、作者信息等。 -->\n    <section style="margin: 0px; text-align: center; box-sizing: border-box;">\n      <section style="border-top: 0.1em solid rgba(0, 0, 0, 0); border-bottom: 0.1em solid rgba(0, 0, 0, 0); transform: rotate(0deg); width: 92%; display: inline-block; background-color: rgba(136, 136, 136, 0.08); height: auto; padding: 15px 5px; box-sizing: border-box;">\n        \n        <!-- 7.1 内部左侧小图区块 (小图有左侧位移) -->\n        <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(15px, 0px, 0px); box-sizing: border-box;">\n          <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 20%; height: auto; box-sizing: border-box;">\n          </section>\n        </section>\n\n        <!-- 7.2 内部缩放图片区块 (如横向装饰线) -->\n        <section style="transform: scale(0.9); transform-origin: center center; margin-top: -1px; margin-bottom: -1px; box-sizing: border-box;">\n          <section style="text-align: center; margin-top: 10px; margin-bottom: 10px; line-height: 0; box-sizing: border-box;">\n            <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; box-sizing: border-box;">\n            </section>\n          </section>\n        </section>\n      </section>\n    </section>\n\n\n</div>'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 20:42:26,046 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:42:26,046 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:42:26,067 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008C7EF00>
2025-07-21 20:42:26,068 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CA21D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:42:26,087 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008C7E780>
2025-07-21 20:42:26,087 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:42:26,087 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:42:26,088 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:42:26,088 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:42:26,088 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:42:49,125 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:42:49,126 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:42:49,126 - root - INFO - 获取生成历史请求
2025-07-21 20:42:49,126 - root - INFO - 获取发布历史请求
2025-07-21 20:42:49,128 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:42:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:42:49,128 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:42:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:43:19,129 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:43:19,130 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:43:19,131 - root - INFO - 获取生成历史请求
2025-07-21 20:43:19,131 - root - INFO - 获取发布历史请求
2025-07-21 20:43:19,132 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:43:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:43:19,132 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:43:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:43:49,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:43:49,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:43:49,182 - root - INFO - 获取生成历史请求
2025-07-21 20:43:49,182 - root - INFO - 获取发布历史请求
2025-07-21 20:43:49,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:43:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:43:49,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:43:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:43:53,609 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'8081ecde-ba71-97fe-b5c7-9c94d3aac0ae'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'87511'), (b'req-arrive-time', b'1753101746143'), (b'resp-start-time', b'1753101833655'), (b'x-envoy-upstream-service-time', b'87509'), (b'set-cookie', b'acw_tc=8081ecde-ba71-97fe-b5c7-9c94d3aac0ae4f104c0d02b56b838ff744dd4dc9e23a;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:43:53 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:43:53,610 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:43:53,610 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:43:53,611 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:43:53,611 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:43:53,611 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:43:53,611 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '8081ecde-ba71-97fe-b5c7-9c94d3aac0ae', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '87511', 'req-arrive-time': '1753101746143', 'resp-start-time': '1753101833655', 'x-envoy-upstream-service-time': '87509', 'set-cookie': 'acw_tc=8081ecde-ba71-97fe-b5c7-9c94d3aac0ae4f104c0d02b56b838ff744dd4dc9e23a;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:43:53 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:43:53,612 - openai._base_client - DEBUG - request_id: 8081ecde-ba71-97fe-b5c7-9c94d3aac0ae
2025-07-21 20:43:53,640 - controllers.article_controller - INFO - 文章内容生成成功，长度: 11135字符
2025-07-21 20:43:53,640 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 20:43:53,640 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 句句都不黄，句句都很撩
2025-07-21 20:43:54,204 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：句句都不黄，句句都很撩\n内容预览：```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。 <p style="white-space: normal; margin:\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:43:54,204 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:43:54,205 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:43:54,226 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CDCC80>
2025-07-21 20:43:54,226 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CC60D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:43:54,243 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CDD250>
2025-07-21 20:43:54,243 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:43:54,244 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:43:54,244 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:43:54,244 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:43:54,244 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:43:56,033 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'b646d2ea-0140-9657-858d-066a55f7632f'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1778'), (b'req-arrive-time', b'1753101834299'), (b'resp-start-time', b'1753101836078'), (b'x-envoy-upstream-service-time', b'1777'), (b'set-cookie', b'acw_tc=b646d2ea-0140-9657-858d-066a55f7632f950018baf64c322ac4af1b647850bbb6;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:43:55 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:43:56,033 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:43:56,034 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:43:56,034 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:43:56,034 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:43:56,034 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:43:56,035 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'b646d2ea-0140-9657-858d-066a55f7632f', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1778', 'req-arrive-time': '1753101834299', 'resp-start-time': '1753101836078', 'x-envoy-upstream-service-time': '1777', 'set-cookie': 'acw_tc=b646d2ea-0140-9657-858d-066a55f7632f950018baf64c322ac4af1b647850bbb6;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:43:55 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:43:56,035 - openai._base_client - DEBUG - request_id: b646d2ea-0140-9657-858d-066a55f7632f
2025-07-21 20:43:56,035 - services.dashscope_service - INFO - 文章摘要生成成功: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。
2025-07-21 20:43:56,036 - controllers.article_controller - INFO - 摘要生成完成: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，...
2025-07-21 20:43:56,036 - controllers.article_controller - INFO - 文章字数约: 8000，计划生成配图数量: 10
2025-07-21 20:43:56,036 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 20:43:56,036 - controllers.article_controller - INFO - 开始处理文章配图，计划生成10张图片（仅本地路径，不上传微信）
2025-07-21 20:43:56,036 - controllers.article_controller - INFO - 计划在第[6, 12, 18, 24, 30, 35, 41, 47, 53, 59]段后插入配图
2025-07-21 20:43:56,036 - controllers.article_controller - INFO - 生成第1张配图，使用模型: pexels
2025-07-21 20:43:56,037 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 1/10
2025-07-21 20:43:56,037 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 1/10
2025-07-21 20:43:56,037 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:43:56,037 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:43:56,037 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:43:56,038 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:43:56,577 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第1张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:43:56,577 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:43:56,578 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:43:56,590 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CFD4F0>
2025-07-21 20:43:56,591 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CED250> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:43:56,607 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CFD250>
2025-07-21 20:43:56,608 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:43:56,608 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:43:56,608 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:43:56,609 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:43:56,609 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:43:57,342 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'444c71f8-6012-903f-a3fb-265d2b7c315e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'719'), (b'req-arrive-time', b'1753101836666'), (b'resp-start-time', b'1753101837386'), (b'x-envoy-upstream-service-time', b'718'), (b'set-cookie', b'acw_tc=444c71f8-6012-903f-a3fb-265d2b7c315ef51a2d48d1d41cdb0acbaf3d514a26ee;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:43:57 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:43:57,342 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:43:57,343 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:43:57,343 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:43:57,343 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:43:57,343 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:43:57,343 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '444c71f8-6012-903f-a3fb-265d2b7c315e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '719', 'req-arrive-time': '1753101836666', 'resp-start-time': '1753101837386', 'x-envoy-upstream-service-time': '718', 'set-cookie': 'acw_tc=444c71f8-6012-903f-a3fb-265d2b7c315ef51a2d48d1d41cdb0acbaf3d514a26ee;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:43:57 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:43:57,344 - openai._base_client - DEBUG - request_id: 444c71f8-6012-903f-a3fb-265d2b7c315e
2025-07-21 20:43:57,344 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: emotional text romantic atmosphere
2025-07-21 20:43:57,345 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:43:58,632 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=emotional+text+romantic+atmosphere&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:43:58,674 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:43:58,675 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:43:58,675 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-21 20:43:58,675 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204358.jpg
2025-07-21 20:43:58,676 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:43:59,470 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/9174656/pexels-photo-9174656.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 154834
2025-07-21 20:43:59,518 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204358.jpg
2025-07-21 20:43:59,519 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204358.jpg
2025-07-21 20:43:59,520 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204358.jpg
2025-07-21 20:43:59,520 - controllers.article_controller - INFO - 生成第2张配图，使用模型: pexels
2025-07-21 20:43:59,520 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 2/10
2025-07-21 20:43:59,520 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 2/10
2025-07-21 20:43:59,520 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:43:59,520 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:43:59,521 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:43:59,521 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:00,077 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第2张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:44:00,078 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:44:00,078 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:44:00,091 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CFFE60>
2025-07-21 20:44:00,092 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008D0C3D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:44:00,105 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CFD280>
2025-07-21 20:44:00,106 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:44:00,106 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:44:00,107 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:44:00,107 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:44:00,107 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:44:00,859 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'aab189d3-54c7-9c68-a0b0-4e82a3f2ee11'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'739'), (b'req-arrive-time', b'1753101840163'), (b'resp-start-time', b'1753101840902'), (b'x-envoy-upstream-service-time', b'737'), (b'set-cookie', b'acw_tc=aab189d3-54c7-9c68-a0b0-4e82a3f2ee11a2453a0a56c7b5a9ca643410bd4b60c7;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:44:00 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:44:00,860 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:44:00,860 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:44:00,861 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:44:00,861 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:44:00,861 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:44:00,861 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'aab189d3-54c7-9c68-a0b0-4e82a3f2ee11', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '739', 'req-arrive-time': '1753101840163', 'resp-start-time': '1753101840902', 'x-envoy-upstream-service-time': '737', 'set-cookie': 'acw_tc=aab189d3-54c7-9c68-a0b0-4e82a3f2ee11a2453a0a56c7b5a9ca643410bd4b60c7;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:44:00 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:44:00,862 - openai._base_client - DEBUG - request_id: aab189d3-54c7-9c68-a0b0-4e82a3f2ee11
2025-07-21 20:44:00,862 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: modern typography quote text
2025-07-21 20:44:00,864 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:44:01,886 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=modern+typography+quote+text&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:44:01,887 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:44:01,887 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:44:01,887 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-21 20:44:01,887 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204401.jpg
2025-07-21 20:44:01,888 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:44:05,238 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/5981782/pexels-photo-5981782.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 44791
2025-07-21 20:44:05,252 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204401.jpg
2025-07-21 20:44:05,253 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204401.jpg
2025-07-21 20:44:05,253 - controllers.article_controller - INFO - 第2张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204401.jpg
2025-07-21 20:44:05,254 - controllers.article_controller - INFO - 生成第3张配图，使用模型: pexels
2025-07-21 20:44:05,254 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 3/10
2025-07-21 20:44:05,254 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 3/10
2025-07-21 20:44:05,254 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:05,254 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:05,255 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:05,255 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:05,820 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:05,821 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:05,821 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:05,821 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:05,821 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:05,821 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:05,825 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第3张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:44:05,825 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:44:05,825 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:44:05,836 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CFF200>
2025-07-21 20:44:05,837 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CEFE50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:44:05,850 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CFD400>
2025-07-21 20:44:05,851 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:44:05,852 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:44:05,852 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:44:05,852 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:44:05,853 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:44:06,595 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'2a98920d-1182-969c-a027-f73ae6b16da3'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'730'), (b'req-arrive-time', b'1753101845910'), (b'resp-start-time', b'1753101846641'), (b'x-envoy-upstream-service-time', b'729'), (b'set-cookie', b'acw_tc=2a98920d-1182-969c-a027-f73ae6b16da39ea9a2c1859631bfe08c9870d39612dc;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:44:06 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:44:06,595 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:44:06,595 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:44:06,596 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:44:06,596 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:44:06,596 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:44:06,596 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '2a98920d-1182-969c-a027-f73ae6b16da3', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '730', 'req-arrive-time': '1753101845910', 'resp-start-time': '1753101846641', 'x-envoy-upstream-service-time': '729', 'set-cookie': 'acw_tc=2a98920d-1182-969c-a027-f73ae6b16da39ea9a2c1859631bfe08c9870d39612dc;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:44:06 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:44:06,597 - openai._base_client - DEBUG - request_id: 2a98920d-1182-969c-a027-f73ae6b16da3
2025-07-21 20:44:06,597 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: romantic text message conversation
2025-07-21 20:44:06,598 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:44:07,558 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=romantic+text+message+conversation&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:44:07,559 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:44:07,560 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:44:07,560 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-21 20:44:07,560 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204407.jpg
2025-07-21 20:44:07,561 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:44:09,028 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/4921407/pexels-photo-4921407.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 130287
2025-07-21 20:44:09,380 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204407.jpg
2025-07-21 20:44:09,380 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204407.jpg
2025-07-21 20:44:09,381 - controllers.article_controller - INFO - 第3张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204407.jpg
2025-07-21 20:44:09,381 - controllers.article_controller - INFO - 生成第4张配图，使用模型: pexels
2025-07-21 20:44:09,381 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 4/10
2025-07-21 20:44:09,381 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 4/10
2025-07-21 20:44:09,382 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:09,382 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:09,382 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:09,383 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:09,948 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第4张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:44:09,948 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:44:09,949 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:44:09,961 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008C7DFA0>
2025-07-21 20:44:09,961 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008D0E5D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:44:09,978 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CDC380>
2025-07-21 20:44:09,978 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:44:09,979 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:44:09,979 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:44:09,979 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:44:09,979 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:44:10,609 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'c19107a7-b6b1-9835-accf-db6f16f68754'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'617'), (b'req-arrive-time', b'1753101850035'), (b'resp-start-time', b'1753101850652'), (b'x-envoy-upstream-service-time', b'614'), (b'set-cookie', b'acw_tc=c19107a7-b6b1-9835-accf-db6f16f687547736f4291b6c7a8b6abb7fbb97dee86a;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:44:10 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:44:10,610 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:44:10,610 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:44:10,610 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:44:10,610 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:44:10,611 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:44:10,611 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'c19107a7-b6b1-9835-accf-db6f16f68754', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '617', 'req-arrive-time': '1753101850035', 'resp-start-time': '1753101850652', 'x-envoy-upstream-service-time': '614', 'set-cookie': 'acw_tc=c19107a7-b6b1-9835-accf-db6f16f687547736f4291b6c7a8b6abb7fbb97dee86a;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:44:10 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:44:10,611 - openai._base_client - DEBUG - request_id: c19107a7-b6b1-9835-accf-db6f16f68754
2025-07-21 20:44:10,612 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: emotional connection subtle charm
2025-07-21 20:44:10,613 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:10,613 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:10,615 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:44:11,589 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=emotional+connection+subtle+charm&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:44:11,639 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:44:11,640 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:44:11,640 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-21 20:44:11,640 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204411.jpg
2025-07-21 20:44:11,641 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:44:12,268 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/7047466/pexels-photo-7047466.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 172629
2025-07-21 20:44:12,320 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204411.jpg
2025-07-21 20:44:12,321 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204411.jpg
2025-07-21 20:44:12,321 - controllers.article_controller - INFO - 第4张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204411.jpg
2025-07-21 20:44:12,321 - controllers.article_controller - INFO - 生成第5张配图，使用模型: pexels
2025-07-21 20:44:12,321 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 5/10
2025-07-21 20:44:12,321 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 5/10
2025-07-21 20:44:12,322 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:12,322 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:12,322 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:12,323 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:12,845 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第5张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:44:12,846 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:44:12,847 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:44:12,879 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CB3380>
2025-07-21 20:44:12,880 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008D0D050> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:44:12,896 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CFCF50>
2025-07-21 20:44:12,896 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:44:12,897 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:44:12,897 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:44:12,897 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:44:12,897 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:44:13,464 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'4633d0a0-3fd1-952b-b017-6f44ad07d49e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'555'), (b'req-arrive-time', b'1753101852954'), (b'resp-start-time', b'1753101853510'), (b'x-envoy-upstream-service-time', b'554'), (b'set-cookie', b'acw_tc=4633d0a0-3fd1-952b-b017-6f44ad07d49ebd2a714e016f1e0243ebaa325a732e30;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:44:13 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:44:13,464 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:44:13,465 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:44:13,465 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:44:13,465 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:44:13,466 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:44:13,466 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '4633d0a0-3fd1-952b-b017-6f44ad07d49e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '555', 'req-arrive-time': '1753101852954', 'resp-start-time': '1753101853510', 'x-envoy-upstream-service-time': '554', 'set-cookie': 'acw_tc=4633d0a0-3fd1-952b-b017-6f44ad07d49ebd2a714e016f1e0243ebaa325a732e30;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:44:13 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:44:13,466 - openai._base_client - DEBUG - request_id: 4633d0a0-3fd1-952b-b017-6f44ad07d49e
2025-07-21 20:44:13,466 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: modern typography emotional expression
2025-07-21 20:44:13,468 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:44:14,000 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:14,000 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:14,539 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=modern+typography+emotional+expression&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:44:14,540 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:44:14,540 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:44:14,540 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-21 20:44:14,540 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204414.jpg
2025-07-21 20:44:14,541 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:44:15,322 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/8581117/pexels-photo-8581117.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 88955
2025-07-21 20:44:15,362 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204414.jpg
2025-07-21 20:44:15,363 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204414.jpg
2025-07-21 20:44:15,363 - controllers.article_controller - INFO - 第5张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204414.jpg
2025-07-21 20:44:15,364 - controllers.article_controller - INFO - 生成第6张配图，使用模型: pexels
2025-07-21 20:44:15,364 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 6/10
2025-07-21 20:44:15,364 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 6/10
2025-07-21 20:44:15,364 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:15,365 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:15,365 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:15,365 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:15,926 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第6张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:44:15,927 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:44:15,927 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:44:15,942 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D1E060>
2025-07-21 20:44:15,942 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008D0EBD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:44:15,958 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CB37A0>
2025-07-21 20:44:15,958 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:44:15,958 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:44:15,958 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:44:15,959 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:44:15,959 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:44:17,193 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'74d7b8d6-a400-9c8d-96e1-2ee2933fd7e7'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1221'), (b'req-arrive-time', b'1753101856016'), (b'resp-start-time', b'1753101857238'), (b'x-envoy-upstream-service-time', b'1220'), (b'set-cookie', b'acw_tc=74d7b8d6-a400-9c8d-96e1-2ee2933fd7e7bf43aa2fa5211668aa7b7a920d5ccc5e;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:44:16 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:44:17,194 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:44:17,194 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:44:17,194 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:44:17,194 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:44:17,194 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:44:17,194 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '74d7b8d6-a400-9c8d-96e1-2ee2933fd7e7', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1221', 'req-arrive-time': '1753101856016', 'resp-start-time': '1753101857238', 'x-envoy-upstream-service-time': '1220', 'set-cookie': 'acw_tc=74d7b8d6-a400-9c8d-96e1-2ee2933fd7e7bf43aa2fa5211668aa7b7a920d5ccc5e;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:44:16 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:44:17,195 - openai._base_client - DEBUG - request_id: 74d7b8d6-a400-9c8d-96e1-2ee2933fd7e7
2025-07-21 20:44:17,195 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: modern typography quote design
2025-07-21 20:44:17,196 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:44:17,672 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:17,672 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:18,203 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=modern+typography+quote+design&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:44:18,204 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:44:18,204 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:44:18,204 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-21 20:44:18,204 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204418.jpg
2025-07-21 20:44:18,205 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:44:19,194 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:44:19,195 - root - INFO - 获取生成历史请求
2025-07-21 20:44:19,195 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:44:19,196 - root - INFO - 获取发布历史请求
2025-07-21 20:44:19,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:44:19,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:44:19,659 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/3280216/pexels-photo-3280216.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 35999
2025-07-21 20:44:19,671 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204418.jpg
2025-07-21 20:44:19,672 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204418.jpg
2025-07-21 20:44:19,672 - controllers.article_controller - INFO - 第6张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204418.jpg
2025-07-21 20:44:19,672 - controllers.article_controller - INFO - 生成第7张配图，使用模型: pexels
2025-07-21 20:44:19,672 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 7/10
2025-07-21 20:44:19,672 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 7/10
2025-07-21 20:44:19,672 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:19,673 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:19,673 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:19,673 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:20,192 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第7张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:44:20,193 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:44:20,193 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:44:20,205 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D1F4A0>
2025-07-21 20:44:20,205 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008D0DF50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:44:20,220 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D1EE40>
2025-07-21 20:44:20,220 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:44:20,221 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:44:20,221 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:44:20,221 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:44:20,221 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:44:21,047 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ad524b21-4c07-908e-be0a-e1d1931db045'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'814'), (b'req-arrive-time', b'1753101860278'), (b'resp-start-time', b'1753101861092'), (b'x-envoy-upstream-service-time', b'813'), (b'set-cookie', b'acw_tc=ad524b21-4c07-908e-be0a-e1d1931db045474eb5d9e59b6cd0eb555cd5553cbb44;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:44:20 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:44:21,048 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:44:21,048 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:44:21,049 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:44:21,049 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:44:21,049 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:44:21,049 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ad524b21-4c07-908e-be0a-e1d1931db045', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '814', 'req-arrive-time': '1753101860278', 'resp-start-time': '1753101861092', 'x-envoy-upstream-service-time': '813', 'set-cookie': 'acw_tc=ad524b21-4c07-908e-be0a-e1d1931db045474eb5d9e59b6cd0eb555cd5553cbb44;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:44:20 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:44:21,049 - openai._base_client - DEBUG - request_id: ad524b21-4c07-908e-be0a-e1d1931db045
2025-07-21 20:44:21,050 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: modern typography romantic atmosphere
2025-07-21 20:44:21,052 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:44:21,534 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:21,534 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:22,083 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=modern+typography+romantic+atmosphere&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:44:22,084 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:44:22,084 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:44:22,085 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-21 20:44:22,085 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204422.jpg
2025-07-21 20:44:22,085 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:44:24,463 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/5748514/pexels-photo-5748514.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 82670
2025-07-21 20:44:24,781 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204422.jpg
2025-07-21 20:44:24,782 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204422.jpg
2025-07-21 20:44:24,782 - controllers.article_controller - INFO - 第7张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204422.jpg
2025-07-21 20:44:24,782 - controllers.article_controller - INFO - 生成第8张配图，使用模型: pexels
2025-07-21 20:44:24,782 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 8/10
2025-07-21 20:44:24,783 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 8/10
2025-07-21 20:44:24,783 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:24,783 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:24,784 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:24,784 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:25,350 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第8张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:44:25,352 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:44:25,353 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:44:25,382 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D34110>
2025-07-21 20:44:25,383 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008D0E250> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:44:25,395 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CFEBD0>
2025-07-21 20:44:25,395 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:44:25,395 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:44:25,396 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:44:25,396 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:44:25,396 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:44:27,940 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'60552514-6708-95ce-91c5-135ca8585bd7'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'2534'), (b'req-arrive-time', b'1753101865451'), (b'resp-start-time', b'1753101867986'), (b'x-envoy-upstream-service-time', b'2533'), (b'set-cookie', b'acw_tc=60552514-6708-95ce-91c5-135ca8585bd7b129a046c2f757307e57a1bb7714bf49;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:44:27 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:44:27,940 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:44:27,940 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:44:27,941 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:44:27,941 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:44:27,941 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:44:27,941 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '60552514-6708-95ce-91c5-135ca8585bd7', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '2534', 'req-arrive-time': '1753101865451', 'resp-start-time': '1753101867986', 'x-envoy-upstream-service-time': '2533', 'set-cookie': 'acw_tc=60552514-6708-95ce-91c5-135ca8585bd7b129a046c2f757307e57a1bb7714bf49;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:44:27 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:44:27,941 - openai._base_client - DEBUG - request_id: 60552514-6708-95ce-91c5-135ca8585bd7
2025-07-21 20:44:27,942 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: romantic mood text message
2025-07-21 20:44:27,943 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:44:28,372 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:28,373 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:28,931 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=romantic+mood+text+message&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:44:28,932 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:44:28,932 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:44:28,932 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-21 20:44:28,932 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204428.jpg
2025-07-21 20:44:28,934 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:44:29,795 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/9174689/pexels-photo-9174689.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 103396
2025-07-21 20:44:29,824 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204428.jpg
2025-07-21 20:44:29,825 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204428.jpg
2025-07-21 20:44:29,825 - controllers.article_controller - INFO - 第8张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204428.jpg
2025-07-21 20:44:29,825 - controllers.article_controller - INFO - 生成第9张配图，使用模型: pexels
2025-07-21 20:44:29,825 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 9/10
2025-07-21 20:44:29,825 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 9/10
2025-07-21 20:44:29,825 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:29,825 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:29,826 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:29,827 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:30,360 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第9张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:44:30,361 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:44:30,361 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:44:30,376 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D35130>
2025-07-21 20:44:30,379 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008D0DD50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:44:30,394 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D34200>
2025-07-21 20:44:30,394 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:44:30,394 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:44:30,394 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:44:30,395 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:44:30,395 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:44:31,135 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'3a866b55-594a-9463-b29d-6010228057a4'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'727'), (b'req-arrive-time', b'1753101870452'), (b'resp-start-time', b'1753101871180'), (b'x-envoy-upstream-service-time', b'725'), (b'set-cookie', b'acw_tc=3a866b55-594a-9463-b29d-6010228057a43af7fd45c3912baf3962a6f5f6c3e3d4;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:44:31 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:44:31,135 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:44:31,135 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:44:31,135 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:44:31,135 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:44:31,135 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:44:31,136 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '3a866b55-594a-9463-b29d-6010228057a4', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '727', 'req-arrive-time': '1753101870452', 'resp-start-time': '1753101871180', 'x-envoy-upstream-service-time': '725', 'set-cookie': 'acw_tc=3a866b55-594a-9463-b29d-6010228057a43af7fd45c3912baf3962a6f5f6c3e3d4;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:44:31 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:44:31,136 - openai._base_client - DEBUG - request_id: 3a866b55-594a-9463-b29d-6010228057a4
2025-07-21 20:44:31,137 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: romantic mood playful text
2025-07-21 20:44:31,138 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:44:31,641 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:31,641 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:32,179 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=romantic+mood+playful+text&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:44:32,181 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:44:32,182 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:44:32,182 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-21 20:44:32,182 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204432.jpg
2025-07-21 20:44:32,183 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:44:33,011 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/5605067/pexels-photo-5605067.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 50760
2025-07-21 20:44:33,041 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204432.jpg
2025-07-21 20:44:33,042 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204432.jpg
2025-07-21 20:44:33,042 - controllers.article_controller - INFO - 第9张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204432.jpg
2025-07-21 20:44:33,042 - controllers.article_controller - INFO - 生成第10张配图，使用模型: pexels
2025-07-21 20:44:33,042 - services.image_service - INFO - 开始生成文章配图，标题: 句句都不黄，句句都很撩, 生图模型: pexels, AI模型: dashscope, 图片索引: 10/10
2025-07-21 20:44:33,042 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 句句都不黄，句句都很撩, AI模型: dashscope, 图片索引: 10/10
2025-07-21 20:44:33,043 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:33,043 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:33,044 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:44:33,044 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:33,565 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n句句都不黄，句句都很撩\n描述: 在这个快节奏的时代，用一句话传递情绪和撩感成为新潮流。文章精选多句既不失格调又充满魅力的“神文案”，让你在轻松幽默中感受语言的力量，句句不黄，却句句撩人心弦，带来不一样的情绪共鸣与社交灵感。\n文章内容预览: ```html 在这个快节奏、高压力的时代，我们越来越习惯用“一句话”来表达情绪、态度，甚至是“撩”。 不是那种赤裸裸的“撩”，而是——句句都不黄，句句都很撩。...\n\n图片信息：\n- 这是第10张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 20:44:33,566 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 20:44:33,567 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 20:44:33,580 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D35D00>
2025-07-21 20:44:33,580 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008D0DDD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 20:44:33,595 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D34410>
2025-07-21 20:44:33,595 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 20:44:33,595 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 20:44:33,595 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 20:44:33,595 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 20:44:33,595 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 20:44:34,212 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'3d3983a7-2410-9270-81cc-9e1adc6090f8'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'603'), (b'req-arrive-time', b'1753101873653'), (b'resp-start-time', b'1753101874256'), (b'x-envoy-upstream-service-time', b'602'), (b'set-cookie', b'acw_tc=3d3983a7-2410-9270-81cc-9e1adc6090f852f9d003cb9f5dfe1f9d14001a142a7f;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 12:44:34 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 20:44:34,213 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 20:44:34,213 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 20:44:34,213 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 20:44:34,213 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 20:44:34,213 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 20:44:34,213 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '3d3983a7-2410-9270-81cc-9e1adc6090f8', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '603', 'req-arrive-time': '1753101873653', 'resp-start-time': '1753101874256', 'x-envoy-upstream-service-time': '602', 'set-cookie': 'acw_tc=3d3983a7-2410-9270-81cc-9e1adc6090f852f9d003cb9f5dfe1f9d14001a142a7f;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 12:44:34 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 20:44:34,214 - openai._base_client - DEBUG - request_id: 3d3983a7-2410-9270-81cc-9e1adc6090f8
2025-07-21 20:44:34,214 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: romantic mood playful text
2025-07-21 20:44:34,215 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 20:44:36,179 - httpcore.connection - DEBUG - close.started
2025-07-21 20:44:36,179 - httpcore.connection - DEBUG - close.complete
2025-07-21 20:44:36,180 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=romantic+mood+playful+text&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 20:44:36,181 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 20:44:36,181 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 20:44:36,181 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-21 20:44:36,181 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204436.jpg
2025-07-21 20:44:36,182 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 20:44:36,912 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/6675836/pexels-photo-6675836.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 169537
2025-07-21 20:44:36,975 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204436.jpg
2025-07-21 20:44:36,976 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_句句都不黄句句都很撩_20250721_204436.jpg
2025-07-21 20:44:36,976 - controllers.article_controller - INFO - 第10张配图处理完成，使用本地路径: cache\article_pexels_句句都不黄句句都很撩_20250721_204436.jpg
2025-07-21 20:44:36,977 - controllers.article_controller - INFO - 在第59段后插入配图
2025-07-21 20:44:36,977 - controllers.article_controller - INFO - 在第53段后插入配图
2025-07-21 20:44:36,977 - controllers.article_controller - INFO - 在第47段后插入配图
2025-07-21 20:44:36,977 - controllers.article_controller - INFO - 在第41段后插入配图
2025-07-21 20:44:36,977 - controllers.article_controller - INFO - 在第35段后插入配图
2025-07-21 20:44:36,977 - controllers.article_controller - INFO - 在第30段后插入配图
2025-07-21 20:44:36,978 - controllers.article_controller - INFO - 在第24段后插入配图
2025-07-21 20:44:36,978 - controllers.article_controller - INFO - 在第18段后插入配图
2025-07-21 20:44:36,978 - controllers.article_controller - INFO - 在第12段后插入配图
2025-07-21 20:44:36,978 - controllers.article_controller - INFO - 在第6段后插入配图
2025-07-21 20:44:36,978 - controllers.article_controller - INFO - 配图处理完成，共插入10张图片
2025-07-21 20:44:36,981 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_句句都不黄句句都很撩_20250721_204436.html
2025-07-21 20:44:36,981 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 20:44:37,860 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 20:44:37,861 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 12643
2025-07-21 20:44:37,865 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 20:44:37,865 - controllers.article_controller - INFO - 内容清理完成，移除了 12 个字符，清理后长度: 12643
2025-07-21 20:44:37,868 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_句句都不黄句句都很撩_20250721_204437.html
2025-07-21 20:44:37,868 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=句句都不黄，句句都很撩, 内容前100字=<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang S, 图片数=12
2025-07-21 20:44:37,869 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:37,870 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:44:37,874 - services.history_service - INFO - 添加生成历史记录: 句句都不黄，句句都很撩
2025-07-21 20:44:37,874 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 20:44:37,874 - controllers.article_controller - INFO - 生成结果预览: 标题=句句都不黄，句句都很撩, 内容长度=12643, 配图数量=10
2025-07-21 20:44:37,874 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 20:44:37,888 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:44:37,888 - root - INFO - 获取生成历史请求
2025-07-21 20:44:37,889 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204358.jpg
2025-07-21 20:44:37,890 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204358.jpg
2025-07-21 20:44:37,891 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204401.jpg
2025-07-21 20:44:37,891 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:44:37,892 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204401.jpg
2025-07-21 20:44:37,893 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204407.jpg
2025-07-21 20:44:37,894 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204358.jpg HTTP/1.1" 200 -
2025-07-21 20:44:37,894 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204407.jpg
2025-07-21 20:44:37,894 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204401.jpg HTTP/1.1" 200 -
2025-07-21 20:44:37,895 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204407.jpg HTTP/1.1" 200 -
2025-07-21 20:44:37,912 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204411.jpg
2025-07-21 20:44:37,913 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204411.jpg
2025-07-21 20:44:37,913 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204414.jpg
2025-07-21 20:44:37,913 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204414.jpg
2025-07-21 20:44:37,914 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204411.jpg HTTP/1.1" 200 -
2025-07-21 20:44:37,915 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204414.jpg HTTP/1.1" 200 -
2025-07-21 20:44:37,924 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204418.jpg
2025-07-21 20:44:37,925 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204422.jpg
2025-07-21 20:44:37,925 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204418.jpg
2025-07-21 20:44:37,925 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204422.jpg
2025-07-21 20:44:37,926 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204418.jpg HTTP/1.1" 200 -
2025-07-21 20:44:37,927 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204422.jpg HTTP/1.1" 200 -
2025-07-21 20:44:37,933 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204428.jpg
2025-07-21 20:44:37,934 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204428.jpg
2025-07-21 20:44:37,936 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204428.jpg HTTP/1.1" 200 -
2025-07-21 20:44:37,939 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204432.jpg
2025-07-21 20:44:37,940 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204436.jpg
2025-07-21 20:44:37,940 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204432.jpg
2025-07-21 20:44:37,940 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204436.jpg
2025-07-21 20:44:37,943 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204432.jpg HTTP/1.1" 200 -
2025-07-21 20:44:37,943 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:44:37] "GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204436.jpg HTTP/1.1" 200 -
2025-07-21 20:45:17,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:45:17,192 - root - INFO - 获取生成历史请求
2025-07-21 20:45:17,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:45:17,192 - root - INFO - 获取发布历史请求
2025-07-21 20:45:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:45:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:45:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:45:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:45:59,978 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:45:59,980 - root - INFO - 获取生成历史请求
2025-07-21 20:45:59,990 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:45:59,995 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:45:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:45:59,995 - root - INFO - 获取发布历史请求
2025-07-21 20:45:59,997 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:45:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:46:19,115 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:46:19,116 - root - INFO - 获取生成历史请求
2025-07-21 20:46:19,117 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:46:19,117 - root - INFO - 获取发布历史请求
2025-07-21 20:46:19,118 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:46:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:46:19,119 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:46:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:46:49,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:46:49,183 - root - INFO - 获取生成历史请求
2025-07-21 20:46:49,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:46:49,184 - root - INFO - 获取发布历史请求
2025-07-21 20:46:49,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:46:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:46:49,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:46:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:47:19,127 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:47:19,127 - root - INFO - 获取生成历史请求
2025-07-21 20:47:19,128 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:47:19,128 - root - INFO - 获取发布历史请求
2025-07-21 20:47:19,129 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:47:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:47:19,130 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:47:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:47:49,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:47:49,182 - root - INFO - 获取生成历史请求
2025-07-21 20:47:49,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:47:49,182 - root - INFO - 获取发布历史请求
2025-07-21 20:47:49,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:47:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:47:49,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:47:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:48:19,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:48:19,183 - root - INFO - 获取生成历史请求
2025-07-21 20:48:19,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:48:19,184 - root - INFO - 获取发布历史请求
2025-07-21 20:48:19,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:48:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:48:19,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:48:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:48:49,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:48:49,179 - root - INFO - 获取生成历史请求
2025-07-21 20:48:49,179 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:48:49,180 - root - INFO - 获取发布历史请求
2025-07-21 20:48:49,180 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:48:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:48:49,181 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:48:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:50:17,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:50:17,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:50:17,186 - root - INFO - 获取生成历史请求
2025-07-21 20:50:17,187 - root - INFO - 获取发布历史请求
2025-07-21 20:50:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:50:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:50:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:50:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:51:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:51:17,185 - root - INFO - 获取生成历史请求
2025-07-21 20:51:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:51:17,186 - root - INFO - 获取发布历史请求
2025-07-21 20:51:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:51:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:51:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:51:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:51:55,693 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:51:55,695 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:51:55,695 - root - INFO - 获取生成历史请求
2025-07-21 20:51:55,695 - root - INFO - 获取发布历史请求
2025-07-21 20:51:55,698 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:51:55] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:51:55,699 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:51:55] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:52:19,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:52:19,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:52:19,182 - root - INFO - 获取生成历史请求
2025-07-21 20:52:19,183 - root - INFO - 获取发布历史请求
2025-07-21 20:52:19,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:52:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:52:19,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:52:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:52:49,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:52:49,185 - root - INFO - 获取生成历史请求
2025-07-21 20:52:49,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:52:49,186 - root - INFO - 获取发布历史请求
2025-07-21 20:52:49,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:52:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:52:49,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:52:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:53:19,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:53:19,189 - root - INFO - 获取生成历史请求
2025-07-21 20:53:19,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:53:19,190 - root - INFO - 获取发布历史请求
2025-07-21 20:53:19,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:53:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:53:19,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:53:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:53:55,551 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:53:55,553 - root - INFO - 获取生成历史请求
2025-07-21 20:53:55,560 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:53:55,563 - root - INFO - 获取发布历史请求
2025-07-21 20:53:55,566 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:53:55] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:53:55,567 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:53:55] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:54:19,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:54:19,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:54:19,183 - root - INFO - 获取生成历史请求
2025-07-21 20:54:19,183 - root - INFO - 获取发布历史请求
2025-07-21 20:54:19,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:54:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:54:19,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:54:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:54:49,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:54:49,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:54:49,189 - root - INFO - 获取生成历史请求
2025-07-21 20:54:49,189 - root - INFO - 获取发布历史请求
2025-07-21 20:54:49,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:54:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:54:49,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:54:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:55:45,015 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:55:45,018 - root - INFO - 获取生成历史请求
2025-07-21 20:55:45,020 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:55:45,029 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:55:45] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:55:45,031 - root - INFO - 获取发布历史请求
2025-07-21 20:55:45,039 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:55:45] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:55:49,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:55:49,187 - root - INFO - 获取生成历史请求
2025-07-21 20:55:49,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:55:49,188 - root - INFO - 获取发布历史请求
2025-07-21 20:55:49,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:55:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:55:49,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:55:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:56:19,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:56:19,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:56:19,188 - root - INFO - 获取生成历史请求
2025-07-21 20:56:19,189 - root - INFO - 获取发布历史请求
2025-07-21 20:56:19,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:56:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:56:19,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:56:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:56:49,119 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:56:49,119 - root - INFO - 获取生成历史请求
2025-07-21 20:56:49,120 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:56:49,120 - root - INFO - 获取发布历史请求
2025-07-21 20:56:49,121 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:56:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:56:49,121 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:56:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:57:19,121 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:57:19,122 - root - INFO - 获取生成历史请求
2025-07-21 20:57:19,122 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:57:19,122 - root - INFO - 获取发布历史请求
2025-07-21 20:57:19,123 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:57:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:57:19,123 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:57:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:57:49,122 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:57:49,122 - root - INFO - 获取生成历史请求
2025-07-21 20:57:49,123 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:57:49,124 - root - INFO - 获取发布历史请求
2025-07-21 20:57:49,125 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:57:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:57:49,126 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:57:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:58:19,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:58:19,181 - root - INFO - 获取生成历史请求
2025-07-21 20:58:19,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:58:19,184 - root - INFO - 获取发布历史请求
2025-07-21 20:58:19,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:58:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:58:19,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:58:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:58:49,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:58:49,188 - root - INFO - 获取生成历史请求
2025-07-21 20:58:49,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:58:49,189 - root - INFO - 获取发布历史请求
2025-07-21 20:58:49,527 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:58:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:58:49,527 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:58:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:59:19,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:59:19,187 - root - INFO - 获取生成历史请求
2025-07-21 20:59:19,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:59:19,188 - root - INFO - 获取发布历史请求
2025-07-21 20:59:19,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:59:19,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:59:45,153 - root - INFO - 应用目录创建完成
2025-07-21 20:59:45,154 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:59:45,154 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 20:59:45,154 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 20:59:45,155 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 20:59:45,155 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 20:59:45,155 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 20:59:45,155 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 20:59:45,155 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 20:59:45,155 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 20:59:45,156 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 20:59:45,156 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 20:59:45,156 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 20:59:45,156 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 20:59:46,058 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 20:59:46,058 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 20:59:48,612 - root - INFO - 请求: GET /
2025-07-21 20:59:48,614 - root - INFO - 访问主页面
2025-07-21 20:59:48,668 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:48] "GET / HTTP/1.1" 200 -
2025-07-21 20:59:48,744 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 20:59:48,748 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 20:59:48,749 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 20:59:48,965 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:48] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 20:59:48,966 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:48] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 20:59:48,968 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:48] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 20:59:49,065 - root - INFO - 请求: GET /api/get_ip
2025-07-21 20:59:49,066 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:49] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 20:59:49,081 - root - INFO - 请求: GET /api/style-templates
2025-07-21 20:59:49,102 - root - INFO - 请求: GET /api/config
2025-07-21 20:59:49,102 - root - INFO - 处理配置请求: GET
2025-07-21 20:59:49,102 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 20:59:49,102 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:59:49,103 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 20:59:49,104 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:49] "GET /api/config HTTP/1.1" 200 -
2025-07-21 20:59:49,111 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:49] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 20:59:49,124 - root - INFO - 请求: GET /api/generation-history
2025-07-21 20:59:49,125 - root - INFO - 获取生成历史请求
2025-07-21 20:59:49,126 - root - INFO - 请求: GET /api/publish-history
2025-07-21 20:59:49,126 - root - INFO - 获取发布历史请求
2025-07-21 20:59:49,127 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 20:59:49,128 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 20:59:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 20:59:49,397 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 20:59:49,397 - root - INFO - 获取Gemini可用模型列表
2025-07-21 20:59:49,398 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 20:59:49,398 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:59:49,399 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 20:59:49,399 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 20:59:51,862 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 20:59:51,863 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 20:59:51,864 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 21:00:02,050 - root - INFO - 请求: GET /api/local_version
2025-07-21 21:00:02,301 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:00:02] "GET /api/local_version HTTP/1.1" 200 -
2025-07-21 21:00:19,201 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:00:19,202 - root - INFO - 获取生成历史请求
2025-07-21 21:00:19,204 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:00:19,204 - root - INFO - 获取发布历史请求
2025-07-21 21:00:19,206 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:00:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:00:19,207 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:00:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:00:49,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:00:49,191 - root - INFO - 获取生成历史请求
2025-07-21 21:00:49,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:00:49,192 - root - INFO - 获取发布历史请求
2025-07-21 21:00:49,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:00:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:00:49,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:00:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:01:16,075 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 21:01:16,076 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 21:01:16,076 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 21:01:16,076 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:01:16] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 21:01:16,091 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 21:01:16,091 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 21:01:16,091 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 21:01:16,092 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:01:16,092 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:01:16,092 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 21:01:16,092 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 21:01:16,105 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 21:01:16,185 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 21:01:16,186 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 21:01:16,187 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 21:01:16,187 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 21:01:16,187 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 21:01:16,188 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 21:01:16,188 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 21:01:16,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:01:16] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 21:01:16,208 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 21:01:16,208 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 21:01:16,209 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 21:01:16,209 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:01:16,210 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:01:16,210 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 21:01:16,880 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000009CD2840>, 'json_data': None}
2025-07-21 21:01:16,937 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 21:01:16,937 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:01:16,956 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009CECDA0>
2025-07-21 21:01:16,957 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009CC8BD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:01:16,986 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BF9FA0>
2025-07-21 21:01:16,986 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 21:01:16,986 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:01:16,987 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 21:01:16,987 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:01:16,987 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 21:01:17,036 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1aa1f6b5-b2ad-9abd-9d0c-7168388c4cba'), (b'content-type', b'application/json'), (b'req-cost-time', b'37'), (b'req-arrive-time', b'1753102877057'), (b'resp-start-time', b'1753102877095'), (b'x-envoy-upstream-service-time', b'36'), (b'set-cookie', b'acw_tc=1aa1f6b5-b2ad-9abd-9d0c-7168388c4cba29b0246ca83de9e6a41ca46899c9c11a;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:01:16 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:01:17,037 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 21:01:17,037 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 21:01:17,037 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:01:17,038 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:01:17,038 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:01:17,038 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1aa1f6b5-b2ad-9abd-9d0c-7168388c4cba', 'content-type': 'application/json', 'req-cost-time': '37', 'req-arrive-time': '1753102877057', 'resp-start-time': '1753102877095', 'x-envoy-upstream-service-time': '36', 'set-cookie': 'acw_tc=1aa1f6b5-b2ad-9abd-9d0c-7168388c4cba29b0246ca83de9e6a41ca46899c9c11a;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:01:16 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:01:17,038 - openai._base_client - DEBUG - request_id: 1aa1f6b5-b2ad-9abd-9d0c-7168388c4cba
2025-07-21 21:01:17,042 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 21:01:17,042 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 21:01:17,042 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 21:01:17,043 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 21:01:17,043 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 21:01:17,043 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 21:01:17,043 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 21:01:17,044 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:01:17] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 21:01:17,068 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:01:17,068 - root - INFO - 获取生成历史请求
2025-07-21 21:01:17,071 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:01:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:01:17,085 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:01:17,085 - root - INFO - 获取发布历史请求
2025-07-21 21:01:17,086 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:01:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:01:19,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:01:19,188 - root - INFO - 获取生成历史请求
2025-07-21 21:01:19,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:01:19,189 - root - INFO - 获取发布历史请求
2025-07-21 21:01:19,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:01:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:01:19,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:01:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:01:49,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:01:49,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:01:49,186 - root - INFO - 获取生成历史请求
2025-07-21 21:01:49,186 - root - INFO - 获取发布历史请求
2025-07-21 21:01:49,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:01:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:01:49,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:01:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:02:19,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:02:19,184 - root - INFO - 获取生成历史请求
2025-07-21 21:02:19,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:02:19,185 - root - INFO - 获取发布历史请求
2025-07-21 21:02:19,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:02:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:02:19,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:02:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:02:49,176 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:02:49,177 - root - INFO - 获取生成历史请求
2025-07-21 21:02:49,177 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:02:49,177 - root - INFO - 获取发布历史请求
2025-07-21 21:02:49,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:02:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:02:49,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:02:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:04:08,334 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:04:08,336 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:04:08,337 - root - INFO - 获取生成历史请求
2025-07-21 21:04:08,338 - root - INFO - 获取发布历史请求
2025-07-21 21:04:08,341 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:04:08] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:04:08,341 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:04:08] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:04:10,589 - root - INFO - 请求: GET /api/local_version
2025-07-21 21:04:10,811 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:04:10] "GET /api/local_version HTTP/1.1" 200 -
2025-07-21 21:04:20,953 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:04:20,953 - root - INFO - 获取生成历史请求
2025-07-21 21:04:20,955 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:04:20] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:04:20,957 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:04:20,957 - root - INFO - 获取发布历史请求
2025-07-21 21:04:20,959 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:04:20] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:04:49,194 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:04:49,195 - root - INFO - 获取生成历史请求
2025-07-21 21:04:49,197 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:04:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:04:49,199 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:04:49,199 - root - INFO - 获取发布历史请求
2025-07-21 21:04:49,201 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:04:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:05:19,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:05:19,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:05:19,189 - root - INFO - 获取生成历史请求
2025-07-21 21:05:19,189 - root - INFO - 获取发布历史请求
2025-07-21 21:05:19,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:05:19] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:05:19,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:05:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:06:17,191 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:06:17,192 - root - INFO - 获取生成历史请求
2025-07-21 21:06:17,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:06:17,192 - root - INFO - 获取发布历史请求
2025-07-21 21:06:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:06:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:06:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:06:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:07:15,113 - root - INFO - 应用目录创建完成
2025-07-21 21:07:15,114 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:07:15,115 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 21:07:15,115 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 21:07:15,115 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 21:07:15,115 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-21 21:07:15,116 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:07:15,116 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-21 21:07:15,116 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-21 21:07:15,116 - services.image_service - INFO - 图像服务初始化完成
2025-07-21 21:07:15,117 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-21 21:07:15,117 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-21 21:07:15,118 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-21 21:07:15,118 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-21 21:07:16,016 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-21 21:07:16,016 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-21 21:07:31,245 - root - INFO - 请求: GET /
2025-07-21 21:07:31,245 - root - INFO - 访问主页面
2025-07-21 21:07:31,262 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:07:31] "GET / HTTP/1.1" 200 -
2025-07-21 21:07:31,337 - root - INFO - 请求: GET /static/css/layout.css
2025-07-21 21:07:31,339 - root - INFO - 请求: GET /static/css/components.css
2025-07-21 21:07:31,341 - root - INFO - 请求: GET /static/js/app.js
2025-07-21 21:07:31,539 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:07:31] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-21 21:07:31,554 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:07:31] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-21 21:07:31,555 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:07:31] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-21 21:07:31,645 - root - INFO - 请求: GET /api/get_ip
2025-07-21 21:07:31,646 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:07:31] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-21 21:07:31,668 - root - INFO - 请求: GET /api/style-templates
2025-07-21 21:07:31,672 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:07:31] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-21 21:07:31,689 - root - INFO - 请求: GET /api/config
2025-07-21 21:07:31,690 - root - INFO - 处理配置请求: GET
2025-07-21 21:07:31,690 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-21 21:07:31,691 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:07:31,691 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-21 21:07:31,692 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:07:31] "GET /api/config HTTP/1.1" 200 -
2025-07-21 21:07:31,901 - root - INFO - 请求: GET /api/gemini-models
2025-07-21 21:07:31,902 - root - INFO - 获取Gemini可用模型列表
2025-07-21 21:07:31,902 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-21 21:07:31,903 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:07:31,903 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:07:31,903 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-21 21:07:33,154 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-21 21:07:33,154 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-21 21:07:33,155 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-21 21:07:36,549 - root - INFO - 请求: GET /api/local_version
2025-07-21 21:07:36,752 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:07:36] "GET /api/local_version HTTP/1.1" 200 -
2025-07-21 21:08:01,702 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:08:01,702 - root - INFO - 获取生成历史请求
2025-07-21 21:08:01,703 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:08:01,704 - root - INFO - 获取发布历史请求
2025-07-21 21:08:01,705 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:08:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:08:01,705 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:08:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:08:32,181 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:08:32,182 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:08:32,182 - root - INFO - 获取生成历史请求
2025-07-21 21:08:32,182 - root - INFO - 获取发布历史请求
2025-07-21 21:08:32,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:08:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:08:32,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:08:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:09:02,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:09:02,188 - root - INFO - 获取生成历史请求
2025-07-21 21:09:02,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:09:02,189 - root - INFO - 获取发布历史请求
2025-07-21 21:09:02,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:09:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:09:02,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:09:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:09:32,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:09:32,186 - root - INFO - 获取生成历史请求
2025-07-21 21:09:32,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:09:32,187 - root - INFO - 获取发布历史请求
2025-07-21 21:09:32,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:09:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:09:32,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:09:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:10:01,700 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:10:01,700 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:10:01,700 - root - INFO - 获取生成历史请求
2025-07-21 21:10:01,700 - root - INFO - 获取发布历史请求
2025-07-21 21:10:01,701 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:10:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:10:01,701 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:10:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:10:21,526 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-21 21:10:21,527 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-21 21:10:21,527 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-21 21:10:21,527 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:10:21] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-21 21:10:21,544 - root - INFO - 请求: GET /api/deepseek-models
2025-07-21 21:10:21,544 - root - INFO - 获取DeepSeek可用模型列表
2025-07-21 21:10:21,544 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 21:10:21,545 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:10:21,545 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:10:21,546 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-21 21:10:21,546 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-21 21:10:21,549 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-21 21:10:21,657 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-21 21:10:21,658 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-21 21:10:21,659 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-21 21:10:21,659 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-21 21:10:21,659 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-21 21:10:21,659 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-21 21:10:21,660 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-21 21:10:21,660 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:10:21] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-21 21:10:21,668 - root - INFO - 请求: GET /api/dashscope-models
2025-07-21 21:10:21,668 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-21 21:10:21,669 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-21 21:10:21,669 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:10:21,669 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:10:21,669 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-21 21:10:22,230 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000008CA27A0>, 'json_data': None}
2025-07-21 21:10:22,276 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-21 21:10:22,276 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:10:22,295 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CB4F20>
2025-07-21 21:10:22,295 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008C906D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:10:22,312 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CB4E30>
2025-07-21 21:10:22,312 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-21 21:10:22,312 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:10:22,313 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-21 21:10:22,313 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:10:22,313 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-21 21:10:22,348 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'e0ad2e3b-2418-9abb-904a-887419bb57ea'), (b'content-type', b'application/json'), (b'req-cost-time', b'26'), (b'req-arrive-time', b'1753103422391'), (b'resp-start-time', b'1753103422417'), (b'x-envoy-upstream-service-time', b'25'), (b'set-cookie', b'acw_tc=e0ad2e3b-2418-9abb-904a-887419bb57ead2b39f18568a6217f51bf9b1e8b3cee0;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:10:21 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:10:22,349 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-21 21:10:22,349 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-21 21:10:22,350 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:10:22,350 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:10:22,350 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:10:22,350 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'e0ad2e3b-2418-9abb-904a-887419bb57ea', 'content-type': 'application/json', 'req-cost-time': '26', 'req-arrive-time': '1753103422391', 'resp-start-time': '1753103422417', 'x-envoy-upstream-service-time': '25', 'set-cookie': 'acw_tc=e0ad2e3b-2418-9abb-904a-887419bb57ead2b39f18568a6217f51bf9b1e8b3cee0;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:10:21 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:10:22,350 - openai._base_client - DEBUG - request_id: e0ad2e3b-2418-9abb-904a-887419bb57ea
2025-07-21 21:10:22,353 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-21 21:10:22,354 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-21 21:10:22,354 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-21 21:10:22,354 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-21 21:10:22,354 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-21 21:10:22,354 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-21 21:10:22,355 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-21 21:10:22,355 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:10:22] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-21 21:10:22,364 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:10:22,365 - root - INFO - 获取生成历史请求
2025-07-21 21:10:22,366 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:10:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:10:22,377 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:10:22,378 - root - INFO - 获取发布历史请求
2025-07-21 21:10:22,379 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:10:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:10:32,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:10:32,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:10:32,185 - root - INFO - 获取生成历史请求
2025-07-21 21:10:32,185 - root - INFO - 获取发布历史请求
2025-07-21 21:10:32,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:10:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:10:32,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:10:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:11:02,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:11:02,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:11:02,188 - root - INFO - 获取生成历史请求
2025-07-21 21:11:02,189 - root - INFO - 获取发布历史请求
2025-07-21 21:11:02,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:11:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:11:02,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:11:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:12:12,516 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:12:12,517 - root - INFO - 获取生成历史请求
2025-07-21 21:12:12,519 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:12:12,521 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:12:12] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:12:12,521 - root - INFO - 获取发布历史请求
2025-07-21 21:12:12,525 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:12:12] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:12:32,177 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:12:32,178 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:12:32,178 - root - INFO - 获取生成历史请求
2025-07-21 21:12:32,178 - root - INFO - 获取发布历史请求
2025-07-21 21:12:32,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:12:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:12:32,179 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:12:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:13:02,179 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:13:02,179 - root - INFO - 获取生成历史请求
2025-07-21 21:13:02,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:13:02,181 - root - INFO - 获取发布历史请求
2025-07-21 21:13:02,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:13:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:13:02,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:13:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:14:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:14:17,184 - root - INFO - 获取生成历史请求
2025-07-21 21:14:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:14:17,185 - root - INFO - 获取发布历史请求
2025-07-21 21:14:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:14:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:14:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:14:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:15:17,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:15:17,191 - root - INFO - 获取生成历史请求
2025-07-21 21:15:17,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:15:17,192 - root - INFO - 获取发布历史请求
2025-07-21 21:15:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:15:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:15:17,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:15:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:16:09,128 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:16:09,129 - root - INFO - 获取生成历史请求
2025-07-21 21:16:09,130 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:16:09,130 - root - INFO - 获取发布历史请求
2025-07-21 21:16:09,132 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:16:09] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:16:09,132 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:16:09] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:16:32,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:16:32,188 - root - INFO - 获取生成历史请求
2025-07-21 21:16:32,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:16:32,188 - root - INFO - 获取发布历史请求
2025-07-21 21:16:32,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:16:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:16:32,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:16:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:17:02,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:17:02,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:17:02,188 - root - INFO - 获取生成历史请求
2025-07-21 21:17:02,188 - root - INFO - 获取发布历史请求
2025-07-21 21:17:02,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:17:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:17:02,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:17:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:17:42,007 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:17:42,008 - root - INFO - 获取生成历史请求
2025-07-21 21:17:42,009 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:17:42,009 - root - INFO - 获取发布历史请求
2025-07-21 21:17:42,012 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:17:42] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:17:42,014 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:17:42] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:18:02,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:18:02,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:18:02,184 - root - INFO - 获取生成历史请求
2025-07-21 21:18:02,184 - root - INFO - 获取发布历史请求
2025-07-21 21:18:02,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:18:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:18:02,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:18:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:18:32,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:18:32,184 - root - INFO - 获取生成历史请求
2025-07-21 21:18:32,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:18:32,185 - root - INFO - 获取发布历史请求
2025-07-21 21:18:32,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:18:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:18:32,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:18:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:19:07,456 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:19:07,457 - root - INFO - 获取生成历史请求
2025-07-21 21:19:07,458 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:19:07,458 - root - INFO - 获取发布历史请求
2025-07-21 21:19:07,460 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:19:07] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:19:07,461 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:19:07] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:19:32,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:19:32,185 - root - INFO - 获取生成历史请求
2025-07-21 21:19:32,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:19:32,186 - root - INFO - 获取发布历史请求
2025-07-21 21:19:32,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:19:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:19:32,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:19:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:20:02,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:20:02,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:20:02,190 - root - INFO - 获取生成历史请求
2025-07-21 21:20:02,190 - root - INFO - 获取发布历史请求
2025-07-21 21:20:02,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:20:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:20:02,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:20:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:21:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:21:17,185 - root - INFO - 获取生成历史请求
2025-07-21 21:21:17,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:21:17,186 - root - INFO - 获取发布历史请求
2025-07-21 21:21:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:21:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:21:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:21:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:22:17,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:22:17,189 - root - INFO - 获取生成历史请求
2025-07-21 21:22:17,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:22:17,191 - root - INFO - 获取发布历史请求
2025-07-21 21:22:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:22:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:22:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:22:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:22:32,193 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:22:32,193 - root - INFO - 获取生成历史请求
2025-07-21 21:22:32,194 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:22:32,194 - root - INFO - 获取发布历史请求
2025-07-21 21:22:32,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:22:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:22:32,196 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:22:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:23:02,192 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:23:02,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:23:02,193 - root - INFO - 获取生成历史请求
2025-07-21 21:23:02,193 - root - INFO - 获取发布历史请求
2025-07-21 21:23:02,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:23:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:23:02,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:23:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:23:32,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:23:32,184 - root - INFO - 获取生成历史请求
2025-07-21 21:23:32,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:23:32,185 - root - INFO - 获取发布历史请求
2025-07-21 21:23:32,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:23:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:23:32,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:23:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:24:02,182 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:24:02,183 - root - INFO - 获取生成历史请求
2025-07-21 21:24:02,183 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:24:02,183 - root - INFO - 获取发布历史请求
2025-07-21 21:24:02,184 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:24:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:24:02,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:24:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:24:32,190 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:24:32,191 - root - INFO - 获取生成历史请求
2025-07-21 21:24:32,192 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:24:32,193 - root - INFO - 获取发布历史请求
2025-07-21 21:24:32,194 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:24:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:24:32,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:24:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:25:02,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:25:02,183 - root - INFO - 获取生成历史请求
2025-07-21 21:25:02,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:25:02,185 - root - INFO - 获取发布历史请求
2025-07-21 21:25:02,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:25:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:25:02,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:25:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:26:17,176 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:26:17,176 - root - INFO - 获取生成历史请求
2025-07-21 21:26:17,176 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:26:17,176 - root - INFO - 获取发布历史请求
2025-07-21 21:26:17,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:26:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:26:17,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:26:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:27:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:27:17,186 - root - INFO - 获取生成历史请求
2025-07-21 21:27:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:27:17,187 - root - INFO - 获取发布历史请求
2025-07-21 21:27:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:27:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:27:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:27:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:28:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:28:17,184 - root - INFO - 获取生成历史请求
2025-07-21 21:28:17,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:28:17,184 - root - INFO - 获取发布历史请求
2025-07-21 21:28:17,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:28:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:28:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:28:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:29:17,195 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:29:17,196 - root - INFO - 获取生成历史请求
2025-07-21 21:29:17,196 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:29:17,197 - root - INFO - 获取发布历史请求
2025-07-21 21:29:17,198 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:29:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:29:17,199 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:29:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:30:17,192 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:30:17,193 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:30:17,194 - root - INFO - 获取生成历史请求
2025-07-21 21:30:17,194 - root - INFO - 获取发布历史请求
2025-07-21 21:30:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:30:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:30:17,195 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:30:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:31:17,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:31:17,186 - root - INFO - 获取生成历史请求
2025-07-21 21:31:17,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:31:17,187 - root - INFO - 获取发布历史请求
2025-07-21 21:31:17,188 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:31:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:31:17,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:31:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:32:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:32:17,189 - root - INFO - 获取生成历史请求
2025-07-21 21:32:17,189 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:32:17,190 - root - INFO - 获取发布历史请求
2025-07-21 21:32:17,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:32:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:32:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:32:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:33:10,736 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:33:10,737 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:33:10,737 - root - INFO - 获取生成历史请求
2025-07-21 21:33:10,737 - root - INFO - 获取发布历史请求
2025-07-21 21:33:10,738 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:33:10] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:33:10,739 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:33:10] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:33:31,699 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:33:31,699 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:33:31,699 - root - INFO - 获取生成历史请求
2025-07-21 21:33:31,699 - root - INFO - 获取发布历史请求
2025-07-21 21:33:31,700 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:33:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:33:31,700 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:33:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:34:02,185 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:34:02,185 - root - INFO - 获取生成历史请求
2025-07-21 21:34:02,186 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:34:02,186 - root - INFO - 获取发布历史请求
2025-07-21 21:34:02,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:34:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:34:02,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:34:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:34:32,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:34:32,183 - root - INFO - 获取生成历史请求
2025-07-21 21:34:32,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:34:32,184 - root - INFO - 获取发布历史请求
2025-07-21 21:34:32,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:34:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:34:32,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:34:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:35:17,189 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:35:17,190 - root - INFO - 获取生成历史请求
2025-07-21 21:35:17,191 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:35:17,191 - root - INFO - 获取发布历史请求
2025-07-21 21:35:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:35:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:35:17,193 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:35:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:36:17,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:36:17,189 - root - INFO - 获取生成历史请求
2025-07-21 21:36:17,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:36:17,191 - root - INFO - 获取发布历史请求
2025-07-21 21:36:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:36:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:36:17,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:36:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:37:17,183 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:37:17,184 - root - INFO - 获取生成历史请求
2025-07-21 21:37:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:37:17,185 - root - INFO - 获取发布历史请求
2025-07-21 21:37:17,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:37:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:37:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:37:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:38:17,187 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:38:17,187 - root - INFO - 获取生成历史请求
2025-07-21 21:38:17,188 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:38:17,188 - root - INFO - 获取发布历史请求
2025-07-21 21:38:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:38:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:38:17,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:38:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:47:12,082 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:47:12,082 - root - INFO - 获取生成历史请求
2025-07-21 21:47:12,083 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:47:12,083 - root - INFO - 获取发布历史请求
2025-07-21 21:47:12,084 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:47:12] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:47:12,085 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:47:12] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:47:32,176 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:47:32,177 - root - INFO - 获取生成历史请求
2025-07-21 21:47:32,177 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:47:32,177 - root - INFO - 获取发布历史请求
2025-07-21 21:47:32,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:47:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:47:32,178 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:47:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:48:02,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:48:02,181 - root - INFO - 获取生成历史请求
2025-07-21 21:48:02,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:48:02,181 - root - INFO - 获取发布历史请求
2025-07-21 21:48:02,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:48:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:48:02,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:48:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:48:32,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:48:32,181 - root - INFO - 获取生成历史请求
2025-07-21 21:48:32,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:48:32,181 - root - INFO - 获取发布历史请求
2025-07-21 21:48:32,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:48:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:48:32,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:48:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:49:02,186 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:49:02,186 - root - INFO - 获取生成历史请求
2025-07-21 21:49:02,187 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:49:02,188 - root - INFO - 获取发布历史请求
2025-07-21 21:49:02,189 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:49:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:49:02,190 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:49:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:50:00,747 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:50:00,748 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:50:00,748 - root - INFO - 获取生成历史请求
2025-07-21 21:50:00,748 - root - INFO - 获取发布历史请求
2025-07-21 21:50:00,750 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:00] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:50:00,750 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:00] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:50:05,048 - root - INFO - 请求: POST /api/article-content
2025-07-21 21:50:05,048 - root - INFO - 获取文章内容请求
2025-07-21 21:50:05,106 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "POST /api/article-content HTTP/1.1" 200 -
2025-07-21 21:50:05,137 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204401.jpg
2025-07-21 21:50:05,139 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204358.jpg
2025-07-21 21:50:05,139 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204401.jpg
2025-07-21 21:50:05,140 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204407.jpg
2025-07-21 21:50:05,141 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204358.jpg
2025-07-21 21:50:05,144 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204407.jpg
2025-07-21 21:50:05,145 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204411.jpg
2025-07-21 21:50:05,246 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204414.jpg
2025-07-21 21:50:05,247 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204411.jpg
2025-07-21 21:50:05,247 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204414.jpg
2025-07-21 21:50:05,250 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204407.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:05,250 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204401.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:05,251 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204358.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:05,252 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204418.jpg
2025-07-21 21:50:05,253 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204411.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:05,254 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204414.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:05,254 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204418.jpg
2025-07-21 21:50:05,262 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204418.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:05,273 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204422.jpg
2025-07-21 21:50:05,274 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204428.jpg
2025-07-21 21:50:05,275 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204422.jpg
2025-07-21 21:50:05,275 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204428.jpg
2025-07-21 21:50:05,277 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204432.jpg
2025-07-21 21:50:05,279 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204422.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:05,280 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204432.jpg
2025-07-21 21:50:05,281 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204428.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:05,282 - root - INFO - 请求: GET /cache/article_pexels_句句都不黄句句都很撩_20250721_204436.jpg
2025-07-21 21:50:05,283 - root - INFO - 访问缓存文件: article_pexels_句句都不黄句句都很撩_20250721_204436.jpg
2025-07-21 21:50:05,284 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204432.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:05,288 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:05] "[36mGET /cache/article_pexels_句句都不黄句句都很撩_20250721_204436.jpg HTTP/1.1[0m" 304 -
2025-07-21 21:50:14,569 - root - INFO - 请求: POST /api/article-content
2025-07-21 21:50:14,569 - root - INFO - 获取文章内容请求
2025-07-21 21:50:14,570 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:14] "POST /api/article-content HTTP/1.1" 200 -
2025-07-21 21:50:31,696 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:50:31,696 - root - INFO - 获取生成历史请求
2025-07-21 21:50:31,698 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:50:31,698 - root - INFO - 获取发布历史请求
2025-07-21 21:50:31,700 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:50:31,700 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:50:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:51:01,709 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:51:01,711 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:51:01,711 - root - INFO - 获取生成历史请求
2025-07-21 21:51:01,712 - root - INFO - 获取发布历史请求
2025-07-21 21:51:01,714 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:51:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:51:01,715 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:51:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:51:32,188 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:51:32,188 - root - INFO - 获取生成历史请求
2025-07-21 21:51:32,190 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:51:32,190 - root - INFO - 获取发布历史请求
2025-07-21 21:51:32,191 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:51:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:51:32,192 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:51:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:52:02,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:52:02,184 - root - INFO - 获取生成历史请求
2025-07-21 21:52:02,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:52:02,184 - root - INFO - 获取发布历史请求
2025-07-21 21:52:02,185 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:52:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:52:02,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:52:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:52:25,353 - root - INFO - 请求: POST /api/generate-article
2025-07-21 21:52:25,354 - root - INFO - 生成文章请求
2025-07-21 21:52:25,355 - controllers.article_controller - INFO - 【唯一请求ID】b3096a71-f191-47df-a2c3-81497d774076 - generate_article
2025-07-21 21:52:25,357 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '《住房租赁条例》公布 9月15日起施行', 'word_count': 8000, 'image_count': 11, 'format_template': '<div style="font-family: "PingFang SC", "Microsoft YaHei", sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px; font-size: 16px;">\n    \n    <!-- 1. 封面区块 (图片+文字叠加效果) -->\n    <section style="box-shadow: rgba(0, 0, 0, 0.12) 0px 8px 20px; overflow: hidden;">\n        <div style="display: flex; flex-direction: column;">\n            <img alt="AI生成背景图片" src="【微信永久素材URL】" style="width: 100%; height: auto; display: block;">\n            <div style="margin-top: -180px; padding: 25px;">\n                <h1 style="font-size: 35px; font-weight: 900; color: white; margin: 0px 0px 5px; letter-spacing: -0.02em; text-shadow: rgba(0, 0, 0, 0.3) 2px 2px 4px;">AI生成主标题<br><span style="font-size: 40px; font-weight: 800;">AI生成副标题强调</span></h1>\n                <h2 style="font-size: 16px; font-weight: 500; color: rgb(255, 255, 255); margin: 0px; opacity: 0.9; text-shadow: rgba(0, 0, 0, 0.4) 1px 1px 3px;">AI生成副标题内容</h2>\n            </div>\n        </div>\n    </section>\n    \n    <!-- 2. 引言区块 (白色背景，圆角，阴影) -->\n    <section style="background-color: rgb(255, 255, 255); border-radius: 12px; margin: 10px; padding: 24px; box-shadow: rgba(0, 0, 0, 0.06) 0px 4px 16px;">\n        <p style="font-size: 19px; font-weight: 500; color: rgb(58, 123, 213); margin-top: 0px; margin-bottom: 16px; line-height: 1.4;">AI生成的引言段落，可用于概括文章主题。</p>\n        <p style="font-size: 16px; color: rgb(85, 85, 85); line-height: 1.7; margin-bottom: 0px;">AI生成的正文段落，详细阐述引言。</p>\n    </section>\n    \n    <!-- 3. 身心平衡区块 (白色背景，顶部蓝色细线，带图标H2) -->\n    <section style="margin: 24px 10px; background-color: rgb(255, 255, 255); border-radius: 12px; overflow: hidden; box-shadow: rgba(0, 0, 0, 0.06) 0px 4px 16px;">\n        <div style="height: 8px; background-color: rgb(58, 123, 213);"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: rgb(58, 123, 213); margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M12,8L10.67,8.09C9.81,7.07 7.4,4.5 5,4.5C5,4.5 3.03,7.46 4.96,11.41C6.32,14.15 9.06,15.6 10.34,16.07C10.13,17.04 9.84,18.4 10,20C10,20 14,19.8 15.15,17.2C15.15,17.2 10.62,17.9 11.21,16.04C11.21,16.04 14.25,14.5 15.33,13.54C16.41,12.58 17.74,10.85 18.5,8.92C19.04,7.5 19,6 19,6C19,6 17.07,6.96 16.5,7.5C16.5,7.5 15.57,5.38 13.5,5.5C11.43,5.63 11,8 11,8"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: rgb(58, 123, 213); margin: 0px;">AI生成二级标题</h2>\n            </div>\n            <p style="font-size: 16px; line-height: 1.8; color: rgb(51, 51, 51); margin-bottom: 16px;">AI生成的正文段落一。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: rgb(51, 51, 51); margin-bottom: 16px;">AI生成的正文段落二。</p>\n            \n            <!-- 实践建议引用框 (浅蓝色背景，左侧深蓝边框，底部圆角) -->\n            <div style="background-color: #f0f7ff; border-left: 4px solid #3a7bd5; padding: 16px; margin: 20px 0; border-radius: 0 8px 8px 0;">\n                <p style="font-size: 17px; font-weight: 500; color: #333; margin: 0 0 8px 0;">AI生成实践建议标题：</p>\n                <ul style="margin: 0; padding-left: 20px; color: #444;">\n                    <li style="margin-bottom: 8px;">AI生成列表项一</li>\n                    <li style="margin-bottom: 8px;">AI生成列表项二</li>\n                    <li style="margin-bottom: 0;">AI生成列表项三</li>\n                </ul>\n            </div>\n        </div>\n    </section>\n    \n    <!-- 4. 食养生活区块 (白色背景，顶部绿色细线，带图标H2) -->\n    <section style="margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #00b09b;"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: #00b09b; margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M15.5,21L14,8H16.23L15.1,3.46L16.84,3L18.09,8H22L20.5,21H15.5M5,11H10A3,3 0 0,1 13,14H2A3,3 0 0,1 5,11M13,18A3,3 0 0,1 10,21H5A3,3 0 0,1 2,18H13M2,12H13V17H2V12Z"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: #00b09b; margin: 0;">AI生成二级标题</h2>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            \n            <!-- 四季食养网格布局容器 (Flex实现两列) -->\n            <div style="margin: 20px 0;">\n                <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">\n                    <!-- 单个四季食养卡片 -->\n                    <div style="flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px; margin-right: 10px;">\n                        <div style="color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;">AI生成季节</div>\n                        <p style="margin: 0; color: #555; font-size: 14px;">AI生成食养建议</p>\n                    </div>\n                    <div style="flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px;">\n                        <div style="color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;">AI生成季节</div>\n                        <p style="margin: 0; color: #555; font-size: 14px;">AI生成食养建议</p>\n                    </div>\n                </div>\n                <div style="display: flex; justify-content: space-between;">\n                    <div style="flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px; margin-right: 10px;">\n                        <div style="color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;">AI生成季节</div>\n                        <p style="margin: 0; color: #555; font-size: 14px;">AI生成食养建议</p>\n                    </div>\n                    <div style="flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px;">\n                        <div style="color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;">AI生成季节</div>\n                        <p style="margin: 0; color: #555; font-size: 14px;">AI生成食养建议</p>\n                    </div>\n                </div>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落三。</p>\n        </div>\n    </section>\n            \n    <!-- 5. 动中养生区块 (白色背景，顶部橙色细线，带图标H2) -->\n    <section style="margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #ff7e5f;"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: #ff7e5f; margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M7,5H10V19H7V5M14,5H17V19H14V5Z"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: #ff7e5f; margin: 0;">AI生成二级标题</h2>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            \n            <!-- 带有图标和列表的引用框 (浅橙色背景，圆角) -->\n            <div style="background-color: #fff4f0; border-radius: 12px; padding: 20px; margin: 20px 0;">\n                <div style="display: flex; align-items: center; margin-bottom: 12px;">\n                    <svg style="width: 24px; height: 24px; fill: #ff7e5f; margin-right: 10px;" viewBox="0 0 24 24">\n                        <path d="M13,9H11V7H13V9M13,17H11V11H13V17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"></path>\n                    </svg>\n                    <p style="font-size: 18px; font-weight: 500; color: #ff7e5f; margin: 0;">AI生成建议标题</p>\n                </div>\n                <p style="font-size: 15px; color: #555; margin: 0 0 12px 0;">AI生成建议引言：</p>\n                <ul style="margin: 0; padding-left: 20px; color: #444;">\n                    <li style="margin-bottom: 8px;">AI生成列表项一</li>\n                    <li style="margin-bottom: 8px;">AI生成列表项二</li>\n                    <li style="margin-bottom: 0;">AI生成列表项三</li>\n                </ul>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落三。</p>\n        </div>\n    </section>\n    \n    <!-- 6. 眠养生机区块 (白色背景，顶部深紫细线，带图标H2，内联SVG图表) -->\n    <section style="margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #6a11cb;"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: #6a11cb; margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9Z"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: #6a11cb; margin: 0;">AI生成二级标题</h2>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            \n            <!-- SVG睡眠周期图表容器 -->\n            <div style="display: flex; justify-content: center; margin: 20px 0;">\n                <svg width="280" height="160" viewBox="0 0 280 160">\n                    <rect x="10" y="10" width="260" height="140" rx="10" fill="#f0f0ff" stroke="#6a11cb" stroke-width="1"></rect>\n                    <path d="M30,100 Q55,40 80,80 Q105,120 130,60 Q155,0 180,40 Q205,80 230,60 Q255,40 260,60" stroke="#6a11cb" stroke-width="2" fill="none"></path>\n                    <text x="140" y="140" text-anchor="middle" font-size="12" fill="#6a11cb">AI生成图表标题 (90-120分钟/周期)</text>\n                    <text x="40" y="30" font-size="10" fill="#333">AI生成阶段一</text>\n                    <text x="130" y="30" font-size="10" fill="#333">AI生成阶段二</text>\n                    <text x="220" y="30" font-size="10" fill="#333">AI生成阶段三</text>\n                </svg>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            \n            <!-- 优质睡眠要素列表 (浅紫色背景，圆角) -->\n            <div style="background-color: #f0f0ff; border-radius: 12px; padding: 16px; margin-bottom: 16px;">\n                <p style="font-size: 17px; font-weight: 500; color: #6a11cb; margin: 0 0 10px 0;">AI生成列表标题：</p>\n                <ol style="margin: 0; padding-left: 20px; color: #444;">\n                    <li style="margin-bottom: 6px;">AI生成列表项一</li>\n                    <li style="margin-bottom: 6px;">AI生成列表项二</li>\n                    <li style="margin-bottom: 6px;">AI生成列表项三</li>\n                    <li style="margin-bottom: 6px;">AI生成列表项四</li>\n                    <li style="margin-bottom: 0;">AI生成列表项五</li>\n                </ol>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落三。</p>\n        </div>\n    </section>\n    \n    <!-- 7. 心灵疗愈区块 (白色背景，顶部紫色细线，带图标H2) -->\n    <section style="margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #8e44ad;"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: #8e44ad; margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: #8e44ad; margin: 0;">AI生成二级标题</h2>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            \n            <!-- 带有引用和边框的引用框 (浅紫色背景，圆角) -->\n            <div style="margin: 20px 0; padding: 20px; background-color: #faf5ff; border-radius: 12px;">\n                <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                    <p style="font-size: 17px; font-weight: 500; color: #8e44ad; margin: 0;">AI生成引言来源：</p>\n                </div>\n                <p style="font-style: italic; color: #666; border-left: 3px solid #8e44ad; padding-left: 16px; margin: 0;">"AI生成的引用内容，强调内在宁静。"</p>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; font-weight: 600; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落三。</p>\n            \n            <!-- 横向排列的心灵疗愈卡片 (Flex实现两列) -->\n            <div style="display: flex; flex-wrap: wrap; justify-content: space-between; margin: 20px 0;">\n                <!-- 单个心灵疗愈卡片 -->\n                <div style="flex: 1; background-color: #f9f2ff; padding: 16px; border-radius: 10px; margin: 5px;">\n                    <p style="font-size: 16px; font-weight: 500; color: #8e44ad; margin: 0 0 10px 0;">AI生成疗愈方法标题</p>\n                    <p style="font-size: 14px; color: #555; margin: 0;">AI生成疗愈方法描述</p>\n                </div>\n                <div style="flex: 1; background-color: #f9f2ff; padding: 16px; border-radius: 10px; margin: 5px;">\n                    <p style="font-size: 16px; font-weight: 500; color: #8e44ad; margin: 0 0 10px 0;">AI生成疗愈方法标题</p>\n                    <p style="font-size: 14px; color: #555; margin: 0;">AI生成疗愈方法描述</p>\n                </div>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落四。</p>\n        </div>\n    </section>\n    \n    <!-- 8. 结语：回归本真区块 (白色背景，顶部黑色细线) -->\n    <section style="margin: 24px 10px 32px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #333333;"></div>\n        <div style="padding: 24px;">\n            <h2 style="font-size: 24px; font-weight: 600; color: #333; margin: 0 0 16px 0; text-align: center;">AI生成结语主标题</h2>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落三。</p>\n        </div>\n    </section>\n    \n    <!-- 9. CTA (Call To Action) 区块 (蓝色背景，圆角，居中文字和按钮) -->\n    <section style="margin: 0 10px 32px; background-color: #3a7bd5; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.1); color: #fff;">\n        <div style="padding: 24px; text-align: center;">\n            <h2 style="font-size: 24px; font-weight: 600; margin: 0 0 16px 0;">AI生成CTA标题</h2>\n            <p style="font-size: 16px; line-height: 1.7; margin-bottom: 20px;">AI生成CTA描述，引导用户行动。</p>\n            <!-- 按钮样式 -->\n            <div style="display: inline-block; background-color: #fff; color: #3a7bd5; font-weight: 600; padding: 12px 24px; border-radius: 30px; font-size: 16px; box-shadow: 0 4px 10px rgba(0,0,0,0.1);">AI生成按钮文本</div>\n        </div>\n    </section>\n\n</div>', 'ai_model': 'dashscope', 'image_model': 'pexels', 'custom_image_prompt': ''}
2025-07-21 21:52:25,358 - controllers.article_controller - INFO - 开始生成文章，标题: 《住房租赁条例》公布 9月15日起施行
2025-07-21 21:52:25,358 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: pexels
2025-07-21 21:52:25,396 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:52:25,396 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-21 21:52:25,397 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-21 21:52:26,139 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘《住房租赁条例》公布 9月15日起施行’的公众号文章，排版核心风格要与模板一致，字数约8000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n<div style="font-family: "PingFang SC", "Microsoft YaHei", sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px; font-size: 16px;">\n    \n    <!-- 1. 封面区块 (图片+文字叠加效果) -->\n    <section style="box-shadow: rgba(0, 0, 0, 0.12) 0px 8px 20px; overflow: hidden;">\n        <div style="display: flex; flex-direction: column;">\n            <img alt="AI生成背景图片" src="【微信永久素材URL】" style="width: 100%; height: auto; display: block;">\n            <div style="margin-top: -180px; padding: 25px;">\n                <h1 style="font-size: 35px; font-weight: 900; color: white; margin: 0px 0px 5px; letter-spacing: -0.02em; text-shadow: rgba(0, 0, 0, 0.3) 2px 2px 4px;">AI生成主标题<br><span style="font-size: 40px; font-weight: 800;">AI生成副标题强调</span></h1>\n                <h2 style="font-size: 16px; font-weight: 500; color: rgb(255, 255, 255); margin: 0px; opacity: 0.9; text-shadow: rgba(0, 0, 0, 0.4) 1px 1px 3px;">AI生成副标题内容</h2>\n            </div>\n        </div>\n    </section>\n    \n    <!-- 2. 引言区块 (白色背景，圆角，阴影) -->\n    <section style="background-color: rgb(255, 255, 255); border-radius: 12px; margin: 10px; padding: 24px; box-shadow: rgba(0, 0, 0, 0.06) 0px 4px 16px;">\n        <p style="font-size: 19px; font-weight: 500; color: rgb(58, 123, 213); margin-top: 0px; margin-bottom: 16px; line-height: 1.4;">AI生成的引言段落，可用于概括文章主题。</p>\n        <p style="font-size: 16px; color: rgb(85, 85, 85); line-height: 1.7; margin-bottom: 0px;">AI生成的正文段落，详细阐述引言。</p>\n    </section>\n    \n    <!-- 3. 身心平衡区块 (白色背景，顶部蓝色细线，带图标H2) -->\n    <section style="margin: 24px 10px; background-color: rgb(255, 255, 255); border-radius: 12px; overflow: hidden; box-shadow: rgba(0, 0, 0, 0.06) 0px 4px 16px;">\n        <div style="height: 8px; background-color: rgb(58, 123, 213);"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: rgb(58, 123, 213); margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M12,8L10.67,8.09C9.81,7.07 7.4,4.5 5,4.5C5,4.5 3.03,7.46 4.96,11.41C6.32,14.15 9.06,15.6 10.34,16.07C10.13,17.04 9.84,18.4 10,20C10,20 14,19.8 15.15,17.2C15.15,17.2 10.62,17.9 11.21,16.04C11.21,16.04 14.25,14.5 15.33,13.54C16.41,12.58 17.74,10.85 18.5,8.92C19.04,7.5 19,6 19,6C19,6 17.07,6.96 16.5,7.5C16.5,7.5 15.57,5.38 13.5,5.5C11.43,5.63 11,8 11,8"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: rgb(58, 123, 213); margin: 0px;">AI生成二级标题</h2>\n            </div>\n            <p style="font-size: 16px; line-height: 1.8; color: rgb(51, 51, 51); margin-bottom: 16px;">AI生成的正文段落一。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: rgb(51, 51, 51); margin-bottom: 16px;">AI生成的正文段落二。</p>\n            \n            <!-- 实践建议引用框 (浅蓝色背景，左侧深蓝边框，底部圆角) -->\n            <div style="background-color: #f0f7ff; border-left: 4px solid #3a7bd5; padding: 16px; margin: 20px 0; border-radius: 0 8px 8px 0;">\n                <p style="font-size: 17px; font-weight: 500; color: #333; margin: 0 0 8px 0;">AI生成实践建议标题：</p>\n                <ul style="margin: 0; padding-left: 20px; color: #444;">\n                    <li style="margin-bottom: 8px;">AI生成列表项一</li>\n                    <li style="margin-bottom: 8px;">AI生成列表项二</li>\n                    <li style="margin-bottom: 0;">AI生成列表项三</li>\n                </ul>\n            </div>\n        </div>\n    </section>\n    \n    <!-- 4. 食养生活区块 (白色背景，顶部绿色细线，带图标H2) -->\n    <section style="margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #00b09b;"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: #00b09b; margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M15.5,21L14,8H16.23L15.1,3.46L16.84,3L18.09,8H22L20.5,21H15.5M5,11H10A3,3 0 0,1 13,14H2A3,3 0 0,1 5,11M13,18A3,3 0 0,1 10,21H5A3,3 0 0,1 2,18H13M2,12H13V17H2V12Z"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: #00b09b; margin: 0;">AI生成二级标题</h2>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            \n            <!-- 四季食养网格布局容器 (Flex实现两列) -->\n            <div style="margin: 20px 0;">\n                <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">\n                    <!-- 单个四季食养卡片 -->\n                    <div style="flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px; margin-right: 10px;">\n                        <div style="color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;">AI生成季节</div>\n                        <p style="margin: 0; color: #555; font-size: 14px;">AI生成食养建议</p>\n                    </div>\n                    <div style="flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px;">\n                        <div style="color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;">AI生成季节</div>\n                        <p style="margin: 0; color: #555; font-size: 14px;">AI生成食养建议</p>\n                    </div>\n                </div>\n                <div style="display: flex; justify-content: space-between;">\n                    <div style="flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px; margin-right: 10px;">\n                        <div style="color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;">AI生成季节</div>\n                        <p style="margin: 0; color: #555; font-size: 14px;">AI生成食养建议</p>\n                    </div>\n                    <div style="flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px;">\n                        <div style="color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;">AI生成季节</div>\n                        <p style="margin: 0; color: #555; font-size: 14px;">AI生成食养建议</p>\n                    </div>\n                </div>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落三。</p>\n        </div>\n    </section>\n            \n    <!-- 5. 动中养生区块 (白色背景，顶部橙色细线，带图标H2) -->\n    <section style="margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #ff7e5f;"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: #ff7e5f; margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M7,5H10V19H7V5M14,5H17V19H14V5Z"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: #ff7e5f; margin: 0;">AI生成二级标题</h2>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            \n            <!-- 带有图标和列表的引用框 (浅橙色背景，圆角) -->\n            <div style="background-color: #fff4f0; border-radius: 12px; padding: 20px; margin: 20px 0;">\n                <div style="display: flex; align-items: center; margin-bottom: 12px;">\n                    <svg style="width: 24px; height: 24px; fill: #ff7e5f; margin-right: 10px;" viewBox="0 0 24 24">\n                        <path d="M13,9H11V7H13V9M13,17H11V11H13V17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"></path>\n                    </svg>\n                    <p style="font-size: 18px; font-weight: 500; color: #ff7e5f; margin: 0;">AI生成建议标题</p>\n                </div>\n                <p style="font-size: 15px; color: #555; margin: 0 0 12px 0;">AI生成建议引言：</p>\n                <ul style="margin: 0; padding-left: 20px; color: #444;">\n                    <li style="margin-bottom: 8px;">AI生成列表项一</li>\n                    <li style="margin-bottom: 8px;">AI生成列表项二</li>\n                    <li style="margin-bottom: 0;">AI生成列表项三</li>\n                </ul>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落三。</p>\n        </div>\n    </section>\n    \n    <!-- 6. 眠养生机区块 (白色背景，顶部深紫细线，带图标H2，内联SVG图表) -->\n    <section style="margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #6a11cb;"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: #6a11cb; margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9Z"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: #6a11cb; margin: 0;">AI生成二级标题</h2>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            \n            <!-- SVG睡眠周期图表容器 -->\n            <div style="display: flex; justify-content: center; margin: 20px 0;">\n                <svg width="280" height="160" viewBox="0 0 280 160">\n                    <rect x="10" y="10" width="260" height="140" rx="10" fill="#f0f0ff" stroke="#6a11cb" stroke-width="1"></rect>\n                    <path d="M30,100 Q55,40 80,80 Q105,120 130,60 Q155,0 180,40 Q205,80 230,60 Q255,40 260,60" stroke="#6a11cb" stroke-width="2" fill="none"></path>\n                    <text x="140" y="140" text-anchor="middle" font-size="12" fill="#6a11cb">AI生成图表标题 (90-120分钟/周期)</text>\n                    <text x="40" y="30" font-size="10" fill="#333">AI生成阶段一</text>\n                    <text x="130" y="30" font-size="10" fill="#333">AI生成阶段二</text>\n                    <text x="220" y="30" font-size="10" fill="#333">AI生成阶段三</text>\n                </svg>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            \n            <!-- 优质睡眠要素列表 (浅紫色背景，圆角) -->\n            <div style="background-color: #f0f0ff; border-radius: 12px; padding: 16px; margin-bottom: 16px;">\n                <p style="font-size: 17px; font-weight: 500; color: #6a11cb; margin: 0 0 10px 0;">AI生成列表标题：</p>\n                <ol style="margin: 0; padding-left: 20px; color: #444;">\n                    <li style="margin-bottom: 6px;">AI生成列表项一</li>\n                    <li style="margin-bottom: 6px;">AI生成列表项二</li>\n                    <li style="margin-bottom: 6px;">AI生成列表项三</li>\n                    <li style="margin-bottom: 6px;">AI生成列表项四</li>\n                    <li style="margin-bottom: 0;">AI生成列表项五</li>\n                </ol>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落三。</p>\n        </div>\n    </section>\n    \n    <!-- 7. 心灵疗愈区块 (白色背景，顶部紫色细线，带图标H2) -->\n    <section style="margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #8e44ad;"></div>\n        <div style="padding: 24px;">\n            <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                <svg style="width: 28px; height: 28px; fill: #8e44ad; margin-right: 12px;" viewBox="0 0 24 24">\n                    <path d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"></path>\n                </svg>\n                <h2 style="font-size: 24px; font-weight: 600; color: #8e44ad; margin: 0;">AI生成二级标题</h2>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            \n            <!-- 带有引用和边框的引用框 (浅紫色背景，圆角) -->\n            <div style="margin: 20px 0; padding: 20px; background-color: #faf5ff; border-radius: 12px;">\n                <div style="display: flex; align-items: center; margin-bottom: 16px;">\n                    <p style="font-size: 17px; font-weight: 500; color: #8e44ad; margin: 0;">AI生成引言来源：</p>\n                </div>\n                <p style="font-style: italic; color: #666; border-left: 3px solid #8e44ad; padding-left: 16px; margin: 0;">"AI生成的引用内容，强调内在宁静。"</p>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; font-weight: 600; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落三。</p>\n            \n            <!-- 横向排列的心灵疗愈卡片 (Flex实现两列) -->\n            <div style="display: flex; flex-wrap: wrap; justify-content: space-between; margin: 20px 0;">\n                <!-- 单个心灵疗愈卡片 -->\n                <div style="flex: 1; background-color: #f9f2ff; padding: 16px; border-radius: 10px; margin: 5px;">\n                    <p style="font-size: 16px; font-weight: 500; color: #8e44ad; margin: 0 0 10px 0;">AI生成疗愈方法标题</p>\n                    <p style="font-size: 14px; color: #555; margin: 0;">AI生成疗愈方法描述</p>\n                </div>\n                <div style="flex: 1; background-color: #f9f2ff; padding: 16px; border-radius: 10px; margin: 5px;">\n                    <p style="font-size: 16px; font-weight: 500; color: #8e44ad; margin: 0 0 10px 0;">AI生成疗愈方法标题</p>\n                    <p style="font-size: 14px; color: #555; margin: 0;">AI生成疗愈方法描述</p>\n                </div>\n            </div>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落四。</p>\n        </div>\n    </section>\n    \n    <!-- 8. 结语：回归本真区块 (白色背景，顶部黑色细线) -->\n    <section style="margin: 24px 10px 32px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);">\n        <div style="height: 8px; background-color: #333333;"></div>\n        <div style="padding: 24px;">\n            <h2 style="font-size: 24px; font-weight: 600; color: #333; margin: 0 0 16px 0; text-align: center;">AI生成结语主标题</h2>\n            \n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落一。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;">AI生成的正文段落二。</p>\n            <p style="font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;">AI生成的正文段落三。</p>\n        </div>\n    </section>\n    \n    <!-- 9. CTA (Call To Action) 区块 (蓝色背景，圆角，居中文字和按钮) -->\n    <section style="margin: 0 10px 32px; background-color: #3a7bd5; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.1); color: #fff;">\n        <div style="padding: 24px; text-align: center;">\n            <h2 style="font-size: 24px; font-weight: 600; margin: 0 0 16px 0;">AI生成CTA标题</h2>\n            <p style="font-size: 16px; line-height: 1.7; margin-bottom: 20px;">AI生成CTA描述，引导用户行动。</p>\n            <!-- 按钮样式 -->\n            <div style="display: inline-block; background-color: #fff; color: #3a7bd5; font-weight: 600; padding: 12px 24px; border-radius: 30px; font-size: 16px; box-shadow: 0 4px 10px rgba(0,0,0,0.1);">AI生成按钮文本</div>\n        </div>\n    </section>\n\n</div>'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-21 21:52:26,161 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:52:26,164 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:52:26,187 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CD84D0>
2025-07-21 21:52:26,187 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008C920D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:52:26,205 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CB5430>
2025-07-21 21:52:26,207 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:52:26,208 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:52:26,208 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:52:26,209 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:52:26,209 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:52:31,691 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:52:31,691 - root - INFO - 获取生成历史请求
2025-07-21 21:52:31,693 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:52:31,699 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:52:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:52:31,700 - root - INFO - 获取发布历史请求
2025-07-21 21:52:31,701 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:52:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:53:01,704 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:53:01,704 - root - INFO - 获取发布历史请求
2025-07-21 21:53:01,705 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:53:01,706 - root - INFO - 获取生成历史请求
2025-07-21 21:53:01,707 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:53:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:53:01,708 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:53:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:53:31,698 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:53:31,698 - root - INFO - 获取生成历史请求
2025-07-21 21:53:31,699 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:53:31,699 - root - INFO - 获取发布历史请求
2025-07-21 21:53:31,700 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:53:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:53:31,701 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:53:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:53:42,887 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'03d4df30-14ac-96de-b72e-380fd9e9e5aa'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'76665'), (b'req-arrive-time', b'1753105946327'), (b'resp-start-time', b'1753106022993'), (b'x-envoy-upstream-service-time', b'76650'), (b'set-cookie', b'acw_tc=03d4df30-14ac-96de-b72e-380fd9e9e5aa2e916580a0f99ab0d5d27ab2941d119e;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:53:42 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:53:42,888 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:53:42,889 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:53:42,890 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:53:42,890 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:53:42,890 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:53:42,891 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '03d4df30-14ac-96de-b72e-380fd9e9e5aa', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '76665', 'req-arrive-time': '1753105946327', 'resp-start-time': '1753106022993', 'x-envoy-upstream-service-time': '76650', 'set-cookie': 'acw_tc=03d4df30-14ac-96de-b72e-380fd9e9e5aa2e916580a0f99ab0d5d27ab2941d119e;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:53:42 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:53:42,892 - openai._base_client - DEBUG - request_id: 03d4df30-14ac-96de-b72e-380fd9e9e5aa
2025-07-21 21:53:42,945 - controllers.article_controller - INFO - 文章内容生成成功，长度: 9419字符
2025-07-21 21:53:42,945 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-21 21:53:42,946 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 《住房租赁条例》公布 9月15日起施行
2025-07-21 21:53:43,577 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：《住房租赁条例》公布 9月15日起施行\n内容预览：```html 住房租赁新规范<span style="font-size: 40px; font-weight: 800;\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:53:43,577 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:53:43,578 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:53:43,598 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CDACC0>
2025-07-21 21:53:43,599 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CC6750> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:53:43,616 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CDB1D0>
2025-07-21 21:53:43,616 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:53:43,616 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:53:43,617 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:53:43,617 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:53:43,617 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:53:44,991 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'f7b9ea0e-2621-9f43-8aa8-4eae7c45e048'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1363'), (b'req-arrive-time', b'1753106023735'), (b'resp-start-time', b'1753106025098'), (b'x-envoy-upstream-service-time', b'1361'), (b'set-cookie', b'acw_tc=f7b9ea0e-2621-9f43-8aa8-4eae7c45e0487b79c89b509ca99d95f4c85846faef52;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:53:44 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:53:44,992 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:53:44,992 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:53:44,993 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:53:44,993 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:53:44,993 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:53:44,993 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'f7b9ea0e-2621-9f43-8aa8-4eae7c45e048', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1363', 'req-arrive-time': '1753106023735', 'resp-start-time': '1753106025098', 'x-envoy-upstream-service-time': '1361', 'set-cookie': 'acw_tc=f7b9ea0e-2621-9f43-8aa8-4eae7c45e0487b79c89b509ca99d95f4c85846faef52;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:53:44 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:53:44,993 - openai._base_client - DEBUG - request_id: f7b9ea0e-2621-9f43-8aa8-4eae7c45e048
2025-07-21 21:53:44,994 - services.dashscope_service - INFO - 文章摘要生成成功: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。
2025-07-21 21:53:44,994 - controllers.article_controller - INFO - 摘要生成完成: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为...
2025-07-21 21:53:44,994 - controllers.article_controller - INFO - 文章字数约: 8000，计划生成配图数量: 11
2025-07-21 21:53:44,994 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-21 21:53:44,994 - controllers.article_controller - INFO - 开始处理文章配图，计划生成11张图片（仅本地路径，不上传微信）
2025-07-21 21:53:44,995 - controllers.article_controller - INFO - 计划在第[2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 16]段后插入配图
2025-07-21 21:53:44,995 - controllers.article_controller - INFO - 生成第1张配图，使用模型: pexels
2025-07-21 21:53:44,995 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 1/11
2025-07-21 21:53:44,995 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 1/11
2025-07-21 21:53:44,996 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:53:44,996 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:53:44,996 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:53:44,997 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:53:45,577 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第1张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:53:45,580 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:53:45,580 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:53:45,601 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D04800>
2025-07-21 21:53:45,602 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CF98D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:53:45,621 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D04170>
2025-07-21 21:53:45,622 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:53:45,623 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:53:45,623 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:53:45,624 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:53:45,624 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:53:46,410 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'09db3f5d-f708-93a4-9d8b-ab693ee7bdd1'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'774'), (b'req-arrive-time', b'1753106025742'), (b'resp-start-time', b'1753106026516'), (b'x-envoy-upstream-service-time', b'771'), (b'set-cookie', b'acw_tc=09db3f5d-f708-93a4-9d8b-ab693ee7bdd116770906710a95e84004b8b665c9a892;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:53:46 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:53:46,411 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:53:46,411 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:53:46,411 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:53:46,412 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:53:46,412 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:53:46,412 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '09db3f5d-f708-93a4-9d8b-ab693ee7bdd1', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '774', 'req-arrive-time': '1753106025742', 'resp-start-time': '1753106026516', 'x-envoy-upstream-service-time': '771', 'set-cookie': 'acw_tc=09db3f5d-f708-93a4-9d8b-ab693ee7bdd116770906710a95e84004b8b665c9a892;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:53:46 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:53:46,412 - openai._base_client - DEBUG - request_id: 09db3f5d-f708-93a4-9d8b-ab693ee7bdd1
2025-07-21 21:53:46,413 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: rental market housing regulation
2025-07-21 21:53:46,418 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:53:47,506 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=rental+market+housing+regulation&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:53:47,544 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:53:47,544 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:53:47,545 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-21 21:53:47,545 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215347.jpg
2025-07-21 21:53:47,546 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:53:48,377 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/29899813/pexels-photo-29899813.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 131658
2025-07-21 21:53:48,420 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215347.jpg
2025-07-21 21:53:48,420 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215347.jpg
2025-07-21 21:53:48,420 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215347.jpg
2025-07-21 21:53:48,420 - controllers.article_controller - INFO - 生成第2张配图，使用模型: pexels
2025-07-21 21:53:48,421 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 2/11
2025-07-21 21:53:48,421 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 2/11
2025-07-21 21:53:48,421 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:53:48,421 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:53:48,421 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:53:48,422 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:53:49,015 - httpcore.connection - DEBUG - close.started
2025-07-21 21:53:49,016 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:53:49,016 - httpcore.connection - DEBUG - close.started
2025-07-21 21:53:49,016 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:53:49,019 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第2张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:53:49,020 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:53:49,021 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:53:49,034 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D06D20>
2025-07-21 21:53:49,035 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008D190D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:53:49,052 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D06D50>
2025-07-21 21:53:49,053 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:53:49,053 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:53:49,054 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:53:49,054 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:53:49,054 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:53:50,149 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'0393bf43-00aa-9f6e-97bd-1aa04166e279'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1082'), (b'req-arrive-time', b'1753106029172'), (b'resp-start-time', b'1753106030254'), (b'x-envoy-upstream-service-time', b'1080'), (b'set-cookie', b'acw_tc=0393bf43-00aa-9f6e-97bd-1aa04166e2793b5557c413c0a88f5d89a5f31fedaaa5;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:53:50 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:53:50,149 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:53:50,150 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:53:50,150 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:53:50,150 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:53:50,150 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:53:50,150 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '0393bf43-00aa-9f6e-97bd-1aa04166e279', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1082', 'req-arrive-time': '1753106029172', 'resp-start-time': '1753106030254', 'x-envoy-upstream-service-time': '1080', 'set-cookie': 'acw_tc=0393bf43-00aa-9f6e-97bd-1aa04166e2793b5557c413c0a88f5d89a5f31fedaaa5;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:53:50 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:53:50,150 - openai._base_client - DEBUG - request_id: 0393bf43-00aa-9f6e-97bd-1aa04166e279
2025-07-21 21:53:50,151 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: rental market housing regulations
2025-07-21 21:53:50,152 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:53:52,111 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=rental+market+housing+regulations&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:53:52,112 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:53:52,112 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:53:52,112 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-21 21:53:52,112 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215352.jpg
2025-07-21 21:53:52,114 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:53:52,873 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/29899813/pexels-photo-29899813.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 131658
2025-07-21 21:53:52,910 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215352.jpg
2025-07-21 21:53:52,911 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215352.jpg
2025-07-21 21:53:52,912 - controllers.article_controller - INFO - 第2张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215352.jpg
2025-07-21 21:53:52,912 - controllers.article_controller - INFO - 生成第3张配图，使用模型: pexels
2025-07-21 21:53:52,912 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 3/11
2025-07-21 21:53:52,912 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 3/11
2025-07-21 21:53:52,913 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:53:52,913 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:53:52,913 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:53:52,914 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:53:53,446 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第3张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:53:53,447 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:53:53,447 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:53:53,462 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CD8380>
2025-07-21 21:53:53,462 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CFB2D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:53:53,484 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CD9760>
2025-07-21 21:53:53,484 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:53:53,484 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:53:53,484 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:53:53,485 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:53:53,485 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:53:54,153 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'047b51f3-78ac-955d-8a3a-c7e603616e82'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'654'), (b'req-arrive-time', b'1753106033604'), (b'resp-start-time', b'1753106034259'), (b'x-envoy-upstream-service-time', b'652'), (b'set-cookie', b'acw_tc=047b51f3-78ac-955d-8a3a-c7e603616e82bce556abfd3363d0eff8810b12af12b7;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:53:53 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:53:54,153 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:53:54,154 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:53:54,154 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:53:54,154 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:53:54,154 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:53:54,154 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '047b51f3-78ac-955d-8a3a-c7e603616e82', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '654', 'req-arrive-time': '1753106033604', 'resp-start-time': '1753106034259', 'x-envoy-upstream-service-time': '652', 'set-cookie': 'acw_tc=047b51f3-78ac-955d-8a3a-c7e603616e82bce556abfd3363d0eff8810b12af12b7;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:53:53 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:53:54,154 - openai._base_client - DEBUG - request_id: 047b51f3-78ac-955d-8a3a-c7e603616e82
2025-07-21 21:53:54,155 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: rental market regulation legal
2025-07-21 21:53:54,155 - httpcore.connection - DEBUG - close.started
2025-07-21 21:53:54,156 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:53:54,158 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:53:55,100 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=rental+market+regulation+legal&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:53:55,101 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:53:55,101 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:53:55,102 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-21 21:53:55,102 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215355.jpg
2025-07-21 21:53:55,103 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:54:01,018 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/7714794/pexels-photo-7714794.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 212006
2025-07-21 21:54:01,700 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:54:01,700 - root - INFO - 获取生成历史请求
2025-07-21 21:54:01,701 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:54:01,701 - root - INFO - 获取发布历史请求
2025-07-21 21:54:01,703 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:54:01,703 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:54:03,151 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215355.jpg
2025-07-21 21:54:03,152 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215355.jpg
2025-07-21 21:54:03,152 - controllers.article_controller - INFO - 第3张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215355.jpg
2025-07-21 21:54:03,152 - controllers.article_controller - INFO - 生成第4张配图，使用模型: pexels
2025-07-21 21:54:03,153 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 4/11
2025-07-21 21:54:03,153 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 4/11
2025-07-21 21:54:03,153 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:03,154 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:03,154 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:03,154 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:03,714 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第4张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:54:03,715 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:54:03,715 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:54:03,760 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D048C0>
2025-07-21 21:54:03,760 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CF9F50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:54:03,780 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D05CD0>
2025-07-21 21:54:03,780 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:54:03,780 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:54:03,780 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:54:03,781 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:54:03,781 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:54:04,736 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'a72a5fb8-4e8d-97ec-9cef-4b1211be187b'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'941'), (b'req-arrive-time', b'1753106043901'), (b'resp-start-time', b'1753106044842'), (b'x-envoy-upstream-service-time', b'940'), (b'set-cookie', b'acw_tc=a72a5fb8-4e8d-97ec-9cef-4b1211be187bf2830149dc7f57076d149dfbb6706859;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:54:04 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:54:04,736 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:54:04,736 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:54:04,737 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:54:04,737 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:54:04,737 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:54:04,737 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'a72a5fb8-4e8d-97ec-9cef-4b1211be187b', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '941', 'req-arrive-time': '1753106043901', 'resp-start-time': '1753106044842', 'x-envoy-upstream-service-time': '940', 'set-cookie': 'acw_tc=a72a5fb8-4e8d-97ec-9cef-4b1211be187bf2830149dc7f57076d149dfbb6706859;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:54:04 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:54:04,737 - openai._base_client - DEBUG - request_id: a72a5fb8-4e8d-97ec-9cef-4b1211be187b
2025-07-21 21:54:04,738 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: fair housing rental market
2025-07-21 21:54:04,738 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:54:06,497 - httpcore.connection - DEBUG - close.started
2025-07-21 21:54:06,497 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:54:07,048 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=fair+housing+rental+market&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:54:07,049 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:54:07,049 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:54:07,049 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-21 21:54:07,049 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215407.jpg
2025-07-21 21:54:07,050 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:54:13,086 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/29899813/pexels-photo-29899813.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 131658
2025-07-21 21:54:15,404 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215407.jpg
2025-07-21 21:54:15,404 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215407.jpg
2025-07-21 21:54:15,404 - controllers.article_controller - INFO - 第4张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215407.jpg
2025-07-21 21:54:15,404 - controllers.article_controller - INFO - 生成第5张配图，使用模型: pexels
2025-07-21 21:54:15,404 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 5/11
2025-07-21 21:54:15,405 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 5/11
2025-07-21 21:54:15,405 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:15,405 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:15,406 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:15,406 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:16,160 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第5张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:54:16,161 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:54:16,161 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:54:16,175 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D1D970>
2025-07-21 21:54:16,175 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CC4050> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:54:16,192 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D1D400>
2025-07-21 21:54:16,192 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:54:16,193 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:54:16,194 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:54:16,194 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:54:16,194 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:54:16,569 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'7cbb0d1c-7c5a-9d2a-903e-4de211839471'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'363'), (b'req-arrive-time', b'1753106056314'), (b'resp-start-time', b'1753106056677'), (b'x-envoy-upstream-service-time', b'360'), (b'set-cookie', b'acw_tc=7cbb0d1c-7c5a-9d2a-903e-4de211839471fa341136ca7e3835c1dde1b958d01426;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:54:16 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:54:16,570 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:54:16,570 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:54:16,571 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:54:16,571 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:54:16,571 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:54:16,571 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '7cbb0d1c-7c5a-9d2a-903e-4de211839471', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '363', 'req-arrive-time': '1753106056314', 'resp-start-time': '1753106056677', 'x-envoy-upstream-service-time': '360', 'set-cookie': 'acw_tc=7cbb0d1c-7c5a-9d2a-903e-4de211839471fa341136ca7e3835c1dde1b958d01426;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:54:16 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:54:16,571 - openai._base_client - DEBUG - request_id: 7cbb0d1c-7c5a-9d2a-903e-4de211839471
2025-07-21 21:54:16,572 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: future housing rental market
2025-07-21 21:54:16,575 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:54:17,084 - httpcore.connection - DEBUG - close.started
2025-07-21 21:54:17,084 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:54:17,644 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=future+housing+rental+market&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:54:17,645 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:54:17,646 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:54:17,646 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-21 21:54:17,646 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215417.jpg
2025-07-21 21:54:17,647 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:54:18,396 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/5849574/pexels-photo-5849574.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 91716
2025-07-21 21:54:18,422 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215417.jpg
2025-07-21 21:54:18,423 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215417.jpg
2025-07-21 21:54:18,423 - controllers.article_controller - INFO - 第5张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215417.jpg
2025-07-21 21:54:18,423 - controllers.article_controller - INFO - 生成第6张配图，使用模型: pexels
2025-07-21 21:54:18,423 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 6/11
2025-07-21 21:54:18,423 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 6/11
2025-07-21 21:54:18,423 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:18,424 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:18,425 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:18,425 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:18,995 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第6张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:54:18,995 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:54:18,996 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:54:19,011 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D1E990>
2025-07-21 21:54:19,011 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CFB750> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:54:19,029 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D1D6A0>
2025-07-21 21:54:19,029 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:54:19,030 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:54:19,030 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:54:19,030 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:54:19,030 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:54:19,544 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'7fcfa21b-d353-91a2-96cc-4a461f00bf89'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'498'), (b'req-arrive-time', b'1753106059153'), (b'resp-start-time', b'1753106059652'), (b'x-envoy-upstream-service-time', b'497'), (b'set-cookie', b'acw_tc=7fcfa21b-d353-91a2-96cc-4a461f00bf892e7f2c4553b35f234a55bd0274597216;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:54:19 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:54:19,544 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:54:19,544 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:54:19,545 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:54:19,545 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:54:19,545 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:54:19,545 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '7fcfa21b-d353-91a2-96cc-4a461f00bf89', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '498', 'req-arrive-time': '1753106059153', 'resp-start-time': '1753106059652', 'x-envoy-upstream-service-time': '497', 'set-cookie': 'acw_tc=7fcfa21b-d353-91a2-96cc-4a461f00bf892e7f2c4553b35f234a55bd0274597216;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:54:19 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:54:19,545 - openai._base_client - DEBUG - request_id: 7fcfa21b-d353-91a2-96cc-4a461f00bf89
2025-07-21 21:54:19,546 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: fair housing rental market
2025-07-21 21:54:19,546 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:54:21,115 - httpcore.connection - DEBUG - close.started
2025-07-21 21:54:21,115 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:54:21,117 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=fair+housing+rental+market&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:54:21,117 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:54:21,118 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:54:21,118 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-21 21:54:21,118 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215421.jpg
2025-07-21 21:54:21,119 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:54:21,978 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/30402432/pexels-photo-30402432.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 254300
2025-07-21 21:54:23,786 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215421.jpg
2025-07-21 21:54:23,786 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215421.jpg
2025-07-21 21:54:23,787 - controllers.article_controller - INFO - 第6张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215421.jpg
2025-07-21 21:54:23,787 - controllers.article_controller - INFO - 生成第7张配图，使用模型: pexels
2025-07-21 21:54:23,787 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 7/11
2025-07-21 21:54:23,787 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 7/11
2025-07-21 21:54:23,787 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:23,787 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:23,788 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:23,788 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:24,364 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第7张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:54:24,365 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:54:24,365 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:54:24,381 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D1F4A0>
2025-07-21 21:54:24,381 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CC43D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:54:24,401 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D1DF70>
2025-07-21 21:54:24,401 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:54:24,402 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:54:24,402 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:54:24,402 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:54:24,402 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:54:25,011 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'838de7dc-5cb9-9d5a-a724-ca1f3e57fac0'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'593'), (b'req-arrive-time', b'1753106064523'), (b'resp-start-time', b'1753106065117'), (b'x-envoy-upstream-service-time', b'592'), (b'set-cookie', b'acw_tc=838de7dc-5cb9-9d5a-a724-ca1f3e57fac0772fe7099688470e9356583d3e55db79;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:54:24 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:54:25,011 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:54:25,011 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:54:25,012 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:54:25,012 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:54:25,012 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:54:25,012 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '838de7dc-5cb9-9d5a-a724-ca1f3e57fac0', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '593', 'req-arrive-time': '1753106064523', 'resp-start-time': '1753106065117', 'x-envoy-upstream-service-time': '592', 'set-cookie': 'acw_tc=838de7dc-5cb9-9d5a-a724-ca1f3e57fac0772fe7099688470e9356583d3e55db79;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:54:24 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:54:25,012 - openai._base_client - DEBUG - request_id: 838de7dc-5cb9-9d5a-a724-ca1f3e57fac0
2025-07-21 21:54:25,013 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: rental market regulation legal
2025-07-21 21:54:25,014 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:54:27,008 - httpcore.connection - DEBUG - close.started
2025-07-21 21:54:27,009 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:54:27,011 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=rental+market+regulation+legal&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:54:27,012 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:54:27,012 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:54:27,013 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-21 21:54:27,013 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215427.jpg
2025-07-21 21:54:27,014 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:54:27,836 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/10859265/pexels-photo-10859265.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 213755
2025-07-21 21:54:28,440 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215427.jpg
2025-07-21 21:54:28,440 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215427.jpg
2025-07-21 21:54:28,441 - controllers.article_controller - INFO - 第7张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215427.jpg
2025-07-21 21:54:28,441 - controllers.article_controller - INFO - 生成第8张配图，使用模型: pexels
2025-07-21 21:54:28,441 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 8/11
2025-07-21 21:54:28,442 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 8/11
2025-07-21 21:54:28,442 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:28,442 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:28,443 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:28,444 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:29,090 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第8张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:54:29,090 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:54:29,092 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:54:29,110 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D2C830>
2025-07-21 21:54:29,110 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CF9E50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:54:29,128 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D2C1A0>
2025-07-21 21:54:29,128 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:54:29,129 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:54:29,129 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:54:29,129 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:54:29,129 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:54:29,678 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'6f25f659-6f3d-93c7-8f6c-9a0f36acb2e0'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'535'), (b'req-arrive-time', b'1753106069249'), (b'resp-start-time', b'1753106069784'), (b'x-envoy-upstream-service-time', b'533'), (b'set-cookie', b'acw_tc=6f25f659-6f3d-93c7-8f6c-9a0f36acb2e02f22253155a8fac9d29ff28eee2c409c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:54:29 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:54:29,678 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:54:29,679 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:54:29,679 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:54:29,679 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:54:29,679 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:54:29,679 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '6f25f659-6f3d-93c7-8f6c-9a0f36acb2e0', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '535', 'req-arrive-time': '1753106069249', 'resp-start-time': '1753106069784', 'x-envoy-upstream-service-time': '533', 'set-cookie': 'acw_tc=6f25f659-6f3d-93c7-8f6c-9a0f36acb2e02f22253155a8fac9d29ff28eee2c409c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:54:29 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:54:29,680 - openai._base_client - DEBUG - request_id: 6f25f659-6f3d-93c7-8f6c-9a0f36acb2e0
2025-07-21 21:54:29,680 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: rental market regulation legal
2025-07-21 21:54:29,681 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:54:31,699 - httpcore.connection - DEBUG - close.started
2025-07-21 21:54:31,700 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:54:31,702 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:54:31,702 - root - INFO - 获取生成历史请求
2025-07-21 21:54:31,703 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:54:31,703 - root - INFO - 获取发布历史请求
2025-07-21 21:54:31,704 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:54:31,705 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:54:32,269 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=rental+market+regulation+legal&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:54:32,270 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:54:32,270 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:54:32,270 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-21 21:54:32,270 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215432.jpg
2025-07-21 21:54:32,271 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:54:33,140 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/10376001/pexels-photo-10376001.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 85171
2025-07-21 21:54:33,488 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215432.jpg
2025-07-21 21:54:33,488 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215432.jpg
2025-07-21 21:54:33,488 - controllers.article_controller - INFO - 第8张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215432.jpg
2025-07-21 21:54:33,488 - controllers.article_controller - INFO - 生成第9张配图，使用模型: pexels
2025-07-21 21:54:33,489 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 9/11
2025-07-21 21:54:33,489 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 9/11
2025-07-21 21:54:33,489 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:33,489 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:33,490 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:33,490 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:34,058 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第9张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:54:34,059 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:54:34,060 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:54:34,077 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D2D8B0>
2025-07-21 21:54:34,078 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CC5D50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:54:34,097 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D05820>
2025-07-21 21:54:34,097 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:54:34,098 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:54:34,098 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:54:34,098 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:54:34,098 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:54:34,709 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'a87f48a7-9d4c-90fc-96ee-3b4520e1906b'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'596'), (b'req-arrive-time', b'1753106074219'), (b'resp-start-time', b'1753106074815'), (b'x-envoy-upstream-service-time', b'594'), (b'set-cookie', b'acw_tc=a87f48a7-9d4c-90fc-96ee-3b4520e1906bcc5d75b98c8a470467eb77cf0a3c2c58;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:54:34 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:54:34,710 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:54:34,710 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:54:34,711 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:54:34,711 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:54:34,711 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:54:34,711 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'a87f48a7-9d4c-90fc-96ee-3b4520e1906b', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '596', 'req-arrive-time': '1753106074219', 'resp-start-time': '1753106074815', 'x-envoy-upstream-service-time': '594', 'set-cookie': 'acw_tc=a87f48a7-9d4c-90fc-96ee-3b4520e1906bcc5d75b98c8a470467eb77cf0a3c2c58;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:54:34 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:54:34,711 - openai._base_client - DEBUG - request_id: a87f48a7-9d4c-90fc-96ee-3b4520e1906b
2025-07-21 21:54:34,712 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: rental market regulation legal
2025-07-21 21:54:34,713 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:54:35,745 - httpcore.connection - DEBUG - close.started
2025-07-21 21:54:35,745 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:54:35,746 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=rental+market+regulation+legal&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:54:35,747 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:54:35,747 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:54:35,747 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-21 21:54:35,748 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215435.jpg
2025-07-21 21:54:35,749 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:54:36,528 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/7714794/pexels-photo-7714794.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 212006
2025-07-21 21:54:36,821 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215435.jpg
2025-07-21 21:54:36,821 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215435.jpg
2025-07-21 21:54:36,821 - controllers.article_controller - INFO - 第9张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215435.jpg
2025-07-21 21:54:36,821 - controllers.article_controller - INFO - 生成第10张配图，使用模型: pexels
2025-07-21 21:54:36,821 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 10/11
2025-07-21 21:54:36,822 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 10/11
2025-07-21 21:54:36,822 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:36,822 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:36,822 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:36,823 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:37,394 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第10张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:54:37,395 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:54:37,395 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:54:37,410 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D2C710>
2025-07-21 21:54:37,411 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CFA3D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:54:37,428 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D2C590>
2025-07-21 21:54:37,429 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:54:37,429 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:54:37,429 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:54:37,430 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:54:37,430 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:54:38,296 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'c9e5bc31-1e80-9a3a-9f4c-f5d1d336bce0'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'850'), (b'req-arrive-time', b'1753106077551'), (b'resp-start-time', b'1753106078401'), (b'x-envoy-upstream-service-time', b'847'), (b'set-cookie', b'acw_tc=c9e5bc31-1e80-9a3a-9f4c-f5d1d336bce03afe904e5081c3a25e7dc3ed34c447ee;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:54:38 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:54:38,297 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:54:38,298 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:54:38,298 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:54:38,298 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:54:38,299 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:54:38,299 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'c9e5bc31-1e80-9a3a-9f4c-f5d1d336bce0', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '850', 'req-arrive-time': '1753106077551', 'resp-start-time': '1753106078401', 'x-envoy-upstream-service-time': '847', 'set-cookie': 'acw_tc=c9e5bc31-1e80-9a3a-9f4c-f5d1d336bce03afe904e5081c3a25e7dc3ed34c447ee;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:54:38 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:54:38,299 - openai._base_client - DEBUG - request_id: c9e5bc31-1e80-9a3a-9f4c-f5d1d336bce0
2025-07-21 21:54:38,300 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: legal document housing rights
2025-07-21 21:54:38,300 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:54:39,797 - httpcore.connection - DEBUG - close.started
2025-07-21 21:54:39,798 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:54:40,370 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=legal+document+housing+rights&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:54:40,371 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:54:40,372 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:54:40,372 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-21 21:54:40,372 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215440.jpg
2025-07-21 21:54:40,373 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:54:41,178 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/8470844/pexels-photo-8470844.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 153659
2025-07-21 21:54:41,512 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215440.jpg
2025-07-21 21:54:41,512 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215440.jpg
2025-07-21 21:54:41,513 - controllers.article_controller - INFO - 第10张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215440.jpg
2025-07-21 21:54:41,513 - controllers.article_controller - INFO - 生成第11张配图，使用模型: pexels
2025-07-21 21:54:41,513 - services.image_service - INFO - 开始生成文章配图，标题: 《住房租赁条例》公布 9月15日起施行, 生图模型: pexels, AI模型: dashscope, 图片索引: 11/11
2025-07-21 21:54:41,513 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 《住房租赁条例》公布 9月15日起施行, AI模型: dashscope, 图片索引: 11/11
2025-07-21 21:54:41,513 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:41,514 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:41,514 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-21 21:54:41,514 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:42,103 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n《住房租赁条例》公布 9月15日起施行\n描述: 《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。\n文章内容预览: ```html 住房租赁新规范9月15日起正式施行 全面解读《住房租赁条例》，保障租房权益 2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法...\n\n图片信息：\n- 这是第11张图片，总共需要11张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-21 21:54:42,104 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-21 21:54:42,105 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-21 21:54:42,117 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008CD8680>
2025-07-21 21:54:42,118 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008CC4AD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-21 21:54:42,135 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008D2DD60>
2025-07-21 21:54:42,136 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-21 21:54:42,136 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-21 21:54:42,136 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-21 21:54:42,137 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-21 21:54:42,137 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-21 21:54:42,651 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'9e7a0358-b7e5-9887-be46-1d2634fef5be'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'499'), (b'req-arrive-time', b'1753106082257'), (b'resp-start-time', b'1753106082757'), (b'x-envoy-upstream-service-time', b'497'), (b'set-cookie', b'acw_tc=9e7a0358-b7e5-9887-be46-1d2634fef5be385119c1a6090fc506b0811be7c9827a;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Mon, 21 Jul 2025 13:54:42 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-21 21:54:42,651 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-21 21:54:42,651 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-21 21:54:42,651 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-21 21:54:42,652 - httpcore.http11 - DEBUG - response_closed.started
2025-07-21 21:54:42,652 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-21 21:54:42,652 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '9e7a0358-b7e5-9887-be46-1d2634fef5be', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '499', 'req-arrive-time': '1753106082257', 'resp-start-time': '1753106082757', 'x-envoy-upstream-service-time': '497', 'set-cookie': 'acw_tc=9e7a0358-b7e5-9887-be46-1d2634fef5be385119c1a6090fc506b0811be7c9827a;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Mon, 21 Jul 2025 13:54:42 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-21 21:54:42,652 - openai._base_client - DEBUG - request_id: 9e7a0358-b7e5-9887-be46-1d2634fef5be
2025-07-21 21:54:42,653 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: rental market regulation legal
2025-07-21 21:54:42,654 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-21 21:54:43,794 - httpcore.connection - DEBUG - close.started
2025-07-21 21:54:43,795 - httpcore.connection - DEBUG - close.complete
2025-07-21 21:54:43,797 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=rental+market+regulation+legal&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-21 21:54:43,798 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-21 21:54:43,798 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-21 21:54:43,798 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-21 21:54:43,799 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215443.jpg
2025-07-21 21:54:43,800 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-21 21:54:44,829 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/10859265/pexels-photo-10859265.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 213755
2025-07-21 21:54:45,129 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215443.jpg
2025-07-21 21:54:45,130 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215443.jpg
2025-07-21 21:54:45,130 - controllers.article_controller - INFO - 第11张配图处理完成，使用本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215443.jpg
2025-07-21 21:54:45,130 - controllers.article_controller - INFO - 在第16段后插入配图
2025-07-21 21:54:45,131 - controllers.article_controller - INFO - 在第15段后插入配图
2025-07-21 21:54:45,131 - controllers.article_controller - INFO - 在第14段后插入配图
2025-07-21 21:54:45,131 - controllers.article_controller - INFO - 在第12段后插入配图
2025-07-21 21:54:45,131 - controllers.article_controller - INFO - 在第10段后插入配图
2025-07-21 21:54:45,131 - controllers.article_controller - INFO - 在第9段后插入配图
2025-07-21 21:54:45,131 - controllers.article_controller - INFO - 在第8段后插入配图
2025-07-21 21:54:45,132 - controllers.article_controller - INFO - 在第6段后插入配图
2025-07-21 21:54:45,132 - controllers.article_controller - INFO - 在第4段后插入配图
2025-07-21 21:54:45,132 - controllers.article_controller - INFO - 在第3段后插入配图
2025-07-21 21:54:45,132 - controllers.article_controller - INFO - 在第2段后插入配图
2025-07-21 21:54:45,132 - controllers.article_controller - INFO - 配图处理完成，共插入11张图片
2025-07-21 21:54:45,137 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_住房租赁条例公布 9月15日起施行_20250721_215445.html
2025-07-21 21:54:45,137 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-21 21:54:45,862 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-21 21:54:45,863 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 11084
2025-07-21 21:54:45,867 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-21 21:54:45,867 - controllers.article_controller - INFO - 内容清理完成，移除了 84 个字符，清理后长度: 11084
2025-07-21 21:54:45,871 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_住房租赁条例公布 9月15日起施行_20250721_215445.html
2025-07-21 21:54:45,871 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=《住房租赁条例》公布 9月15日起施行, 内容前100字=<div style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rg, 图片数=12
2025-07-21 21:54:45,872 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:45,872 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:54:45,878 - services.history_service - INFO - 添加生成历史记录: 《住房租赁条例》公布 9月15日起施行
2025-07-21 21:54:45,879 - controllers.article_controller - INFO - 文章生成完成
2025-07-21 21:54:45,879 - controllers.article_controller - INFO - 生成结果预览: 标题=《住房租赁条例》公布 9月15日起施行, 内容长度=11084, 配图数量=11
2025-07-21 21:54:45,880 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-21 21:54:45,890 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:54:45,895 - root - INFO - 获取生成历史请求
2025-07-21 21:54:45,898 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:54:45,902 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215347.jpg
2025-07-21 21:54:45,903 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215352.jpg
2025-07-21 21:54:45,904 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215355.jpg
2025-07-21 21:54:45,904 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215407.jpg
2025-07-21 21:54:45,904 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215417.jpg
2025-07-21 21:54:45,905 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215347.jpg
2025-07-21 21:54:45,905 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215352.jpg
2025-07-21 21:54:45,906 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215355.jpg
2025-07-21 21:54:45,907 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215407.jpg
2025-07-21 21:54:45,910 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215421.jpg
2025-07-21 21:54:45,912 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215417.jpg
2025-07-21 21:54:45,916 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215347.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,918 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215352.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,918 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215421.jpg
2025-07-21 21:54:45,919 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215355.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,920 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215407.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,921 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215417.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,922 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215421.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,947 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215427.jpg
2025-07-21 21:54:45,948 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215427.jpg
2025-07-21 21:54:45,955 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215432.jpg
2025-07-21 21:54:45,956 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215432.jpg
2025-07-21 21:54:45,956 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215427.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,959 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215435.jpg
2025-07-21 21:54:45,962 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215435.jpg
2025-07-21 21:54:45,962 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215432.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,964 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215440.jpg
2025-07-21 21:54:45,966 - root - INFO - 请求: GET /cache/article_pexels_住房租赁条例公布 9月15日起施行_20250721_215443.jpg
2025-07-21 21:54:45,966 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215440.jpg
2025-07-21 21:54:45,967 - root - INFO - 访问缓存文件: article_pexels_住房租赁条例公布 9月15日起施行_20250721_215443.jpg
2025-07-21 21:54:45,967 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215435.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,969 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215443.jpg HTTP/1.1" 200 -
2025-07-21 21:54:45,970 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:54:45] "GET /cache/article_pexels_住房租赁条例公布%209月15日起施行_20250721_215440.jpg HTTP/1.1" 200 -
2025-07-21 21:55:01,698 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:55:01,699 - root - INFO - 获取生成历史请求
2025-07-21 21:55:01,700 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:55:01,700 - root - INFO - 获取发布历史请求
2025-07-21 21:55:01,701 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:55:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:55:01,703 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:55:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:55:31,690 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:55:31,691 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:55:31,691 - root - INFO - 获取生成历史请求
2025-07-21 21:55:31,691 - root - INFO - 获取发布历史请求
2025-07-21 21:55:31,693 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:55:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:55:31,694 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:55:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:55:35,059 - root - INFO - 请求: POST /api/save-draft
2025-07-21 21:55:35,059 - root - INFO - 保存草稿请求
2025-07-21 21:55:35,060 - controllers.article_controller - INFO - 【唯一请求ID】1210813c-07b6-410e-b322-621d12c31043 - save_draft
2025-07-21 21:55:35,060 - controllers.article_controller - INFO - 开始保存草稿: 《住房租赁条例》公布 9月15日起施行
2025-07-21 21:55:35,061 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:55:35,061 - controllers.article_controller - INFO - 获取微信access_token
2025-07-21 21:55:35,063 - services.wechat_service - INFO - 开始获取access_token，AppID: wx913534d3189f509f
2025-07-21 21:55:35,065 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:35,583 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "GET /cgi-bin/token?grant_type=client_credential&appid=wx913534d3189f509f&secret=b2113edc5d34472868e00d0ef911538f HTTP/1.1" 200 173
2025-07-21 21:55:35,586 - services.wechat_service - INFO - access_token获取成功，有效期: 7200秒
2025-07-21 21:55:35,587 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215347.jpg
2025-07-21 21:55:35,617 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:36,550 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 155
2025-07-21 21:55:36,551 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg
2025-07-21 21:55:36,552 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215347.jpg, 类型: image
2025-07-21 21:55:36,554 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:38,077 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 243
2025-07-21 21:55:38,077 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ90aSHP_QJuOJBncvadEhrrZWeeacU7oVbZ1uOhIlu_H
2025-07-21 21:55:38,078 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215347.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ90aSHP_QJuOJBncvadEhrrZWeeacU7oVbZ1uOhIlu_H
2025-07-21 21:55:38,078 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215352.jpg
2025-07-21 21:55:38,080 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:38,536 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 155
2025-07-21 21:55:38,536 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg
2025-07-21 21:55:38,537 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215352.jpg, 类型: image
2025-07-21 21:55:38,538 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:40,046 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 243
2025-07-21 21:55:40,046 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ6D-TxQH1vVWm2xwzkoLQWhJJP5nvjaeXAumVFDxGaoz
2025-07-21 21:55:40,047 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215352.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ6D-TxQH1vVWm2xwzkoLQWhJJP5nvjaeXAumVFDxGaoz
2025-07-21 21:55:40,047 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215355.jpg
2025-07-21 21:55:40,048 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:40,927 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 154
2025-07-21 21:55:40,928 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafkXfSqoNNbJZRmrNJYFicrfWVrHibADddP7WZaS72pfOuO1ibMvqWeNwYQ/0?from=appmsg
2025-07-21 21:55:40,928 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215355.jpg, 类型: image
2025-07-21 21:55:40,930 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:42,460 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 242
2025-07-21 21:55:42,460 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ-vwh4h9dx0LZ75ArdNf2G8Neejsjz_-dOSOVzaamHWi
2025-07-21 21:55:42,461 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215355.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafkXfSqoNNbJZRmrNJYFicrfWVrHibADddP7WZaS72pfOuO1ibMvqWeNwYQ/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ-vwh4h9dx0LZ75ArdNf2G8Neejsjz_-dOSOVzaamHWi
2025-07-21 21:55:42,462 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215407.jpg
2025-07-21 21:55:42,463 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:42,894 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 155
2025-07-21 21:55:42,895 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg
2025-07-21 21:55:42,896 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215407.jpg, 类型: image
2025-07-21 21:55:42,897 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:44,481 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 243
2025-07-21 21:55:44,483 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ-q0LLAjK12toetbrx7G5l4BtUsh8ZUowg1Yn3Ub8R_5
2025-07-21 21:55:44,484 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215407.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ-q0LLAjK12toetbrx7G5l4BtUsh8ZUowg1Yn3Ub8R_5
2025-07-21 21:55:44,484 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215417.jpg
2025-07-21 21:55:44,487 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:45,239 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 154
2025-07-21 21:55:45,240 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViaflLdYAR03w6FSKQ40ahOXOqk3b4k0IibibgDxZPzDibSSwLeuQAE0rMG3A/0?from=appmsg
2025-07-21 21:55:45,241 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215417.jpg, 类型: image
2025-07-21 21:55:45,242 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:46,637 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 242
2025-07-21 21:55:46,638 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQzhoP0jpQn7CqVjZf-YdIQRUbiPPXa4xskkckwW88fDi
2025-07-21 21:55:46,638 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215417.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViaflLdYAR03w6FSKQ40ahOXOqk3b4k0IibibgDxZPzDibSSwLeuQAE0rMG3A/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQzhoP0jpQn7CqVjZf-YdIQRUbiPPXa4xskkckwW88fDi
2025-07-21 21:55:46,638 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215421.jpg
2025-07-21 21:55:46,640 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:47,661 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 152
2025-07-21 21:55:47,662 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViaftvPR30c9zG9cg5e8kRAK9abxeDEsCNFY64DiapYB8ePUWqILo1JDRjQ/0?from=appmsg
2025-07-21 21:55:47,663 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215421.jpg, 类型: image
2025-07-21 21:55:47,665 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:49,194 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 240
2025-07-21 21:55:49,195 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ33-7A_Jad6Ia1HU6YPK0eJzYTMGhExGWFiuv_p8xCef
2025-07-21 21:55:49,195 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215421.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViaftvPR30c9zG9cg5e8kRAK9abxeDEsCNFY64DiapYB8ePUWqILo1JDRjQ/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ33-7A_Jad6Ia1HU6YPK0eJzYTMGhExGWFiuv_p8xCef
2025-07-21 21:55:49,195 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215427.jpg
2025-07-21 21:55:49,196 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:50,480 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 153
2025-07-21 21:55:50,480 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafrrNOC3u0vjSzetDm1z1wwUXiaN4BSQDNONepicktEXgFy9JTK412Ifew/0?from=appmsg
2025-07-21 21:55:50,480 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215427.jpg, 类型: image
2025-07-21 21:55:50,482 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:52,013 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 241
2025-07-21 21:55:52,014 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ2eGCmQ8dBw6YJIN3rfE2JgS55aNshPKAqzm19KTA8e3
2025-07-21 21:55:52,015 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215427.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafrrNOC3u0vjSzetDm1z1wwUXiaN4BSQDNONepicktEXgFy9JTK412Ifew/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ2eGCmQ8dBw6YJIN3rfE2JgS55aNshPKAqzm19KTA8e3
2025-07-21 21:55:52,015 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215432.jpg
2025-07-21 21:55:52,016 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:52,782 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 155
2025-07-21 21:55:52,782 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafibUViaVQp97cvbvMnRLaO90KTKkbDEIVLicVEdM0ISpHIgasuibhrF6DSQ/0?from=appmsg
2025-07-21 21:55:52,783 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215432.jpg, 类型: image
2025-07-21 21:55:52,784 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:55:54,310 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 243
2025-07-21 21:55:54,312 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ54G_2ghNBc3liLFL89_rs-nrAXxnMIPYExi6V6XoHJL
2025-07-21 21:55:54,312 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215432.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafibUViaVQp97cvbvMnRLaO90KTKkbDEIVLicVEdM0ISpHIgasuibhrF6DSQ/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ54G_2ghNBc3liLFL89_rs-nrAXxnMIPYExi6V6XoHJL
2025-07-21 21:55:54,312 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215435.jpg
2025-07-21 21:55:54,313 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:56:02,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:56:02,184 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:56:02,184 - root - INFO - 获取生成历史请求
2025-07-21 21:56:02,184 - root - INFO - 获取发布历史请求
2025-07-21 21:56:02,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:56:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:56:02,186 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:56:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:56:09,895 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 154
2025-07-21 21:56:09,895 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafkXfSqoNNbJZRmrNJYFicrfWVrHibADddP7WZaS72pfOuO1ibMvqWeNwYQ/0?from=appmsg
2025-07-21 21:56:09,896 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215435.jpg, 类型: image
2025-07-21 21:56:09,897 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:56:11,508 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 242
2025-07-21 21:56:11,509 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ1geo0oS8vx863AoHJYZAXUchU9kyNn3353WXyP-D2Db
2025-07-21 21:56:11,510 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215435.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafkXfSqoNNbJZRmrNJYFicrfWVrHibADddP7WZaS72pfOuO1ibMvqWeNwYQ/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ1geo0oS8vx863AoHJYZAXUchU9kyNn3353WXyP-D2Db
2025-07-21 21:56:11,510 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215440.jpg
2025-07-21 21:56:11,512 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:56:12,350 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 154
2025-07-21 21:56:12,351 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafVMHdT8QONd25Yr9PAbshtE993ExvUe3kzDibjuWibZCpPXDsiafKAwE0Q/0?from=appmsg
2025-07-21 21:56:12,353 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215440.jpg, 类型: image
2025-07-21 21:56:12,355 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:56:13,866 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 242
2025-07-21 21:56:13,867 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ62V4eenGrN6ROOOlQ4IP43XGMbkPGABf-BO9pnqpdPn
2025-07-21 21:56:13,867 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215440.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafVMHdT8QONd25Yr9PAbshtE993ExvUe3kzDibjuWibZCpPXDsiafKAwE0Q/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ62V4eenGrN6ROOOlQ4IP43XGMbkPGABf-BO9pnqpdPn
2025-07-21 21:56:13,867 - services.wechat_service - INFO - 开始上传图文消息图片: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215443.jpg
2025-07-21 21:56:13,868 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:56:14,324 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/media/uploadimg?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 153
2025-07-21 21:56:14,325 - services.wechat_service - INFO - 图片上传成功，URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafrrNOC3u0vjSzetDm1z1wwUXiaN4BSQDNONepicktEXgFy9JTK412Ifew/0?from=appmsg
2025-07-21 21:56:14,326 - services.wechat_service - INFO - 开始上传永久素材: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215443.jpg, 类型: image
2025-07-21 21:56:14,328 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:56:15,848 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/material/add_material?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA&type=image HTTP/1.1" 200 241
2025-07-21 21:56:15,848 - services.wechat_service - INFO - 永久素材上传成功，media_id: MEH-ro_tay7nl2G5RPAwQ_Lw3g8B6jbg2amCrXlIcrER1X-9vHKl8nwBq4cRyVw6
2025-07-21 21:56:15,848 - controllers.article_controller - INFO - 图片上传成功，本地路径: cache\article_pexels_住房租赁条例公布 9月15日起施行_20250721_215443.jpg, 微信URL: http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafrrNOC3u0vjSzetDm1z1wwUXiaN4BSQDNONepicktEXgFy9JTK412Ifew/0?from=appmsg, media_id: MEH-ro_tay7nl2G5RPAwQ_Lw3g8B6jbg2amCrXlIcrER1X-9vHKl8nwBq4cRyVw6
2025-07-21 21:56:15,849 - controllers.article_controller - INFO - [草稿保存] 标题=《住房租赁条例》公布 9月15日起施行, 内容前100字=<div style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rg, 图片数=12
2025-07-21 21:56:15,849 - services.config_service - INFO - 从文件加载配置成功
2025-07-21 21:56:15,849 - controllers.article_controller - INFO - 开始创建草稿
2025-07-21 21:56:15,849 - services.draft_service - INFO - 构建草稿数据，标题: 《住房租赁条例》公布 9月15日起施行
2025-07-21 21:56:15,850 - services.draft_service - DEBUG - 草稿数据构建完成: {
  "articles": [
    {
      "title": "《住房租赁条例》公布 9月15日起施行",
      "author": "AI笔记",
      "digest": "《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。",
      "content": "<div style=\"font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px; font-size: 16px;\">\n    \n    <!-- 1. 封面区块 (图片+文字叠加效果) -->\n    <section style=\"box-shadow: rgba(0, 0, 0, 0.12) 0px 8px 20px; overflow: hidden;\">\n        <div style=\"display: flex; flex-direction: column;\">\n            <img alt=\"住房租赁条例封面图\" src=\"https://example.com/housing-rental-regulation.jpg\" style=\"width: 100%; height: auto; display: block;\">\n            <div style=\"margin-top: -180px; padding: 25px;\">\n                <h1 style=\"font-size: 35px; font-weight: 900; color: white; margin: 0px 0px 5px; letter-spacing: -0.02em; text-shadow: rgba(0, 0, 0, 0.3) 2px 2px 4px;\">住房租赁新规范<br><span style=\"font-size: 40px; font-weight: 800;\">9月15日起正式施行</span></h1>\n                <h2 style=\"font-size: 16px; font-weight: 500; color: rgb(255, 255, 255); margin: 0px; opacity: 0.9; text-shadow: rgba(0, 0, 0, 0.4) 1px 1px 3px;\">全面解读《住房租赁条例》，保障租房权益</h2>\n            </div>\n        </div>\n    </section>\n    \n    <!-- 2. 引言区块 -->\n    <section style=\"background-color: rgb(255, 255, 255); border-radius: 12px; margin: 10px; padding: 24px; box-shadow: rgba(0, 0, 0, 0.06) 0px 4px 16px;\">\n        <p style=\"font-size: 19px; font-weight: 500; color: rgb(58, 123, 213); margin-top: 0px; margin-bottom: 16px; line-height: 1.4;\">2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法治化的新阶段。</p>\n        <p style=\"font-size: 16px; color: rgb(85, 85, 85); line-height: 1.7; margin-bottom: 0px;\">随着城市化进程的加快和人口流动的加剧，住房租赁已成为越来越多人的居住选择。然而，租赁市场中长期存在的合同不规范、押金难退、恶意涨租等问题，也困扰着无数租客。此次《住房租赁条例》的发布，正是对这些问题的有力回应，为租户和房东提供了更加清晰的权益保障。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n    </section>\n    \n    <!-- 3. 身心平衡区块 -->\n    <section style=\"margin: 24px 10px; background-color: rgb(255, 255, 255); border-radius: 12px; overflow: hidden; box-shadow: rgba(0, 0, 0, 0.06) 0px 4px 16px;\">\n        <div style=\"height: 8px; background-color: rgb(58, 123, 213);\"></div>\n        <div style=\"padding: 24px;\">\n            <div style=\"display: flex; align-items: center; margin-bottom: 16px;\">\n                <svg style=\"width: 28px; height: 28px; fill: rgb(58, 123, 213); margin-right: 12px;\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12,8L10.67,8.09C9.81,7.07 7.4,4.5 5,4.5C5,4.5 3.03,7.46 4.96,11.41C6.32,14.15 9.06,15.6 10.34,16.07C10.13,17.04 9.84,18.4 10,20C10,20 14,19.8 15.15,17.2C15.15,17.2 10.62,17.9 11.21,16.04C11.21,16.04 14.25,14.5 15.33,13.54C16.41,12.58 17.74,10.85 18.5,8.92C19.04,7.5 19,6 19,6C19,6 17.07,6.96 16.5,7.5C16.5,7.5 15.57,5.38 13.5,5.5C11.43,5.63 11,8 11,8\"></path>\n                </svg>\n                <h2 style=\"font-size: 24px; font-weight: 600; color: rgb(58, 123, 213); margin: 0px;\">新规核心内容解读</h2>\n            </div>\n            <p style=\"font-size: 16px; line-height: 1.8; color: rgb(51, 51, 51); margin-bottom: 16px;\">《住房租赁条例》共分为六章四十六条，涵盖了租赁合同、押金管理、租金调控、纠纷处理等多个方面，旨在构建一个公平、透明、可持续的住房租赁市场。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n            <p style=\"font-size: 16px; line-height: 1.8; color: rgb(51, 51, 51); margin-bottom: 16px;\">该条例明确要求租赁合同必须采用书面形式，并对租赁期限、租金调整、押金退还等关键内容作出规范。同时，首次提出“租金指导价”机制，防止部分房东恶意涨价，保障租户的基本居住权益。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafkXfSqoNNbJZRmrNJYFicrfWVrHibADddP7WZaS72pfOuO1ibMvqWeNwYQ/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n            \n            <div style=\"background-color: #f0f7ff; border-left: 4px solid #3a7bd5; padding: 16px; margin: 20px 0; border-radius: 0 8px 8px 0;\">\n                <p style=\"font-size: 17px; font-weight: 500; color: #333; margin: 0 0 8px 0;\">新规落地后，租客可重点关注以下几点：</p>\n                <ul style=\"margin: 0; padding-left: 20px; color: #444;\">\n                    <li style=\"margin-bottom: 8px;\">签订书面合同，明确租赁期限与租金标准</li>\n                    <li style=\"margin-bottom: 8px;\">押金不得超过两个月租金，退租时须在15日内退还</li>\n                    <li style=\"margin-bottom: 0;\">租金年涨幅不得超过当地政府公布的指导价上限</li>\n                </ul>\n            </div>\n        </div>\n    </section>\n    \n    <!-- 4. 食养生活区块 -->\n    <section style=\"margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);\">\n        <div style=\"height: 8px; background-color: #00b09b;\"></div>\n        <div style=\"padding: 24px;\">\n            <div style=\"display: flex; align-items: center; margin-bottom: 16px;\">\n                <svg style=\"width: 28px; height: 28px; fill: #00b09b; margin-right: 12px;\" viewBox=\"0 0 24 24\">\n                    <path d=\"M15.5,21L14,8H16.23L15.1,3.46L16.84,3L18.09,8H22L20.5,21H15.5M5,11H10A3,3 0 0,1 13,14H2A3,3 0 0,1 5,11M13,18A3,3 0 0,1 10,21H5A3,3 0 0,1 2,18H13M2,12H13V17H2V12Z\"></path>\n                </svg>\n                <h2 style=\"font-size: 24px; font-weight: 600; color: #00b09b; margin: 0;\">租房权益保障机制</h2>\n            </div>\n            \n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;\">除了合同规范外，条例还首次引入了“住房租赁信用管理”机制，建立租户与房东的信用档案。对于违规行为，如房东恶意克扣押金、租客拖欠租金等，将纳入信用记录，影响其未来的租赁行为。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n            \n            <div style=\"margin: 20px 0;\">\n                <div style=\"display: flex; justify-content: space-between; margin-bottom: 10px;\">\n                    <div style=\"flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px; margin-right: 10px;\">\n                        <div style=\"color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;\">信用管理</div>\n                        <p style=\"margin: 0; color: #555; font-size: 14px;\">建立租赁信用档案，规范租赁行为</p>\n                    </div>\n                    <div style=\"flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px;\">\n                        <div style=\"color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;\">押金监管</div>\n                        <p style=\"margin: 0; color: #555; font-size: 14px;\">押金不得超过两个月租金，需存入监管账户</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViaflLdYAR03w6FSKQ40ahOXOqk3b4k0IibibgDxZPzDibSSwLeuQAE0rMG3A/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                    </div>\n                </div>\n                <div style=\"display: flex; justify-content: space-between;\">\n                    <div style=\"flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px; margin-right: 10px;\">\n                        <div style=\"color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;\">租金调控</div>\n                        <p style=\"margin: 0; color: #555; font-size: 14px;\">租金年涨幅不得高于政府指导价上限</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViaftvPR30c9zG9cg5e8kRAK9abxeDEsCNFY64DiapYB8ePUWqILo1JDRjQ/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                    </div>\n                    <div style=\"flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px;\">\n                        <div style=\"color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;\">纠纷调解</div>\n                        <p style=\"margin: 0; color: #555; font-size: 14px;\">设立租赁纠纷调解平台，提升处理效率</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafrrNOC3u0vjSzetDm1z1wwUXiaN4BSQDNONepicktEXgFy9JTK412Ifew/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                    </div>\n                </div>\n            </div>\n            \n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;\">此外，条例还鼓励各地建立住房租赁信息平台，实现房源信息共享、合同备案、信用查询等功能，提升租赁市场的透明度和规范性。</p>\n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;\">这一系列制度安排，标志着我国住房租赁市场正朝着更加法治化、规范化、智能化的方向迈进。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafibUViaVQp97cvbvMnRLaO90KTKkbDEIVLicVEdM0ISpHIgasuibhrF6DSQ/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n        </div>\n    </section>\n    \n    <!-- 5. 动中养生区块 -->\n    <section style=\"margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);\">\n        <div style=\"height: 8px; background-color: #ff7e5f;\"></div>\n        <div style=\"padding: 24px;\">\n            <div style=\"display: flex; align-items: center; margin-bottom: 16px;\">\n                <svg style=\"width: 28px; height: 28px; fill: #ff7e5f; margin-right: 12px;\" viewBox=\"0 0 24 24\">\n                    <path d=\"M7,5H10V19H7V5M14,5H17V19H14V5Z\"></path>\n                </svg>\n                <h2 style=\"font-size: 24px; font-weight: 600; color: #ff7e5f; margin: 0;\">租赁市场监管与执行</h2>\n            </div>\n            \n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;\">为了确保《住房租赁条例》的有效实施，各级住建部门将联合市场监管、公安、税务等多部门，加强对租赁市场的日常监管。</p>\n            \n            <div style=\"background-color: #fff4f0; border-radius: 12px; padding: 20px; margin: 20px 0;\">\n                <div style=\"display: flex; align-items: center; margin-bottom: 12px;\">\n                    <svg style=\"width: 24px; height: 24px; fill: #ff7e5f; margin-right: 10px;\" viewBox=\"0 0 24 24\">\n                        <path d=\"M13,9H11V7H13V9M13,17H11V11H13V17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"></path>\n                    </svg>\n                    <p style=\"font-size: 18px; font-weight: 500; color: #ff7e5f; margin: 0;\">监管重点包括：</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafkXfSqoNNbJZRmrNJYFicrfWVrHibADddP7WZaS72pfOuO1ibMvqWeNwYQ/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                </div>\n                <p style=\"font-size: 15px; color: #555; margin: 0 0 12px 0;\">各地将设立专项检查组，对租赁市场进行常态化巡查。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafVMHdT8QONd25Yr9PAbshtE993ExvUe3kzDibjuWibZCpPXDsiafKAwE0Q/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                <ul style=\"margin: 0; padding-left: 20px; color: #444;\">\n                    <li style=\"margin-bottom: 8px;\">严查“黑中介”和“二房东”违规转租行为</li>\n                    <li style=\"margin-bottom: 8px;\">监督租赁合同备案情况，确保信息真实有效</li>\n                    <li style=\"margin-bottom: 0;\">打击虚假房源、哄抬租金等市场乱象</li>\n                </ul>\n            </div>\n            \n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;\">同时，条例明确要求各地设立住房租赁投诉平台，租户可通过线上渠道反映问题，相关部门将在7个工作日内予以处理。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafrrNOC3u0vjSzetDm1z1wwUXiaN4BSQDNONepicktEXgFy9JTK412Ifew/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;\">通过强化监管与执法，确保租赁市场的公平有序，维护广大租户的合法权益。</p>\n        </div>\n    </section>\n    \n    <!-- 6. 眠养生机区块 -->\n    <section style=\"margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);\">\n        <div style=\"height: 8px; background-color: #6a11cb;\"></div>",
      "content_source_url": "",
      "thumb_media_id": "MEH-ro_tay7nl2G5RPAwQ90aSHP_QJuOJBncvadEhrrZWeeacU7oVbZ1uOhIlu_H",
      "show_cover_pic": 1,
      "need_open_comment": 0,
      "only_fans_can_comment": 0
    }
  ]
}
2025-07-21 21:56:15,850 - services.draft_service - INFO - 草稿数据验证通过
2025-07-21 21:56:15,850 - services.draft_service - INFO - 开始创建草稿
2025-07-21 21:56:15,850 - services.draft_service - DEBUG - 草稿数据: {
  "articles": [
    {
      "title": "《住房租赁条例》公布 9月15日起施行",
      "author": "AI笔记",
      "digest": "《住房租赁条例》正式公布，9月15日起施行，明确租赁双方权益、规范租金调整机制、禁止暴力驱逐租客，为租房市场带来更公平透明的环境。",
      "content": "<div style=\"font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px; font-size: 16px;\">\n    \n    <!-- 1. 封面区块 (图片+文字叠加效果) -->\n    <section style=\"box-shadow: rgba(0, 0, 0, 0.12) 0px 8px 20px; overflow: hidden;\">\n        <div style=\"display: flex; flex-direction: column;\">\n            <img alt=\"住房租赁条例封面图\" src=\"https://example.com/housing-rental-regulation.jpg\" style=\"width: 100%; height: auto; display: block;\">\n            <div style=\"margin-top: -180px; padding: 25px;\">\n                <h1 style=\"font-size: 35px; font-weight: 900; color: white; margin: 0px 0px 5px; letter-spacing: -0.02em; text-shadow: rgba(0, 0, 0, 0.3) 2px 2px 4px;\">住房租赁新规范<br><span style=\"font-size: 40px; font-weight: 800;\">9月15日起正式施行</span></h1>\n                <h2 style=\"font-size: 16px; font-weight: 500; color: rgb(255, 255, 255); margin: 0px; opacity: 0.9; text-shadow: rgba(0, 0, 0, 0.4) 1px 1px 3px;\">全面解读《住房租赁条例》，保障租房权益</h2>\n            </div>\n        </div>\n    </section>\n    \n    <!-- 2. 引言区块 -->\n    <section style=\"background-color: rgb(255, 255, 255); border-radius: 12px; margin: 10px; padding: 24px; box-shadow: rgba(0, 0, 0, 0.06) 0px 4px 16px;\">\n        <p style=\"font-size: 19px; font-weight: 500; color: rgb(58, 123, 213); margin-top: 0px; margin-bottom: 16px; line-height: 1.4;\">2024年9月15日起，《住房租赁条例》将正式施行。这一法规的出台，标志着我国住房租赁市场迈入更加规范化、法治化的新阶段。</p>\n        <p style=\"font-size: 16px; color: rgb(85, 85, 85); line-height: 1.7; margin-bottom: 0px;\">随着城市化进程的加快和人口流动的加剧，住房租赁已成为越来越多人的居住选择。然而，租赁市场中长期存在的合同不规范、押金难退、恶意涨租等问题，也困扰着无数租客。此次《住房租赁条例》的发布，正是对这些问题的有力回应，为租户和房东提供了更加清晰的权益保障。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n    </section>\n    \n    <!-- 3. 身心平衡区块 -->\n    <section style=\"margin: 24px 10px; background-color: rgb(255, 255, 255); border-radius: 12px; overflow: hidden; box-shadow: rgba(0, 0, 0, 0.06) 0px 4px 16px;\">\n        <div style=\"height: 8px; background-color: rgb(58, 123, 213);\"></div>\n        <div style=\"padding: 24px;\">\n            <div style=\"display: flex; align-items: center; margin-bottom: 16px;\">\n                <svg style=\"width: 28px; height: 28px; fill: rgb(58, 123, 213); margin-right: 12px;\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12,8L10.67,8.09C9.81,7.07 7.4,4.5 5,4.5C5,4.5 3.03,7.46 4.96,11.41C6.32,14.15 9.06,15.6 10.34,16.07C10.13,17.04 9.84,18.4 10,20C10,20 14,19.8 15.15,17.2C15.15,17.2 10.62,17.9 11.21,16.04C11.21,16.04 14.25,14.5 15.33,13.54C16.41,12.58 17.74,10.85 18.5,8.92C19.04,7.5 19,6 19,6C19,6 17.07,6.96 16.5,7.5C16.5,7.5 15.57,5.38 13.5,5.5C11.43,5.63 11,8 11,8\"></path>\n                </svg>\n                <h2 style=\"font-size: 24px; font-weight: 600; color: rgb(58, 123, 213); margin: 0px;\">新规核心内容解读</h2>\n            </div>\n            <p style=\"font-size: 16px; line-height: 1.8; color: rgb(51, 51, 51); margin-bottom: 16px;\">《住房租赁条例》共分为六章四十六条，涵盖了租赁合同、押金管理、租金调控、纠纷处理等多个方面，旨在构建一个公平、透明、可持续的住房租赁市场。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n            <p style=\"font-size: 16px; line-height: 1.8; color: rgb(51, 51, 51); margin-bottom: 16px;\">该条例明确要求租赁合同必须采用书面形式，并对租赁期限、租金调整、押金退还等关键内容作出规范。同时，首次提出“租金指导价”机制，防止部分房东恶意涨价，保障租户的基本居住权益。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafkXfSqoNNbJZRmrNJYFicrfWVrHibADddP7WZaS72pfOuO1ibMvqWeNwYQ/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n            \n            <div style=\"background-color: #f0f7ff; border-left: 4px solid #3a7bd5; padding: 16px; margin: 20px 0; border-radius: 0 8px 8px 0;\">\n                <p style=\"font-size: 17px; font-weight: 500; color: #333; margin: 0 0 8px 0;\">新规落地后，租客可重点关注以下几点：</p>\n                <ul style=\"margin: 0; padding-left: 20px; color: #444;\">\n                    <li style=\"margin-bottom: 8px;\">签订书面合同，明确租赁期限与租金标准</li>\n                    <li style=\"margin-bottom: 8px;\">押金不得超过两个月租金，退租时须在15日内退还</li>\n                    <li style=\"margin-bottom: 0;\">租金年涨幅不得超过当地政府公布的指导价上限</li>\n                </ul>\n            </div>\n        </div>\n    </section>\n    \n    <!-- 4. 食养生活区块 -->\n    <section style=\"margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);\">\n        <div style=\"height: 8px; background-color: #00b09b;\"></div>\n        <div style=\"padding: 24px;\">\n            <div style=\"display: flex; align-items: center; margin-bottom: 16px;\">\n                <svg style=\"width: 28px; height: 28px; fill: #00b09b; margin-right: 12px;\" viewBox=\"0 0 24 24\">\n                    <path d=\"M15.5,21L14,8H16.23L15.1,3.46L16.84,3L18.09,8H22L20.5,21H15.5M5,11H10A3,3 0 0,1 13,14H2A3,3 0 0,1 5,11M13,18A3,3 0 0,1 10,21H5A3,3 0 0,1 2,18H13M2,12H13V17H2V12Z\"></path>\n                </svg>\n                <h2 style=\"font-size: 24px; font-weight: 600; color: #00b09b; margin: 0;\">租房权益保障机制</h2>\n            </div>\n            \n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;\">除了合同规范外，条例还首次引入了“住房租赁信用管理”机制，建立租户与房东的信用档案。对于违规行为，如房东恶意克扣押金、租客拖欠租金等，将纳入信用记录，影响其未来的租赁行为。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafsKQjN48yWWQP4X15e1kvHUqaqRVtyKoiafIkagXkYK5ibNSlQEaCicichw/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n            \n            <div style=\"margin: 20px 0;\">\n                <div style=\"display: flex; justify-content: space-between; margin-bottom: 10px;\">\n                    <div style=\"flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px; margin-right: 10px;\">\n                        <div style=\"color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;\">信用管理</div>\n                        <p style=\"margin: 0; color: #555; font-size: 14px;\">建立租赁信用档案，规范租赁行为</p>\n                    </div>\n                    <div style=\"flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px;\">\n                        <div style=\"color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;\">押金监管</div>\n                        <p style=\"margin: 0; color: #555; font-size: 14px;\">押金不得超过两个月租金，需存入监管账户</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViaflLdYAR03w6FSKQ40ahOXOqk3b4k0IibibgDxZPzDibSSwLeuQAE0rMG3A/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                    </div>\n                </div>\n                <div style=\"display: flex; justify-content: space-between;\">\n                    <div style=\"flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px; margin-right: 10px;\">\n                        <div style=\"color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;\">租金调控</div>\n                        <p style=\"margin: 0; color: #555; font-size: 14px;\">租金年涨幅不得高于政府指导价上限</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViaftvPR30c9zG9cg5e8kRAK9abxeDEsCNFY64DiapYB8ePUWqILo1JDRjQ/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                    </div>\n                    <div style=\"flex: 1; background-color: #f8f8f8; padding: 16px; border-radius: 10px;\">\n                        <div style=\"color: #00b09b; font-weight: 600; font-size: 18px; margin-bottom: 8px;\">纠纷调解</div>\n                        <p style=\"margin: 0; color: #555; font-size: 14px;\">设立租赁纠纷调解平台，提升处理效率</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafrrNOC3u0vjSzetDm1z1wwUXiaN4BSQDNONepicktEXgFy9JTK412Ifew/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                    </div>\n                </div>\n            </div>\n            \n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;\">此外，条例还鼓励各地建立住房租赁信息平台，实现房源信息共享、合同备案、信用查询等功能，提升租赁市场的透明度和规范性。</p>\n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;\">这一系列制度安排，标志着我国住房租赁市场正朝着更加法治化、规范化、智能化的方向迈进。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafibUViaVQp97cvbvMnRLaO90KTKkbDEIVLicVEdM0ISpHIgasuibhrF6DSQ/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n        </div>\n    </section>\n    \n    <!-- 5. 动中养生区块 -->\n    <section style=\"margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);\">\n        <div style=\"height: 8px; background-color: #ff7e5f;\"></div>\n        <div style=\"padding: 24px;\">\n            <div style=\"display: flex; align-items: center; margin-bottom: 16px;\">\n                <svg style=\"width: 28px; height: 28px; fill: #ff7e5f; margin-right: 12px;\" viewBox=\"0 0 24 24\">\n                    <path d=\"M7,5H10V19H7V5M14,5H17V19H14V5Z\"></path>\n                </svg>\n                <h2 style=\"font-size: 24px; font-weight: 600; color: #ff7e5f; margin: 0;\">租赁市场监管与执行</h2>\n            </div>\n            \n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;\">为了确保《住房租赁条例》的有效实施，各级住建部门将联合市场监管、公安、税务等多部门，加强对租赁市场的日常监管。</p>\n            \n            <div style=\"background-color: #fff4f0; border-radius: 12px; padding: 20px; margin: 20px 0;\">\n                <div style=\"display: flex; align-items: center; margin-bottom: 12px;\">\n                    <svg style=\"width: 24px; height: 24px; fill: #ff7e5f; margin-right: 10px;\" viewBox=\"0 0 24 24\">\n                        <path d=\"M13,9H11V7H13V9M13,17H11V11H13V17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"></path>\n                    </svg>\n                    <p style=\"font-size: 18px; font-weight: 500; color: #ff7e5f; margin: 0;\">监管重点包括：</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafkXfSqoNNbJZRmrNJYFicrfWVrHibADddP7WZaS72pfOuO1ibMvqWeNwYQ/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                </div>\n                <p style=\"font-size: 15px; color: #555; margin: 0 0 12px 0;\">各地将设立专项检查组，对租赁市场进行常态化巡查。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafVMHdT8QONd25Yr9PAbshtE993ExvUe3kzDibjuWibZCpPXDsiafKAwE0Q/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n                <ul style=\"margin: 0; padding-left: 20px; color: #444;\">\n                    <li style=\"margin-bottom: 8px;\">严查“黑中介”和“二房东”违规转租行为</li>\n                    <li style=\"margin-bottom: 8px;\">监督租赁合同备案情况，确保信息真实有效</li>\n                    <li style=\"margin-bottom: 0;\">打击虚假房源、哄抬租金等市场乱象</li>\n                </ul>\n            </div>\n            \n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 16px;\">同时，条例明确要求各地设立住房租赁投诉平台，租户可通过线上渠道反映问题，相关部门将在7个工作日内予以处理。</p><p style=\"text-align: center;\"><img src=\"http://mmbiz.qpic.cn/sz_mmbiz_jpg/fx7icJdX4F6OXPHCDgycOHbemCaJzlViafrrNOC3u0vjSzetDm1z1wwUXiaN4BSQDNONepicktEXgFy9JTK412Ifew/0?from=appmsg\" alt=\"文章配图\" style=\"max-width: 100%; height: auto;\"></p></p>\n            <p style=\"font-size: 16px; line-height: 1.8; color: #333; margin-bottom: 0;\">通过强化监管与执法，确保租赁市场的公平有序，维护广大租户的合法权益。</p>\n        </div>\n    </section>\n    \n    <!-- 6. 眠养生机区块 -->\n    <section style=\"margin: 24px 10px; background-color: #fff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 16px rgba(0,0,0,0.06);\">\n        <div style=\"height: 8px; background-color: #6a11cb;\"></div>",
      "content_source_url": "",
      "thumb_media_id": "MEH-ro_tay7nl2G5RPAwQ90aSHP_QJuOJBncvadEhrrZWeeacU7oVbZ1uOhIlu_H",
      "show_cover_pic": 1,
      "need_open_comment": 0,
      "only_fans_can_comment": 0
    }
  ]
}
2025-07-21 21:56:15,852 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-21 21:56:19,000 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "POST /cgi-bin/draft/add?access_token=94_pXFHe-c8rFPWhk0Hjhinmf7X-a00MVDBAe-REevNkgT4P_xDsGU_hIBDQHlRf1NcM1EesLqhzF94Gibm-5wJW83ka7UB9xekTyANykz5-Rz0VALOHzczWDNxuA4XSVaAAACXA HTTP/1.1" 200 113
2025-07-21 21:56:19,001 - services.draft_service - INFO - 草稿创建成功，media_id: MEH-ro_tay7nl2G5RPAwQySc72l78ZXLeOWvEcXbZiR8rfBHEyVXKddQ6PgbDIpg
2025-07-21 21:56:19,002 - controllers.article_controller - INFO - 草稿保存成功，media_id: MEH-ro_tay7nl2G5RPAwQySc72l78ZXLeOWvEcXbZiR8rfBHEyVXKddQ6PgbDIpg
2025-07-21 21:56:19,011 - services.history_service - INFO - 更新草稿状态: 《住房租赁条例》公布 9月15日起施行 -> media_id: MEH-ro_tay7nl2G5RPAwQySc72l78ZXLeOWvEcXbZiR8rfBHEyVXKddQ6PgbDIpg
2025-07-21 21:56:19,012 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:56:19] "POST /api/save-draft HTTP/1.1" 200 -
2025-07-21 21:56:19,023 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:56:19,023 - root - INFO - 获取生成历史请求
2025-07-21 21:56:19,024 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:56:19] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:56:32,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:56:32,180 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:56:32,180 - root - INFO - 获取生成历史请求
2025-07-21 21:56:32,180 - root - INFO - 获取发布历史请求
2025-07-21 21:56:32,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:56:32] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:56:32,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:56:32] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:57:02,180 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:57:02,181 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:57:02,181 - root - INFO - 获取生成历史请求
2025-07-21 21:57:02,181 - root - INFO - 获取发布历史请求
2025-07-21 21:57:02,182 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:57:02] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:57:02,183 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:57:02] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:58:17,184 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:58:17,184 - root - INFO - 获取生成历史请求
2025-07-21 21:58:17,185 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:58:17,185 - root - INFO - 获取发布历史请求
2025-07-21 21:58:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:58:17] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:58:17,187 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:58:17] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:58:37,002 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:58:37,003 - root - INFO - 获取生成历史请求
2025-07-21 21:58:37,004 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:58:37,005 - root - INFO - 获取发布历史请求
2025-07-21 21:58:37,006 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:58:37] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:58:37,007 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:58:37] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:59:01,696 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:59:01,697 - root - INFO - 获取生成历史请求
2025-07-21 21:59:01,699 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:59:01,699 - root - INFO - 获取发布历史请求
2025-07-21 21:59:01,701 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:59:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 21:59:01,702 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:59:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:59:31,709 - root - INFO - 请求: GET /api/generation-history
2025-07-21 21:59:31,710 - root - INFO - 获取生成历史请求
2025-07-21 21:59:31,711 - root - INFO - 请求: GET /api/publish-history
2025-07-21 21:59:31,712 - root - INFO - 获取发布历史请求
2025-07-21 21:59:31,714 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:59:31] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 21:59:31,715 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 21:59:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 22:00:01,696 - root - INFO - 请求: GET /api/generation-history
2025-07-21 22:00:01,696 - root - INFO - 获取生成历史请求
2025-07-21 22:00:01,697 - root - INFO - 请求: GET /api/publish-history
2025-07-21 22:00:01,697 - root - INFO - 获取发布历史请求
2025-07-21 22:00:01,698 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 22:00:01] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 22:00:01,698 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 22:00:01] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-21 22:00:31,696 - root - INFO - 请求: GET /api/generation-history
2025-07-21 22:00:31,696 - root - INFO - 获取生成历史请求
2025-07-21 22:00:31,697 - root - INFO - 请求: GET /api/publish-history
2025-07-21 22:00:31,697 - root - INFO - 获取发布历史请求
2025-07-21 22:00:31,698 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 22:00:31] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-21 22:00:31,699 - werkzeug - INFO - 192.168.124.16 - - [21/Jul/2025 22:00:31] "GET /api/publish-history HTTP/1.1" 200 -
