2025-07-19 12:44:14,757 - root - INFO - 应用目录创建完成
2025-07-19 12:44:14,762 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:44:14,763 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-19 12:44:14,763 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-19 12:44:14,763 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-19 12:44:14,763 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-19 12:44:14,764 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:44:14,764 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-19 12:44:14,764 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-19 12:44:14,764 - services.image_service - INFO - 图像服务初始化完成
2025-07-19 12:44:14,765 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-19 12:44:14,765 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-19 12:44:14,765 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-19 12:44:14,765 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-19 12:44:15,858 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-19 12:44:15,858 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-19 12:44:59,143 - root - INFO - 请求: GET /
2025-07-19 12:44:59,144 - root - INFO - 访问主页面
2025-07-19 12:44:59,254 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:44:59] "GET / HTTP/1.1" 200 -
2025-07-19 12:44:59,292 - root - INFO - 请求: GET /static/css/layout.css
2025-07-19 12:44:59,296 - root - INFO - 请求: GET /static/css/components.css
2025-07-19 12:44:59,297 - root - INFO - 请求: GET /static/js/app.js
2025-07-19 12:44:59,505 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:44:59] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-19 12:44:59,510 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:44:59] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-19 12:44:59,514 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:44:59] "GET /static/js/app.js HTTP/1.1" 200 -
2025-07-19 12:44:59,601 - root - INFO - 请求: GET /api/get_ip
2025-07-19 12:44:59,601 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:44:59] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-19 12:44:59,602 - root - INFO - 请求: GET /api/style-templates
2025-07-19 12:44:59,613 - root - INFO - 请求: GET /api/config
2025-07-19 12:44:59,613 - root - INFO - 处理配置请求: GET
2025-07-19 12:44:59,613 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-19 12:44:59,650 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:44:59,651 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-19 12:44:59,651 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:44:59] "GET /api/config HTTP/1.1" 200 -
2025-07-19 12:44:59,749 - root - INFO - 请求: GET /api/gemini-models
2025-07-19 12:44:59,749 - root - INFO - 获取Gemini可用模型列表
2025-07-19 12:44:59,749 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-19 12:44:59,750 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:44:59,750 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:44:59,751 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-19 12:44:59,911 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:44:59] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-19 12:45:02,577 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-19 12:45:02,577 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-19 12:45:02,578 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-19 12:45:29,641 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:45:29,643 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:45:29,644 - root - INFO - 获取发布历史请求
2025-07-19 12:45:29,644 - root - INFO - 获取生成历史请求
2025-07-19 12:45:29,649 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:45:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:45:29,693 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:45:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:45:59,627 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:45:59,628 - root - INFO - 获取生成历史请求
2025-07-19 12:45:59,628 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:45:59,629 - root - INFO - 获取发布历史请求
2025-07-19 12:45:59,631 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:45:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:45:59,632 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:45:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:46:29,615 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:46:29,615 - root - INFO - 获取生成历史请求
2025-07-19 12:46:29,616 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:46:29,616 - root - INFO - 获取发布历史请求
2025-07-19 12:46:29,617 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:46:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:46:29,617 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:46:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:46:59,627 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:46:59,628 - root - INFO - 获取生成历史请求
2025-07-19 12:46:59,629 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:46:59,631 - root - INFO - 获取发布历史请求
2025-07-19 12:46:59,634 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:46:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:46:59,635 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:46:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:47:29,638 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:47:29,640 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:47:29,641 - root - INFO - 获取生成历史请求
2025-07-19 12:47:29,642 - root - INFO - 获取发布历史请求
2025-07-19 12:47:29,646 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:47:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:47:29,648 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:47:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:47:50,913 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-19 12:47:50,914 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-19 12:47:50,914 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-19 12:47:50,915 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:47:50] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-19 12:47:50,930 - root - INFO - 请求: GET /api/deepseek-models
2025-07-19 12:47:50,930 - root - INFO - 获取DeepSeek可用模型列表
2025-07-19 12:47:50,931 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-19 12:47:50,932 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:47:50,932 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:47:50,933 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-19 12:47:50,933 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-19 12:47:51,693 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-19 12:47:51,845 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-19 12:47:51,846 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-19 12:47:51,846 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-19 12:47:51,847 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-19 12:47:51,847 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-19 12:47:51,847 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-19 12:47:51,848 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-19 12:47:51,849 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:47:51] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-19 12:47:51,859 - root - INFO - 请求: GET /api/dashscope-models
2025-07-19 12:47:51,859 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-19 12:47:51,860 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-19 12:47:51,860 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:47:51,861 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:47:51,861 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-19 12:47:52,305 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000008B62020>, 'json_data': None}
2025-07-19 12:47:52,336 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-19 12:47:52,337 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:47:52,372 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008A113D0>
2025-07-19 12:47:52,372 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008B641D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:47:52,390 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008B845C0>
2025-07-19 12:47:52,390 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-19 12:47:52,391 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:47:52,391 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-19 12:47:52,391 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:47:52,391 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-19 12:47:52,438 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'78a723bf-ca8c-9fce-a875-3742f774bf80'), (b'content-type', b'application/json'), (b'req-cost-time', b'29'), (b'req-arrive-time', b'1752900467036'), (b'resp-start-time', b'1752900467065'), (b'x-envoy-upstream-service-time', b'28'), (b'set-cookie', b'acw_tc=78a723bf-ca8c-9fce-a875-3742f774bf8005ecfed8403ea04af16a5200b82971b7;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:47:46 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:47:52,439 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-19 12:47:52,439 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-19 12:47:52,452 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:47:52,453 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:47:52,454 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:47:52,455 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '78a723bf-ca8c-9fce-a875-3742f774bf80', 'content-type': 'application/json', 'req-cost-time': '29', 'req-arrive-time': '1752900467036', 'resp-start-time': '1752900467065', 'x-envoy-upstream-service-time': '28', 'set-cookie': 'acw_tc=78a723bf-ca8c-9fce-a875-3742f774bf8005ecfed8403ea04af16a5200b82971b7;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:47:46 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:47:52,456 - openai._base_client - DEBUG - request_id: 78a723bf-ca8c-9fce-a875-3742f774bf80
2025-07-19 12:47:52,472 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-19 12:47:52,473 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-19 12:47:52,474 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-19 12:47:52,475 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-19 12:47:52,477 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-19 12:47:52,477 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-19 12:47:52,478 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-19 12:47:52,479 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:47:52] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-19 12:47:52,496 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:47:52,496 - root - INFO - 获取生成历史请求
2025-07-19 12:47:52,498 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:47:52] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:47:52,510 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:47:52,510 - root - INFO - 获取发布历史请求
2025-07-19 12:47:52,511 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:47:52] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:47:59,616 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:47:59,617 - root - INFO - 获取生成历史请求
2025-07-19 12:47:59,617 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:47:59,617 - root - INFO - 获取发布历史请求
2025-07-19 12:47:59,618 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:47:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:47:59,619 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:47:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:48:10,891 - root - INFO - 请求: POST /api/generate-article
2025-07-19 12:48:10,891 - root - INFO - 生成文章请求
2025-07-19 12:48:10,891 - controllers.article_controller - INFO - 【唯一请求ID】2913b8d7-1c62-4461-b1dd-151a695677d9 - generate_article
2025-07-19 12:48:10,892 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '河南煤气燃爆烧伤母亲出ICU', 'word_count': 8000, 'image_count': 3, 'format_template': '<!-- 0. 文章通用外层容器（AI可用于包裹整篇文章） -->\n<!-- AI可自行决定是否需要一个统一的根容器，例如： -->\n<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;">\n\n\n\n    <!-- 2. 空行占位符 (AI可根据需要添加多个以创建间距) -->\n    <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n\n    <!-- 3. 普通文本内容区块 (有左右内边距，行高2，默认字体颜色) -->\n    <!-- AI可在此区块内放置多段内容，包括普通文本、强调文本和提示信息。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的普通段落内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 48, 48); line-height: 2; font-style: normal; font-weight: 400; text-align: justify; font-size: 16px; box-sizing: border-box;">\n        <span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;"><strong style="box-sizing: border-box;">AI生成的红色强调文本，如金句。</strong></span>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n    </section>\n\n    <!-- 4. 带左侧小图和标题的章节区块（图片有左侧位移效果） -->\n    <!-- AI可复用此结构作为文章新章节的开头。 -->\n    <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(18px, 0px, 0px); box-sizing: border-box;">\n      <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 35%; height: auto; box-sizing: border-box;">\n      </section>\n    </section>\n    <section style="font-size: 24px; color: rgb(62, 62, 62); padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，上半句，模拟H2</span></strong></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，下半句，模拟H2</span></strong></p>\n    </section>\n\n    <!-- 5. 带有编号的列表项区块 (文本居中编号 + 普通段落，有左右内边距) -->\n    <!-- AI可复用此结构来展示多条编号内容，如洞察、事实。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">01.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第一段内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">02.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第二段内容，可包含<strong style="box-sizing: border-box;"><span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;">红色强调文本</span></strong>。</p>\n    </section>\n\n    <!-- 6. 图片来源/说明区块 (小字，左右内边距) -->\n    <section style="margin-top: 0px; margin-bottom: 0px; box-sizing: border-box;">\n      <section style="margin: 0px; box-sizing: border-box;">\n        <section style="font-size: 13px; color: rgb(136, 136, 136); padding: 0px 13px; box-sizing: border-box;">\n          <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的图片来源或说明文字。</p>\n        </section>\n      </section>\n    </section>\n\n    <!-- 7. 浅灰色背景的通用分割线/内容区块 (宽度92%，居中，有特定背景色和内边距) -->\n    <!-- AI可复用此结构作为文章中的视觉分隔，或放置提示信息、作者信息等。 -->\n    <section style="margin: 0px; text-align: center; box-sizing: border-box;">\n      <section style="border-top: 0.1em solid rgba(0, 0, 0, 0); border-bottom: 0.1em solid rgba(0, 0, 0, 0); transform: rotate(0deg); width: 92%; display: inline-block; background-color: rgba(136, 136, 136, 0.08); height: auto; padding: 15px 5px; box-sizing: border-box;">\n        \n        <!-- 7.1 内部左侧小图区块 (小图有左侧位移) -->\n        <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(15px, 0px, 0px); box-sizing: border-box;">\n          <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 20%; height: auto; box-sizing: border-box;">\n          </section>\n        </section>\n\n        <!-- 7.2 内部缩放图片区块 (如横向装饰线) -->\n        <section style="transform: scale(0.9); transform-origin: center center; margin-top: -1px; margin-bottom: -1px; box-sizing: border-box;">\n          <section style="text-align: center; margin-top: 10px; margin-bottom: 10px; line-height: 0; box-sizing: border-box;">\n            <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; box-sizing: border-box;">\n            </section>\n          </section>\n        </section>\n      </section>\n    </section>\n\n\n</div>', 'ai_model': 'dashscope', 'image_model': 'pexels'}
2025-07-19 12:48:10,892 - controllers.article_controller - INFO - 开始生成文章，标题: 河南煤气燃爆烧伤母亲出ICU
2025-07-19 12:48:10,892 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: pexels
2025-07-19 12:48:10,892 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:48:10,893 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-19 12:48:10,893 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-19 12:48:11,335 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘河南煤气燃爆烧伤母亲出ICU’的公众号文章，排版核心风格要与模板一致，字数约8000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n<!-- 0. 文章通用外层容器（AI可用于包裹整篇文章） -->\n<!-- AI可自行决定是否需要一个统一的根容器，例如： -->\n<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', sans-serif;">\n\n\n\n    <!-- 2. 空行占位符 (AI可根据需要添加多个以创建间距) -->\n    <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n\n    <!-- 3. 普通文本内容区块 (有左右内边距，行高2，默认字体颜色) -->\n    <!-- AI可在此区块内放置多段内容，包括普通文本、强调文本和提示信息。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的普通段落内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 48, 48); line-height: 2; font-style: normal; font-weight: 400; text-align: justify; font-size: 16px; box-sizing: border-box;">\n        <span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;"><strong style="box-sizing: border-box;">AI生成的红色强调文本，如金句。</strong></span>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n    </section>\n\n    <!-- 4. 带左侧小图和标题的章节区块（图片有左侧位移效果） -->\n    <!-- AI可复用此结构作为文章新章节的开头。 -->\n    <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(18px, 0px, 0px); box-sizing: border-box;">\n      <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 35%; height: auto; box-sizing: border-box;">\n      </section>\n    </section>\n    <section style="font-size: 24px; color: rgb(62, 62, 62); padding: 0px 15px; box-sizing: border-box;">\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，上半句，模拟H2</span></strong></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="color: rgb(51, 48, 48); box-sizing: border-box;">AI生成的章节主标题，下半句，模拟H2</span></strong></p>\n    </section>\n\n    <!-- 5. 带有编号的列表项区块 (文本居中编号 + 普通段落，有左右内边距) -->\n    <!-- AI可复用此结构来展示多条编号内容，如洞察、事实。 -->\n    <section style="color: rgb(51, 48, 48); line-height: 2; padding: 0px 15px; box-sizing: border-box;">\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">01.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第一段内容。</p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="text-align: center; white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">\n        <strong style="box-sizing: border-box;"><span style="color: rgb(54, 49, 49); box-sizing: border-box;">02.</span></strong>\n      </p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;"><br style="box-sizing: border-box;"></p>\n      <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的列表项第二段内容，可包含<strong style="box-sizing: border-box;"><span style="color: rgba(124, 0, 0, 0.75); box-sizing: border-box;">红色强调文本</span></strong>。</p>\n    </section>\n\n    <!-- 6. 图片来源/说明区块 (小字，左右内边距) -->\n    <section style="margin-top: 0px; margin-bottom: 0px; box-sizing: border-box;">\n      <section style="margin: 0px; box-sizing: border-box;">\n        <section style="font-size: 13px; color: rgb(136, 136, 136); padding: 0px 13px; box-sizing: border-box;">\n          <p style="white-space: normal; margin: 0px; padding: 0px; box-sizing: border-box;">AI生成的图片来源或说明文字。</p>\n        </section>\n      </section>\n    </section>\n\n    <!-- 7. 浅灰色背景的通用分割线/内容区块 (宽度92%，居中，有特定背景色和内边距) -->\n    <!-- AI可复用此结构作为文章中的视觉分隔，或放置提示信息、作者信息等。 -->\n    <section style="margin: 0px; text-align: center; box-sizing: border-box;">\n      <section style="border-top: 0.1em solid rgba(0, 0, 0, 0); border-bottom: 0.1em solid rgba(0, 0, 0, 0); transform: rotate(0deg); width: 92%; display: inline-block; background-color: rgba(136, 136, 136, 0.08); height: auto; padding: 15px 5px; box-sizing: border-box;">\n        \n        <!-- 7.1 内部左侧小图区块 (小图有左侧位移) -->\n        <section style="text-align: left; margin-top: 10px; margin-bottom: 10px; line-height: 0; transform: translate3d(15px, 0px, 0px); box-sizing: border-box;">\n          <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; width: 20%; height: auto; box-sizing: border-box;">\n          </section>\n        </section>\n\n        <!-- 7.2 内部缩放图片区块 (如横向装饰线) -->\n        <section style="transform: scale(0.9); transform-origin: center center; margin-top: -1px; margin-bottom: -1px; box-sizing: border-box;">\n          <section style="text-align: center; margin-top: 10px; margin-bottom: 10px; line-height: 0; box-sizing: border-box;">\n            <section style="max-width: 100%; vertical-align: middle; display: inline-block; line-height: 0; box-sizing: border-box;">\n            </section>\n          </section>\n        </section>\n      </section>\n    </section>\n\n\n</div>'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-19 12:48:11,336 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:48:11,336 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:48:11,360 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008B95A30>
2025-07-19 12:48:11,360 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008B66850> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:48:11,376 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008B95700>
2025-07-19 12:48:11,376 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:48:11,377 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:48:11,377 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:48:11,377 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:48:11,377 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:48:29,623 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:48:29,625 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:48:29,625 - root - INFO - 获取生成历史请求
2025-07-19 12:48:29,625 - root - INFO - 获取发布历史请求
2025-07-19 12:48:29,627 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:48:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:48:29,627 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:48:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:48:59,614 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:48:59,614 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:48:59,615 - root - INFO - 获取生成历史请求
2025-07-19 12:48:59,615 - root - INFO - 获取发布历史请求
2025-07-19 12:48:59,616 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:48:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:48:59,616 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:48:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:49:29,618 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:49:29,619 - root - INFO - 获取生成历史请求
2025-07-19 12:49:29,619 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:49:29,619 - root - INFO - 获取发布历史请求
2025-07-19 12:49:29,620 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:49:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:49:29,620 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:49:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:49:35,062 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1d0d1ac2-3c9c-9c86-b622-d0e78e91daf7'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'83674'), (b'req-arrive-time', b'1752900486020'), (b'resp-start-time', b'1752900569695'), (b'x-envoy-upstream-service-time', b'83672'), (b'set-cookie', b'acw_tc=1d0d1ac2-3c9c-9c86-b622-d0e78e91daf775e1d66000f7f7f78aba4c660b2c2287;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:49:29 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:49:35,063 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:49:35,063 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:49:35,063 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:49:35,064 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:49:35,064 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:49:35,064 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1d0d1ac2-3c9c-9c86-b622-d0e78e91daf7', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '83674', 'req-arrive-time': '1752900486020', 'resp-start-time': '1752900569695', 'x-envoy-upstream-service-time': '83672', 'set-cookie': 'acw_tc=1d0d1ac2-3c9c-9c86-b622-d0e78e91daf775e1d66000f7f7f78aba4c660b2c2287;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:49:29 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:49:35,064 - openai._base_client - DEBUG - request_id: 1d0d1ac2-3c9c-9c86-b622-d0e78e91daf7
2025-07-19 12:49:35,066 - controllers.article_controller - INFO - 文章内容生成成功，长度: 11098字符
2025-07-19 12:49:35,067 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-19 12:49:35,067 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 河南煤气燃爆烧伤母亲出ICU
2025-07-19 12:49:35,503 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：河南煤气燃爆烧伤母亲出ICU\n内容预览：河南煤气燃爆烧伤母亲出ICU：一场家庭灾难背后的安全警示 作者：XXX | 编辑：XXX | 来源：XX公众号\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:49:35,504 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:49:35,504 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:49:35,545 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008BB8500>
2025-07-19 12:49:35,545 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008B923D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:49:35,564 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008A8F380>
2025-07-19 12:49:35,565 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:49:35,566 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:49:35,567 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:49:35,568 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:49:35,569 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:49:37,098 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'54016d69-7537-9f9a-9191-dbb8007ae54d'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1518'), (b'req-arrive-time', b'1752900570212'), (b'resp-start-time', b'1752900571730'), (b'x-envoy-upstream-service-time', b'1515'), (b'set-cookie', b'acw_tc=54016d69-7537-9f9a-9191-dbb8007ae54dbf5a2aaa4a2c6ceb211d22c6a4d524e3;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:49:31 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:49:37,098 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:49:37,099 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:49:37,099 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:49:37,099 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:49:37,099 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:49:37,099 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '54016d69-7537-9f9a-9191-dbb8007ae54d', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1518', 'req-arrive-time': '1752900570212', 'resp-start-time': '1752900571730', 'x-envoy-upstream-service-time': '1515', 'set-cookie': 'acw_tc=54016d69-7537-9f9a-9191-dbb8007ae54dbf5a2aaa4a2c6ceb211d22c6a4d524e3;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:49:31 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:49:37,100 - openai._base_client - DEBUG - request_id: 54016d69-7537-9f9a-9191-dbb8007ae54d
2025-07-19 12:49:37,100 - services.dashscope_service - INFO - 文章摘要生成成功: 河南一母亲因煤气燃爆严重烧伤，历经抢救终脱离ICU。事故背后，是家庭用气安全的深刻警示。本文还原事件经过，剖析安全隐患，呼吁公众提升安全意识，避免悲剧重演。
2025-07-19 12:49:37,100 - controllers.article_controller - INFO - 摘要生成完成: 河南一母亲因煤气燃爆严重烧伤，历经抢救终脱离ICU。事故背后，是家庭用气安全的深刻警示。本文还原事件...
2025-07-19 12:49:37,100 - controllers.article_controller - INFO - 文章字数约: 8000，计划生成配图数量: 3
2025-07-19 12:49:37,101 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-19 12:49:37,101 - controllers.article_controller - INFO - 开始处理文章配图，计划生成3张图片（仅本地路径，不上传微信）
2025-07-19 12:49:37,101 - controllers.article_controller - INFO - 计划在第[10, 20, 31]段后插入配图
2025-07-19 12:49:37,101 - controllers.article_controller - INFO - 生成第1张配图，使用模型: pexels
2025-07-19 12:49:37,101 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图1, 生图模型: pexels, AI模型: dashscope, 图片索引: 1/3
2025-07-19 12:49:37,101 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图1, AI模型: dashscope, 图片索引: 1/3
2025-07-19 12:49:37,101 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:49:37,102 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:49:37,102 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:49:37,102 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:49:37,536 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图1\n描述: 河南一母亲因煤气燃爆严重烧伤，历经抢救终脱离ICU。事故背后，是家庭用气安全的深刻警示。本文还原事件经过，剖析安全隐患，呼吁公众提升安全意识，避免悲剧重演。\n文章内容预览: 河南煤气燃爆烧伤母亲出ICU：一场家庭灾难背后的安全警示 作者：XXX | 编辑：XXX | 来源：XX公众号 近日，一则“河南煤气燃爆烧伤母亲出ICU”的新闻牵动了无数人的心。一位年轻母亲在家中因煤...\n\n图片信息：\n- 这是第1张图片，总共需要3张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:49:37,537 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:49:37,537 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:49:37,561 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008BBAFC0>
2025-07-19 12:49:37,561 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008BB14D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:49:37,583 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008BBAD20>
2025-07-19 12:49:37,584 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:49:37,585 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:49:37,586 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:49:37,587 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:49:37,587 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:49:38,493 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'f51e844d-edff-9474-aa7e-27ec8f4c169e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'895'), (b'req-arrive-time', b'1752900572229'), (b'resp-start-time', b'1752900573125'), (b'x-envoy-upstream-service-time', b'892'), (b'set-cookie', b'acw_tc=f51e844d-edff-9474-aa7e-27ec8f4c169e7f17bff81ab7f3829a056f9673fc0a97;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:49:33 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:49:38,493 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:49:38,493 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:49:38,494 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:49:38,494 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:49:38,494 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:49:38,494 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'f51e844d-edff-9474-aa7e-27ec8f4c169e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '895', 'req-arrive-time': '1752900572229', 'resp-start-time': '1752900573125', 'x-envoy-upstream-service-time': '892', 'set-cookie': 'acw_tc=f51e844d-edff-9474-aa7e-27ec8f4c169e7f17bff81ab7f3829a056f9673fc0a97;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:49:33 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:49:38,495 - openai._base_client - DEBUG - request_id: f51e844d-edff-9474-aa7e-27ec8f4c169e
2025-07-19 12:49:38,495 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: gas explosion accident mother
2025-07-19 12:49:38,496 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:49:39,674 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=gas+explosion+accident+mother&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:49:39,696 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:49:39,697 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:49:39,697 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-19 12:49:39,697 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_124939.jpg
2025-07-19 12:49:39,698 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:49:40,474 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/5082381/pexels-photo-5082381.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 173363
2025-07-19 12:49:40,517 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_124939.jpg
2025-07-19 12:49:40,518 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_124939.jpg
2025-07-19 12:49:40,518 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_124939.jpg
2025-07-19 12:49:40,518 - controllers.article_controller - INFO - 生成第2张配图，使用模型: pexels
2025-07-19 12:49:40,519 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图2, 生图模型: pexels, AI模型: dashscope, 图片索引: 2/3
2025-07-19 12:49:40,519 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图2, AI模型: dashscope, 图片索引: 2/3
2025-07-19 12:49:40,519 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:49:40,519 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:49:40,520 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:49:40,520 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:49:40,952 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图2\n描述: 河南一母亲因煤气燃爆严重烧伤，历经抢救终脱离ICU。事故背后，是家庭用气安全的深刻警示。本文还原事件经过，剖析安全隐患，呼吁公众提升安全意识，避免悲剧重演。\n文章内容预览: 河南煤气燃爆烧伤母亲出ICU：一场家庭灾难背后的安全警示 作者：XXX | 编辑：XXX | 来源：XX公众号 近日，一则“河南煤气燃爆烧伤母亲出ICU”的新闻牵动了无数人的心。一位年轻母亲在家中因煤...\n\n图片信息：\n- 这是第2张图片，总共需要3张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:49:40,952 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:49:40,953 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:49:40,986 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008BD5AC0>
2025-07-19 12:49:40,986 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008BD01D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:49:41,001 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008BD54F0>
2025-07-19 12:49:41,002 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:49:41,002 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:49:41,002 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:49:41,002 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:49:41,003 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:49:41,727 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'77228a97-12ea-9c68-9c57-c611c5c2d6f1'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'713'), (b'req-arrive-time', b'1752900575646'), (b'resp-start-time', b'1752900576360'), (b'x-envoy-upstream-service-time', b'712'), (b'set-cookie', b'acw_tc=77228a97-12ea-9c68-9c57-c611c5c2d6f1cb59614e33e8f1a65891745ed176b7d6;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:49:36 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:49:41,728 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:49:41,728 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:49:41,728 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:49:41,728 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:49:41,729 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:49:41,729 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '77228a97-12ea-9c68-9c57-c611c5c2d6f1', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '713', 'req-arrive-time': '1752900575646', 'resp-start-time': '1752900576360', 'x-envoy-upstream-service-time': '712', 'set-cookie': 'acw_tc=77228a97-12ea-9c68-9c57-c611c5c2d6f1cb59614e33e8f1a65891745ed176b7d6;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:49:36 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:49:41,729 - openai._base_client - DEBUG - request_id: 77228a97-12ea-9c68-9c57-c611c5c2d6f1
2025-07-19 12:49:41,730 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: gas explosion accident home
2025-07-19 12:49:41,731 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:49:42,838 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=gas+explosion+accident+home&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:49:42,841 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:49:42,842 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:49:42,843 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-19 12:49:42,843 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_124942.jpg
2025-07-19 12:49:42,847 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:49:43,650 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/5207232/pexels-photo-5207232.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 217017
2025-07-19 12:49:43,699 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_124942.jpg
2025-07-19 12:49:43,700 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_124942.jpg
2025-07-19 12:49:43,700 - controllers.article_controller - INFO - 第2张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_124942.jpg
2025-07-19 12:49:43,700 - controllers.article_controller - INFO - 生成第3张配图，使用模型: pexels
2025-07-19 12:49:43,701 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图3, 生图模型: pexels, AI模型: dashscope, 图片索引: 3/3
2025-07-19 12:49:43,701 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图3, AI模型: dashscope, 图片索引: 3/3
2025-07-19 12:49:43,701 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:49:43,701 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:49:43,702 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:49:43,702 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:49:44,137 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图3\n描述: 河南一母亲因煤气燃爆严重烧伤，历经抢救终脱离ICU。事故背后，是家庭用气安全的深刻警示。本文还原事件经过，剖析安全隐患，呼吁公众提升安全意识，避免悲剧重演。\n文章内容预览: 河南煤气燃爆烧伤母亲出ICU：一场家庭灾难背后的安全警示 作者：XXX | 编辑：XXX | 来源：XX公众号 近日，一则“河南煤气燃爆烧伤母亲出ICU”的新闻牵动了无数人的心。一位年轻母亲在家中因煤...\n\n图片信息：\n- 这是第3张图片，总共需要3张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:49:44,137 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:49:44,138 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:49:44,179 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008BEC560>
2025-07-19 12:49:44,180 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008BD2AD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:49:44,200 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008BEC2C0>
2025-07-19 12:49:44,201 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:49:44,202 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:49:44,203 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:49:44,204 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:49:44,205 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:49:44,792 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'f0130765-973f-91a7-a6d6-9aa4d3cf7623'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'576'), (b'req-arrive-time', b'1752900578847'), (b'resp-start-time', b'1752900579424'), (b'x-envoy-upstream-service-time', b'573'), (b'set-cookie', b'acw_tc=f0130765-973f-91a7-a6d6-9aa4d3cf7623cea46bdf7d13ec173b5b0a58f502aa0b;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:49:39 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:49:44,792 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:49:44,793 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:49:44,793 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:49:44,793 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:49:44,793 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:49:44,794 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'f0130765-973f-91a7-a6d6-9aa4d3cf7623', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '576', 'req-arrive-time': '1752900578847', 'resp-start-time': '1752900579424', 'x-envoy-upstream-service-time': '573', 'set-cookie': 'acw_tc=f0130765-973f-91a7-a6d6-9aa4d3cf7623cea46bdf7d13ec173b5b0a58f502aa0b;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:49:39 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:49:44,794 - openai._base_client - DEBUG - request_id: f0130765-973f-91a7-a6d6-9aa4d3cf7623
2025-07-19 12:49:44,794 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: gas explosion burn injury
2025-07-19 12:49:44,795 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:49:45,782 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=gas+explosion+burn+injury&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:49:45,783 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:49:45,783 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:49:45,783 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-19 12:49:45,783 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_124945.jpg
2025-07-19 12:49:45,784 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:49:46,516 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/4811240/pexels-photo-4811240.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 211810
2025-07-19 12:49:46,577 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_124945.jpg
2025-07-19 12:49:46,577 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_124945.jpg
2025-07-19 12:49:46,578 - controllers.article_controller - INFO - 第3张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_124945.jpg
2025-07-19 12:49:46,578 - controllers.article_controller - INFO - 在第31段后插入配图
2025-07-19 12:49:46,578 - controllers.article_controller - INFO - 在第20段后插入配图
2025-07-19 12:49:46,578 - controllers.article_controller - INFO - 在第10段后插入配图
2025-07-19 12:49:46,578 - controllers.article_controller - INFO - 配图处理完成，共插入3张图片
2025-07-19 12:49:46,606 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_河南煤气燃爆烧伤母亲出ICU_20250719_124946.html
2025-07-19 12:49:46,607 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-19 12:49:46,778 - httpcore.connection - DEBUG - close.started
2025-07-19 12:49:46,778 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:49:46,779 - httpcore.connection - DEBUG - close.started
2025-07-19 12:49:46,779 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:49:46,779 - httpcore.connection - DEBUG - close.started
2025-07-19 12:49:46,779 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:49:46,780 - httpcore.connection - DEBUG - close.started
2025-07-19 12:49:46,780 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:49:47,400 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-19 12:49:47,401 - controllers.article_controller - WARNING - 未找到</div>标签，保留全部内容
2025-07-19 12:49:47,404 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-19 12:49:47,404 - controllers.article_controller - INFO - 内容清理完成，移除了 1 个字符，清理后长度: 11583
2025-07-19 12:49:47,417 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_河南煤气燃爆烧伤母亲出ICU_20250719_124947.html
2025-07-19 12:49:47,417 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=河南煤气燃爆烧伤母亲出ICU, 内容前100字=<!-- 0. 文章通用外层容器 -->
<div style="font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Helveti, 图片数=6
2025-07-19 12:49:47,418 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:49:47,418 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:49:47,451 - services.history_service - INFO - 添加生成历史记录: 河南煤气燃爆烧伤母亲出ICU
2025-07-19 12:49:47,451 - controllers.article_controller - INFO - 文章生成完成
2025-07-19 12:49:47,451 - controllers.article_controller - INFO - 生成结果预览: 标题=河南煤气燃爆烧伤母亲出ICU, 内容长度=11583, 配图数量=3
2025-07-19 12:49:47,452 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:49:47] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-19 12:49:47,457 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:49:47,457 - root - INFO - 获取生成历史请求
2025-07-19 12:49:47,458 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:49:47] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:49:47,461 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_124939.jpg
2025-07-19 12:49:47,461 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_124942.jpg
2025-07-19 12:49:47,462 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_124945.jpg
2025-07-19 12:49:47,462 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_124939.jpg
2025-07-19 12:49:47,462 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_124942.jpg
2025-07-19 12:49:47,462 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_124945.jpg
2025-07-19 12:49:47,497 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:49:47] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图3_20250719_124945.jpg HTTP/1.1" 200 -
2025-07-19 12:49:47,497 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:49:47] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图2_20250719_124942.jpg HTTP/1.1" 200 -
2025-07-19 12:49:47,497 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:49:47] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图1_20250719_124939.jpg HTTP/1.1" 200 -
2025-07-19 12:49:59,615 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:49:59,615 - root - INFO - 获取生成历史请求
2025-07-19 12:49:59,616 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:49:59,616 - root - INFO - 获取发布历史请求
2025-07-19 12:49:59,617 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:49:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:49:59,617 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:49:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:50:00,988 - root - INFO - 请求: POST /api/article-content
2025-07-19 12:50:00,988 - root - INFO - 获取文章内容请求
2025-07-19 12:50:00,989 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:50:00] "POST /api/article-content HTTP/1.1" 200 -
2025-07-19 12:50:11,969 - root - INFO - 请求: POST /api/article-content
2025-07-19 12:50:11,969 - root - INFO - 获取文章内容请求
2025-07-19 12:50:11,969 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:50:11] "POST /api/article-content HTTP/1.1" 200 -
2025-07-19 12:50:29,614 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:50:29,614 - root - INFO - 获取生成历史请求
2025-07-19 12:50:29,615 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:50:29,615 - root - INFO - 获取发布历史请求
2025-07-19 12:50:29,615 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:50:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:50:29,616 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:50:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:50:59,631 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:50:59,632 - root - INFO - 获取生成历史请求
2025-07-19 12:50:59,634 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:50:59,636 - root - INFO - 获取发布历史请求
2025-07-19 12:50:59,638 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:50:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:50:59,641 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:50:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:51:29,620 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:51:29,621 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:51:29,621 - root - INFO - 获取生成历史请求
2025-07-19 12:51:29,621 - root - INFO - 获取发布历史请求
2025-07-19 12:51:29,622 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:51:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:51:29,622 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:51:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:51:35,661 - root - INFO - 请求: POST /api/generate-article
2025-07-19 12:51:35,661 - root - INFO - 生成文章请求
2025-07-19 12:51:35,661 - controllers.article_controller - INFO - 【唯一请求ID】0f4962e3-ac30-4119-af10-881f6e692a47 - generate_article
2025-07-19 12:51:35,662 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '河南煤气燃爆烧伤母亲出ICU', 'word_count': 8000, 'image_count': 10, 'format_template': '<div style="font-family: "PingFang SC", "Microsoft YaHei", sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px; font-size: 16px;">\n    \n    <!-- 1. 标题封面区块 (蓝紫色渐变，底部圆角) -->\n    <section style="padding: 28px 20px; background: linear-gradient(160deg, rgb(78, 84, 200) 0%, rgb(143, 148, 251) 100%); color: white; border-radius: 0px 0px 25px 25px; box-shadow: rgba(78, 84, 200, 0.3) 0px 4px 15px; margin-bottom: 25px;">\n      <h1 style="font-size: 35px; margin: 0px; font-weight: 700; letter-spacing: -0.5px; line-height: 1.2;">\n          AI生成主标题<br>\n          <span style="font-size: 40px; font-weight: 800;">AI生成强调副标题</span>\n      </h1>\n      <p style="font-size: 18px; margin: 15px 0px 0px; opacity: 0.9; font-weight: 300; letter-spacing: 0.5px;">AI生成引言或概括语</p>\n    </section>\n\n    <!-- 2. 前言区块 (白色背景，圆角，阴影，带居中图标) -->\n    <section style="padding: 20px; margin: 0px 0px 25px; background: white; border-radius: 18px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <!-- 居中电话图标 (Animated path removed, only static path) -->\n      <svg style="width: 65px; height: 65px; display: block; margin: 0px auto 15px;" viewBox="0 0 24 24" fill="none" stroke="#4e54c8" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z"></path>\n      </svg>\n      <h2 style="font-size: 24px; margin: 0px 0px 15px; text-align: center; color: rgb(78, 84, 200); font-weight: 600;">AI生成前言标题</h2>\n      <p style="margin: 0px 0px 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成前言段落一。此段落带有首行缩进。</p>\n      <p style="margin: 0px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成前言段落二。继续阐述前言内容。</p>\n    </section>\n\n    <!-- 3. 学习认知基础区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0px 0px 25px; background: white; border-radius: 18px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: rgb(78, 84, 200); display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 3L1 9l11 6 11-6-11-6zM1 9v6l11 6 11-6V9"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0px; font-weight: 600; color: rgb(51, 51, 51);">AI生成二级标题</h2>\n      </div>\n      \n      <h3 style="font-size: 19px; margin: 20px 0px 12px; color: rgb(78, 84, 200); font-weight: 600;">AI生成三级标题</h3>\n      <p style="margin: 0px 0px 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成正文段落一，此段落带有首行缩进。</p>\n      \n      <h3 style="font-size: 19px; margin: 20px 0px 12px; color: rgb(78, 84, 200); font-weight: 600;">AI生成三级标题</h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成正文段落二，此段落带有首行缩进。</p>\n      \n      <!-- 引用框 (浅蓝色背景，左侧深蓝边框，圆角) -->\n      <div style="background: #f1f2ff; padding: 15px; border-radius: 12px; margin: 20px 0; border-left: 4px solid #4e54c8;">\n        <p style="margin: 0; font-size: 15px; font-weight: 500; color: #333;">AI生成引用或提示内容，无缩进。</p>\n      </div>\n    </section>\n\n    <!-- 4. 核心策略区块 (白色背景，圆角，阴影，带圆形数字和图标的H3) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #8f94fb; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M17 3H7a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm-1 9h-2v2h-2v-2H9V9h3V7h2v2h3v3z"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <!-- 带有圆形数字的H3列表项 (多个重复) -->\n      <h3 style="font-size: 19px; margin: 25px 0 12px; color: #8f94fb; font-weight: 600; display: flex; align-items: center;">\n        <span style="display: inline-flex; justify-content: center; align-items: center; width: 28px; height: 28px; background: #8f94fb; color: white; border-radius: 50%; margin-right: 10px; font-size: 14px;">1</span>AI生成策略标题\n      </h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落一。</p>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落二。</p>\n      \n      <!-- 引用框 (浅灰色背景，带图标，圆角，Flex布局) -->\n      <div style="background: #f8f9ff; border-radius: 12px; padding: 15px; margin: 20px 0; display: flex; align-items: center;">\n        <svg style="width: 50px; height: 50px; margin-right: 15px;" viewBox="0 0 24 24" fill="none">\n          <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <path d="M16 17l5-5-5-5" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <path d="M21 12H9" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n        </svg>\n        <p style="margin: 0; font-size: 15px; color: #555; font-style: italic;">"AI生成引用或哲学思考内容。" — 引用来源</p>\n      </div>\n\n      <!-- 多个带有圆形数字的H3列表项重复 -->\n      <h3 style="font-size: 19px; margin: 25px 0 12px; color: #8f94fb; font-weight: 600; display: flex; align-items: center;">\n        <span style="display: inline-flex; justify-content: center; align-items: center; width: 28px; height: 28px; background: #8f94fb; color: white; border-radius: 50%; margin-right: 10px; font-size: 14px;">2</span>AI生成策略标题\n      </h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落。</p>\n      \n      <!-- ... (其他类似策略重复) -->\n\n    </section>\n\n    <!-- 5. 构建个人学习系统区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #4e54c8; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成引言段落，带有首行缩进。</p>\n\n      <!-- 灰色背景的系统模块列表容器 -->\n      <div style="background: #f5f7fa; border-radius: 15px; padding: 20px; margin: 20px 0;">\n        <h3 style="font-size: 18px; margin: 0 0 15px; color: #4e54c8; font-weight: 600;">AI生成模块列表标题</h3>\n        \n        <!-- 单个模块项 -->\n        <div style="margin-bottom: 15px;">\n          <h4 style="font-size: 16px; margin: 0 0 8px; color: #333; font-weight: 600;">1. AI生成模块标题</h4>\n          <p style="margin: 0; font-size: 15px; color: #555;">AI生成模块描述内容。</p>\n        </div>\n        <!-- ... (其他模块项重复) -->\n        <div>\n          <h4 style="font-size: 16px; margin: 0 0 8px; color: #333; font-weight: 600;">4. AI生成模块标题</h4>\n          <p style="margin: 0; font-size: 15px; color: #555;">AI生成模块描述内容。</p>\n        </div>\n      </div>\n\n      <h3 style="font-size: 19px; margin: 25px 0 15px; color: #4e54c8; font-weight: 600;">AI生成数字化工具标题</h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成工具引言段落。</p>\n\n      <!-- 工具卡片网格布局容器 -->\n      <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap: 10px; margin: 15px 0;">\n        <!-- 单个工具卡片 -->\n        <div style="padding: 12px; background: #f5f7fa; border-radius: 10px; text-align: center;">\n          <p style="margin: 0 0 5px; font-size: 14px; font-weight: 600; color: #4e54c8;">AI生成工具类别</p>\n          <p style="margin: 0; font-size: 13px; color: #555;">AI生成具体工具名称列表</p>\n        </div>\n        <!-- ... (其他工具卡片重复) -->\n      </div>\n    </section>\n\n    <!-- 6. 克服学习障碍区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #8f94fb; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成引言段落，描述学习障碍。</p>\n\n      <!-- 带背景渐变和边框的障碍卡片容器 (多个重复) -->\n      <div style="background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%); border-radius: 15px; padding: 5px; margin: 20px 0;">\n        <div style="background: white; border-radius: 12px; padding: 15px;">\n          <h3 style="font-size: 18px; margin: 0 0 10px; color: #8f94fb; font-weight: 600;">AI生成障碍标题</h3>\n          <p style="margin: 0 0 10px; font-size: 15px; color: #444;">AI生成障碍描述。</p>\n          <p style="margin: 0; font-size: 15px; color: #444; font-weight: 500;">AI生成解决方案。</p>\n        </div>\n      </div>\n      <!-- ... (其他障碍卡片重复) -->\n\n    </section>\n\n    <!-- 7. 结语区块 (蓝紫色渐变背景，底部圆角，带居中图标) -->\n    <section style="padding: 25px 20px 30px; margin: 0 0 25px; background: linear-gradient(160deg, #4e54c8 0%, #8f94fb 100%); color: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(78, 84, 200, 0.3);">\n      <h2 style="font-size: 24px; margin: 0 0 20px; font-weight: 600; text-align: center;">AI生成结语标题</h2>\n      \n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; opacity: 0.9;">AI生成结语段落一。</p>\n      \n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; opacity: 0.9;">AI生成结语段落二。</p>\n      \n      <!-- 居中加号/圆圈图标 -->\n      <div style="text-align: center; margin-top: 25px;">\n        <svg style="width: 60px; height: 60px;" viewBox="0 0 24 24" fill="none">\n          <path d="M12 2v20M2 12h20" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <circle cx="12" cy="12" r="10" stroke="white" stroke-width="2" fill="none"></circle>\n        </svg>\n        <p style="margin: 15px 0 0; font-size: 18px; font-weight: 600; letter-spacing: 1px;">AI生成结束语文本</p>\n      </div>\n    </section>\n\n</div>', 'ai_model': 'dashscope', 'image_model': 'pexels'}
2025-07-19 12:51:35,662 - controllers.article_controller - INFO - 开始生成文章，标题: 河南煤气燃爆烧伤母亲出ICU
2025-07-19 12:51:35,662 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: pexels
2025-07-19 12:51:35,663 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:51:35,663 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-19 12:51:35,663 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-19 12:51:36,109 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘河南煤气燃爆烧伤母亲出ICU’的公众号文章，排版核心风格要与模板一致，字数约8000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n<div style="font-family: "PingFang SC", "Microsoft YaHei", sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px; font-size: 16px;">\n    \n    <!-- 1. 标题封面区块 (蓝紫色渐变，底部圆角) -->\n    <section style="padding: 28px 20px; background: linear-gradient(160deg, rgb(78, 84, 200) 0%, rgb(143, 148, 251) 100%); color: white; border-radius: 0px 0px 25px 25px; box-shadow: rgba(78, 84, 200, 0.3) 0px 4px 15px; margin-bottom: 25px;">\n      <h1 style="font-size: 35px; margin: 0px; font-weight: 700; letter-spacing: -0.5px; line-height: 1.2;">\n          AI生成主标题<br>\n          <span style="font-size: 40px; font-weight: 800;">AI生成强调副标题</span>\n      </h1>\n      <p style="font-size: 18px; margin: 15px 0px 0px; opacity: 0.9; font-weight: 300; letter-spacing: 0.5px;">AI生成引言或概括语</p>\n    </section>\n\n    <!-- 2. 前言区块 (白色背景，圆角，阴影，带居中图标) -->\n    <section style="padding: 20px; margin: 0px 0px 25px; background: white; border-radius: 18px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <!-- 居中电话图标 (Animated path removed, only static path) -->\n      <svg style="width: 65px; height: 65px; display: block; margin: 0px auto 15px;" viewBox="0 0 24 24" fill="none" stroke="#4e54c8" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z"></path>\n      </svg>\n      <h2 style="font-size: 24px; margin: 0px 0px 15px; text-align: center; color: rgb(78, 84, 200); font-weight: 600;">AI生成前言标题</h2>\n      <p style="margin: 0px 0px 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成前言段落一。此段落带有首行缩进。</p>\n      <p style="margin: 0px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成前言段落二。继续阐述前言内容。</p>\n    </section>\n\n    <!-- 3. 学习认知基础区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0px 0px 25px; background: white; border-radius: 18px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: rgb(78, 84, 200); display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 3L1 9l11 6 11-6-11-6zM1 9v6l11 6 11-6V9"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0px; font-weight: 600; color: rgb(51, 51, 51);">AI生成二级标题</h2>\n      </div>\n      \n      <h3 style="font-size: 19px; margin: 20px 0px 12px; color: rgb(78, 84, 200); font-weight: 600;">AI生成三级标题</h3>\n      <p style="margin: 0px 0px 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成正文段落一，此段落带有首行缩进。</p>\n      \n      <h3 style="font-size: 19px; margin: 20px 0px 12px; color: rgb(78, 84, 200); font-weight: 600;">AI生成三级标题</h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成正文段落二，此段落带有首行缩进。</p>\n      \n      <!-- 引用框 (浅蓝色背景，左侧深蓝边框，圆角) -->\n      <div style="background: #f1f2ff; padding: 15px; border-radius: 12px; margin: 20px 0; border-left: 4px solid #4e54c8;">\n        <p style="margin: 0; font-size: 15px; font-weight: 500; color: #333;">AI生成引用或提示内容，无缩进。</p>\n      </div>\n    </section>\n\n    <!-- 4. 核心策略区块 (白色背景，圆角，阴影，带圆形数字和图标的H3) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #8f94fb; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M17 3H7a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm-1 9h-2v2h-2v-2H9V9h3V7h2v2h3v3z"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <!-- 带有圆形数字的H3列表项 (多个重复) -->\n      <h3 style="font-size: 19px; margin: 25px 0 12px; color: #8f94fb; font-weight: 600; display: flex; align-items: center;">\n        <span style="display: inline-flex; justify-content: center; align-items: center; width: 28px; height: 28px; background: #8f94fb; color: white; border-radius: 50%; margin-right: 10px; font-size: 14px;">1</span>AI生成策略标题\n      </h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落一。</p>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落二。</p>\n      \n      <!-- 引用框 (浅灰色背景，带图标，圆角，Flex布局) -->\n      <div style="background: #f8f9ff; border-radius: 12px; padding: 15px; margin: 20px 0; display: flex; align-items: center;">\n        <svg style="width: 50px; height: 50px; margin-right: 15px;" viewBox="0 0 24 24" fill="none">\n          <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <path d="M16 17l5-5-5-5" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <path d="M21 12H9" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n        </svg>\n        <p style="margin: 0; font-size: 15px; color: #555; font-style: italic;">"AI生成引用或哲学思考内容。" — 引用来源</p>\n      </div>\n\n      <!-- 多个带有圆形数字的H3列表项重复 -->\n      <h3 style="font-size: 19px; margin: 25px 0 12px; color: #8f94fb; font-weight: 600; display: flex; align-items: center;">\n        <span style="display: inline-flex; justify-content: center; align-items: center; width: 28px; height: 28px; background: #8f94fb; color: white; border-radius: 50%; margin-right: 10px; font-size: 14px;">2</span>AI生成策略标题\n      </h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落。</p>\n      \n      <!-- ... (其他类似策略重复) -->\n\n    </section>\n\n    <!-- 5. 构建个人学习系统区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #4e54c8; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成引言段落，带有首行缩进。</p>\n\n      <!-- 灰色背景的系统模块列表容器 -->\n      <div style="background: #f5f7fa; border-radius: 15px; padding: 20px; margin: 20px 0;">\n        <h3 style="font-size: 18px; margin: 0 0 15px; color: #4e54c8; font-weight: 600;">AI生成模块列表标题</h3>\n        \n        <!-- 单个模块项 -->\n        <div style="margin-bottom: 15px;">\n          <h4 style="font-size: 16px; margin: 0 0 8px; color: #333; font-weight: 600;">1. AI生成模块标题</h4>\n          <p style="margin: 0; font-size: 15px; color: #555;">AI生成模块描述内容。</p>\n        </div>\n        <!-- ... (其他模块项重复) -->\n        <div>\n          <h4 style="font-size: 16px; margin: 0 0 8px; color: #333; font-weight: 600;">4. AI生成模块标题</h4>\n          <p style="margin: 0; font-size: 15px; color: #555;">AI生成模块描述内容。</p>\n        </div>\n      </div>\n\n      <h3 style="font-size: 19px; margin: 25px 0 15px; color: #4e54c8; font-weight: 600;">AI生成数字化工具标题</h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成工具引言段落。</p>\n\n      <!-- 工具卡片网格布局容器 -->\n      <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap: 10px; margin: 15px 0;">\n        <!-- 单个工具卡片 -->\n        <div style="padding: 12px; background: #f5f7fa; border-radius: 10px; text-align: center;">\n          <p style="margin: 0 0 5px; font-size: 14px; font-weight: 600; color: #4e54c8;">AI生成工具类别</p>\n          <p style="margin: 0; font-size: 13px; color: #555;">AI生成具体工具名称列表</p>\n        </div>\n        <!-- ... (其他工具卡片重复) -->\n      </div>\n    </section>\n\n    <!-- 6. 克服学习障碍区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #8f94fb; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成引言段落，描述学习障碍。</p>\n\n      <!-- 带背景渐变和边框的障碍卡片容器 (多个重复) -->\n      <div style="background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%); border-radius: 15px; padding: 5px; margin: 20px 0;">\n        <div style="background: white; border-radius: 12px; padding: 15px;">\n          <h3 style="font-size: 18px; margin: 0 0 10px; color: #8f94fb; font-weight: 600;">AI生成障碍标题</h3>\n          <p style="margin: 0 0 10px; font-size: 15px; color: #444;">AI生成障碍描述。</p>\n          <p style="margin: 0; font-size: 15px; color: #444; font-weight: 500;">AI生成解决方案。</p>\n        </div>\n      </div>\n      <!-- ... (其他障碍卡片重复) -->\n\n    </section>\n\n    <!-- 7. 结语区块 (蓝紫色渐变背景，底部圆角，带居中图标) -->\n    <section style="padding: 25px 20px 30px; margin: 0 0 25px; background: linear-gradient(160deg, #4e54c8 0%, #8f94fb 100%); color: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(78, 84, 200, 0.3);">\n      <h2 style="font-size: 24px; margin: 0 0 20px; font-weight: 600; text-align: center;">AI生成结语标题</h2>\n      \n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; opacity: 0.9;">AI生成结语段落一。</p>\n      \n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; opacity: 0.9;">AI生成结语段落二。</p>\n      \n      <!-- 居中加号/圆圈图标 -->\n      <div style="text-align: center; margin-top: 25px;">\n        <svg style="width: 60px; height: 60px;" viewBox="0 0 24 24" fill="none">\n          <path d="M12 2v20M2 12h20" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <circle cx="12" cy="12" r="10" stroke="white" stroke-width="2" fill="none"></circle>\n        </svg>\n        <p style="margin: 15px 0 0; font-size: 18px; font-weight: 600; letter-spacing: 1px;">AI生成结束语文本</p>\n      </div>\n    </section>\n\n</div>'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-19 12:51:36,110 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:51:36,111 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:51:36,149 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000734ECC0>
2025-07-19 12:51:36,149 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073B6250> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:51:36,164 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000734EA20>
2025-07-19 12:51:36,164 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:51:36,165 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:51:36,165 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:51:36,165 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:51:36,166 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:51:59,614 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:51:59,614 - root - INFO - 获取生成历史请求
2025-07-19 12:51:59,614 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:51:59,615 - root - INFO - 获取发布历史请求
2025-07-19 12:51:59,615 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:51:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:51:59,616 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:51:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:52:29,616 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:52:29,617 - root - INFO - 获取生成历史请求
2025-07-19 12:52:29,617 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:52:29,617 - root - INFO - 获取发布历史请求
2025-07-19 12:52:29,618 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:52:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:52:29,619 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:52:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:52:59,615 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:52:59,615 - root - INFO - 获取生成历史请求
2025-07-19 12:52:59,615 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:52:59,615 - root - INFO - 获取发布历史请求
2025-07-19 12:52:59,616 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:52:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:52:59,616 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:52:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:53:07,933 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'2c170953-33be-9ee0-ac43-fb79db903c04'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'91755'), (b'req-arrive-time', b'1752900690811'), (b'resp-start-time', b'1752900782567'), (b'x-envoy-upstream-service-time', b'91741'), (b'set-cookie', b'acw_tc=2c170953-33be-9ee0-ac43-fb79db903c04e08de37be5adca3bbf9049c1a34de2f2;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:02 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:07,934 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:07,934 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:07,935 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:07,935 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:07,935 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:07,935 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '2c170953-33be-9ee0-ac43-fb79db903c04', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '91755', 'req-arrive-time': '1752900690811', 'resp-start-time': '1752900782567', 'x-envoy-upstream-service-time': '91741', 'set-cookie': 'acw_tc=2c170953-33be-9ee0-ac43-fb79db903c04e08de37be5adca3bbf9049c1a34de2f2;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:02 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:07,936 - openai._base_client - DEBUG - request_id: 2c170953-33be-9ee0-ac43-fb79db903c04
2025-07-19 12:53:07,936 - controllers.article_controller - INFO - 文章内容生成成功，长度: 8652字符
2025-07-19 12:53:07,936 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-19 12:53:07,936 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 河南煤气燃爆烧伤母亲出ICU
2025-07-19 12:53:08,404 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：河南煤气燃爆烧伤母亲出ICU\n内容预览：以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责任和医疗救助的关注。全文约8000字，总字符数控制在20000以内，完全符合模板样式要求。 --- ```html 河南煤气燃爆事故 母亲重度烧伤\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:08,405 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:08,405 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:08,440 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073CEBA0>
2025-07-19 12:53:08,440 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073C0350> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:08,456 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073CE900>
2025-07-19 12:53:08,456 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:08,456 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:08,457 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:08,457 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:08,457 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:09,614 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'da8410ab-f8fb-9911-abc4-357c65decc70'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1144'), (b'req-arrive-time', b'1752900783105'), (b'resp-start-time', b'1752900784249'), (b'x-envoy-upstream-service-time', b'1142'), (b'set-cookie', b'acw_tc=da8410ab-f8fb-9911-abc4-357c65decc70e0edfb6e50fee5eb9007855fa3268f55;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:04 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:09,615 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:09,615 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:09,616 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:09,616 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:09,616 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:09,617 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'da8410ab-f8fb-9911-abc4-357c65decc70', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1144', 'req-arrive-time': '1752900783105', 'resp-start-time': '1752900784249', 'x-envoy-upstream-service-time': '1142', 'set-cookie': 'acw_tc=da8410ab-f8fb-9911-abc4-357c65decc70e0edfb6e50fee5eb9007855fa3268f55;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:04 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:09,617 - openai._base_client - DEBUG - request_id: da8410ab-f8fb-9911-abc4-357c65decc70
2025-07-19 12:53:09,617 - services.dashscope_service - INFO - 文章摘要生成成功: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。
2025-07-19 12:53:09,618 - controllers.article_controller - INFO - 摘要生成完成: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任...
2025-07-19 12:53:09,618 - controllers.article_controller - INFO - 文章字数约: 8000，计划生成配图数量: 10
2025-07-19 12:53:09,618 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-19 12:53:09,618 - controllers.article_controller - INFO - 开始处理文章配图，计划生成10张图片（仅本地路径，不上传微信）
2025-07-19 12:53:09,618 - controllers.article_controller - INFO - 计划在第[1, 3, 4, 5, 6, 8, 9, 10, 11, 13]段后插入配图
2025-07-19 12:53:09,618 - controllers.article_controller - INFO - 生成第1张配图，使用模型: pexels
2025-07-19 12:53:09,619 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图1, 生图模型: pexels, AI模型: dashscope, 图片索引: 1/10
2025-07-19 12:53:09,619 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图1, AI模型: dashscope, 图片索引: 1/10
2025-07-19 12:53:09,619 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:09,619 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:09,619 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:09,620 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:10,080 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图1\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第1张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:10,081 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:10,081 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:10,096 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073E50D0>
2025-07-19 12:53:10,096 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073C2E50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:10,111 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073E4E00>
2025-07-19 12:53:10,111 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:10,112 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:10,112 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:10,112 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:10,112 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:10,723 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ab2865da-bf26-90ba-a6fe-e6b8f3599958'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'596'), (b'req-arrive-time', b'1752900784759'), (b'resp-start-time', b'1752900785356'), (b'x-envoy-upstream-service-time', b'595'), (b'set-cookie', b'acw_tc=ab2865da-bf26-90ba-a6fe-e6b8f359995823881ad49360a24700ba118019fc4127;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:05 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:10,723 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:10,723 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:10,724 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:10,724 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:10,724 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:10,724 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ab2865da-bf26-90ba-a6fe-e6b8f3599958', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '596', 'req-arrive-time': '1752900784759', 'resp-start-time': '1752900785356', 'x-envoy-upstream-service-time': '595', 'set-cookie': 'acw_tc=ab2865da-bf26-90ba-a6fe-e6b8f359995823881ad49360a24700ba118019fc4127;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:05 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:10,725 - openai._base_client - DEBUG - request_id: ab2865da-bf26-90ba-a6fe-e6b8f3599958
2025-07-19 12:53:10,725 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: mother hospital intensive care
2025-07-19 12:53:10,727 - httpcore.connection - DEBUG - close.started
2025-07-19 12:53:10,728 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:53:10,729 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:11,733 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=mother+hospital+intensive+care&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:11,734 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:11,734 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:11,734 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-19 12:53:11,735 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125311.jpg
2025-07-19 12:53:11,735 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:12,529 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/7089015/pexels-photo-7089015.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 119061
2025-07-19 12:53:12,567 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125311.jpg
2025-07-19 12:53:12,567 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125311.jpg
2025-07-19 12:53:12,568 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125311.jpg
2025-07-19 12:53:12,568 - controllers.article_controller - INFO - 生成第2张配图，使用模型: pexels
2025-07-19 12:53:12,568 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图2, 生图模型: pexels, AI模型: dashscope, 图片索引: 2/10
2025-07-19 12:53:12,568 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图2, AI模型: dashscope, 图片索引: 2/10
2025-07-19 12:53:12,569 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:12,569 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:12,569 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:12,569 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:13,033 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图2\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第2张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:13,035 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:13,036 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:13,063 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073E5C70>
2025-07-19 12:53:13,064 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073B5B50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:13,084 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073CF380>
2025-07-19 12:53:13,085 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:13,086 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:13,087 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:13,088 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:13,089 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:13,658 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'84c2b774-02e0-9d56-8ef6-3bfbd279dd26'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'559'), (b'req-arrive-time', b'1752900787733'), (b'resp-start-time', b'1752900788292'), (b'x-envoy-upstream-service-time', b'556'), (b'set-cookie', b'acw_tc=84c2b774-02e0-9d56-8ef6-3bfbd279dd2664b2a307212a0ea808b74a571cdc2450;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:07 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:13,659 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:13,659 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:13,660 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:13,660 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:13,660 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:13,661 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '84c2b774-02e0-9d56-8ef6-3bfbd279dd26', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '559', 'req-arrive-time': '1752900787733', 'resp-start-time': '1752900788292', 'x-envoy-upstream-service-time': '556', 'set-cookie': 'acw_tc=84c2b774-02e0-9d56-8ef6-3bfbd279dd2664b2a307212a0ea808b74a571cdc2450;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:07 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:13,661 - openai._base_client - DEBUG - request_id: 84c2b774-02e0-9d56-8ef6-3bfbd279dd26
2025-07-19 12:53:13,662 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: mother in hospital gas
2025-07-19 12:53:13,663 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:14,132 - httpcore.connection - DEBUG - close.started
2025-07-19 12:53:14,133 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:53:14,758 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=mother+in+hospital+gas&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:14,767 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:14,768 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:14,769 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-19 12:53:14,769 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_125314.jpg
2025-07-19 12:53:14,771 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:15,464 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/7089401/pexels-photo-7089401.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 110708
2025-07-19 12:53:15,495 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_125314.jpg
2025-07-19 12:53:15,495 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_125314.jpg
2025-07-19 12:53:15,495 - controllers.article_controller - INFO - 第2张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_125314.jpg
2025-07-19 12:53:15,496 - controllers.article_controller - INFO - 生成第3张配图，使用模型: pexels
2025-07-19 12:53:15,496 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图3, 生图模型: pexels, AI模型: dashscope, 图片索引: 3/10
2025-07-19 12:53:15,496 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图3, AI模型: dashscope, 图片索引: 3/10
2025-07-19 12:53:15,496 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:15,496 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:15,497 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:15,497 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:15,954 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图3\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第3张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:15,954 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:15,954 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:15,989 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073E6EA0>
2025-07-19 12:53:15,989 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073B61D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:16,007 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073E4CB0>
2025-07-19 12:53:16,007 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:16,007 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:16,007 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:16,008 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:16,008 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:16,556 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'b38cea57-ba51-9125-96a2-e047bcfa90a6'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'536'), (b'req-arrive-time', b'1752900790655'), (b'resp-start-time', b'1752900791191'), (b'x-envoy-upstream-service-time', b'534'), (b'set-cookie', b'acw_tc=b38cea57-ba51-9125-96a2-e047bcfa90a6b3d3c8ea0243812d100199dd89132069;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:10 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:16,557 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:16,557 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:16,557 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:16,558 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:16,558 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:16,558 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'b38cea57-ba51-9125-96a2-e047bcfa90a6', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '536', 'req-arrive-time': '1752900790655', 'resp-start-time': '1752900791191', 'x-envoy-upstream-service-time': '534', 'set-cookie': 'acw_tc=b38cea57-ba51-9125-96a2-e047bcfa90a6b3d3c8ea0243812d100199dd89132069;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:10 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:16,558 - openai._base_client - DEBUG - request_id: b38cea57-ba51-9125-96a2-e047bcfa90a6
2025-07-19 12:53:16,558 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: hospital recovery medical treatment
2025-07-19 12:53:16,559 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:17,490 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=hospital+recovery+medical+treatment&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:17,491 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:17,492 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:17,492 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-19 12:53:17,492 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_125317.jpg
2025-07-19 12:53:17,493 - httpcore.connection - DEBUG - close.started
2025-07-19 12:53:17,494 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:53:17,497 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:18,242 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/7659877/pexels-photo-7659877.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 93898
2025-07-19 12:53:18,289 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_125317.jpg
2025-07-19 12:53:18,289 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_125317.jpg
2025-07-19 12:53:18,290 - controllers.article_controller - INFO - 第3张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_125317.jpg
2025-07-19 12:53:18,290 - controllers.article_controller - INFO - 生成第4张配图，使用模型: pexels
2025-07-19 12:53:18,290 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图4, 生图模型: pexels, AI模型: dashscope, 图片索引: 4/10
2025-07-19 12:53:18,290 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图4, AI模型: dashscope, 图片索引: 4/10
2025-07-19 12:53:18,291 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:18,291 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:18,291 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:18,292 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:18,747 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图4\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第4张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:18,747 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:18,748 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:18,762 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000734FFB0>
2025-07-19 12:53:18,762 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073B6150> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:18,781 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000000000734F980>
2025-07-19 12:53:18,782 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:18,782 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:18,782 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:18,782 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:18,783 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:19,265 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ce023ffc-dd66-9d29-93d8-06f460363284'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'469'), (b'req-arrive-time', b'1752900793429'), (b'resp-start-time', b'1752900793898'), (b'x-envoy-upstream-service-time', b'467'), (b'set-cookie', b'acw_tc=ce023ffc-dd66-9d29-93d8-06f46036328425f7da0b445fa8ec4f7410fec6bc5a37;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:13 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:19,266 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:19,266 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:19,267 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:19,267 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:19,267 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:19,268 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ce023ffc-dd66-9d29-93d8-06f460363284', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '469', 'req-arrive-time': '1752900793429', 'resp-start-time': '1752900793898', 'x-envoy-upstream-service-time': '467', 'set-cookie': 'acw_tc=ce023ffc-dd66-9d29-93d8-06f46036328425f7da0b445fa8ec4f7410fec6bc5a37;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:13 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:19,268 - openai._base_client - DEBUG - request_id: ce023ffc-dd66-9d29-93d8-06f460363284
2025-07-19 12:53:19,269 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: recovery hospital stay burn
2025-07-19 12:53:19,271 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:20,242 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=recovery+hospital+stay+burn&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:20,242 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:20,242 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:20,243 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-19 12:53:20,243 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图4_20250719_125320.jpg
2025-07-19 12:53:20,244 - httpcore.connection - DEBUG - close.started
2025-07-19 12:53:20,244 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:53:20,245 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:20,979 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/6129661/pexels-photo-6129661.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 232604
2025-07-19 12:53:21,055 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图4_20250719_125320.jpg
2025-07-19 12:53:21,055 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图4_20250719_125320.jpg
2025-07-19 12:53:21,056 - controllers.article_controller - INFO - 第4张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图4_20250719_125320.jpg
2025-07-19 12:53:21,056 - controllers.article_controller - INFO - 生成第5张配图，使用模型: pexels
2025-07-19 12:53:21,056 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图5, 生图模型: pexels, AI模型: dashscope, 图片索引: 5/10
2025-07-19 12:53:21,056 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图5, AI模型: dashscope, 图片索引: 5/10
2025-07-19 12:53:21,056 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:21,056 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:21,057 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:21,057 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:21,517 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图5\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第5张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:21,518 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:21,518 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:21,547 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073F9340>
2025-07-19 12:53:21,547 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073C0950> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:21,567 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073F8FB0>
2025-07-19 12:53:21,568 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:21,568 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:21,568 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:21,569 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:21,569 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:22,272 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'0a365964-b24d-999f-9ac2-fb94ab2f6012'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'687'), (b'req-arrive-time', b'1752900796214'), (b'resp-start-time', b'1752900796902'), (b'x-envoy-upstream-service-time', b'687'), (b'set-cookie', b'acw_tc=0a365964-b24d-999f-9ac2-fb94ab2f6012149d2ca7da65129383faaa0e7dfdd115;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:16 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:22,272 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:22,272 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:22,273 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:22,273 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:22,273 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:22,273 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '0a365964-b24d-999f-9ac2-fb94ab2f6012', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '687', 'req-arrive-time': '1752900796214', 'resp-start-time': '1752900796902', 'x-envoy-upstream-service-time': '687', 'set-cookie': 'acw_tc=0a365964-b24d-999f-9ac2-fb94ab2f6012149d2ca7da65129383faaa0e7dfdd115;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:16 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:22,273 - openai._base_client - DEBUG - request_id: 0a365964-b24d-999f-9ac2-fb94ab2f6012
2025-07-19 12:53:22,274 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: family safety gas explosion
2025-07-19 12:53:22,275 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:23,263 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=family+safety+gas+explosion&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:23,263 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:23,264 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:23,264 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-19 12:53:23,264 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图5_20250719_125323.jpg
2025-07-19 12:53:23,265 - httpcore.connection - DEBUG - close.started
2025-07-19 12:53:23,266 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:53:23,266 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:24,187 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/6393356/pexels-photo-6393356.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 140052
2025-07-19 12:53:24,229 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图5_20250719_125323.jpg
2025-07-19 12:53:24,229 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图5_20250719_125323.jpg
2025-07-19 12:53:24,229 - controllers.article_controller - INFO - 第5张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图5_20250719_125323.jpg
2025-07-19 12:53:24,229 - controllers.article_controller - INFO - 生成第6张配图，使用模型: pexels
2025-07-19 12:53:24,230 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图6, 生图模型: pexels, AI模型: dashscope, 图片索引: 6/10
2025-07-19 12:53:24,230 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图6, AI模型: dashscope, 图片索引: 6/10
2025-07-19 12:53:24,230 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:24,230 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:24,231 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:24,231 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:24,688 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图6\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第6张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:24,689 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:24,689 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:24,721 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073F8FB0>
2025-07-19 12:53:24,721 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073B5E50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:24,737 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073F95B0>
2025-07-19 12:53:24,737 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:24,738 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:24,738 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:24,738 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:24,738 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:26,052 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'8f6940c6-3357-98e1-8d7a-133504133537'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1301'), (b'req-arrive-time', b'1752900799385'), (b'resp-start-time', b'1752900800687'), (b'x-envoy-upstream-service-time', b'1300'), (b'set-cookie', b'acw_tc=8f6940c6-3357-98e1-8d7a-1335041335374f98950c58a9cf0d5b62bfa56d334504;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:20 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:26,053 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:26,053 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:26,053 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:26,053 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:26,054 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:26,054 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '8f6940c6-3357-98e1-8d7a-133504133537', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1301', 'req-arrive-time': '1752900799385', 'resp-start-time': '1752900800687', 'x-envoy-upstream-service-time': '1300', 'set-cookie': 'acw_tc=8f6940c6-3357-98e1-8d7a-1335041335374f98950c58a9cf0d5b62bfa56d334504;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:20 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:26,054 - openai._base_client - DEBUG - request_id: 8f6940c6-3357-98e1-8d7a-133504133537
2025-07-19 12:53:26,055 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: family mother hospital recovery
2025-07-19 12:53:26,055 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:27,176 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=family+mother+hospital+recovery&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:27,176 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:27,177 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:27,177 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-19 12:53:27,177 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图6_20250719_125327.jpg
2025-07-19 12:53:27,179 - httpcore.connection - DEBUG - close.started
2025-07-19 12:53:27,179 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:53:27,179 - httpcore.connection - DEBUG - close.started
2025-07-19 12:53:27,180 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:53:27,181 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:28,064 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/3279204/pexels-photo-3279204.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 203091
2025-07-19 12:53:28,163 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图6_20250719_125327.jpg
2025-07-19 12:53:28,163 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图6_20250719_125327.jpg
2025-07-19 12:53:28,164 - controllers.article_controller - INFO - 第6张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图6_20250719_125327.jpg
2025-07-19 12:53:28,164 - controllers.article_controller - INFO - 生成第7张配图，使用模型: pexels
2025-07-19 12:53:28,164 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图7, 生图模型: pexels, AI模型: dashscope, 图片索引: 7/10
2025-07-19 12:53:28,164 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图7, AI模型: dashscope, 图片索引: 7/10
2025-07-19 12:53:28,164 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:28,165 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:28,165 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:28,165 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:28,625 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图7\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第7张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:28,625 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:28,625 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:28,661 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073387A0>
2025-07-19 12:53:28,661 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073B5E50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:28,675 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000007338B00>
2025-07-19 12:53:28,675 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:28,675 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:28,675 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:28,675 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:28,676 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:29,324 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'c60d9ca4-e950-9d3a-b7d6-9f6770475087'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'637'), (b'req-arrive-time', b'1752900803322'), (b'resp-start-time', b'1752900803959'), (b'x-envoy-upstream-service-time', b'636'), (b'set-cookie', b'acw_tc=c60d9ca4-e950-9d3a-b7d6-9f6770475087389b8971f2c58bf524b95e1fbfb11c0c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:23 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:29,325 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:29,325 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:29,325 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:29,326 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:29,326 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:29,326 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'c60d9ca4-e950-9d3a-b7d6-9f6770475087', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '637', 'req-arrive-time': '1752900803322', 'resp-start-time': '1752900803959', 'x-envoy-upstream-service-time': '636', 'set-cookie': 'acw_tc=c60d9ca4-e950-9d3a-b7d6-9f6770475087389b8971f2c58bf524b95e1fbfb11c0c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:23 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:29,326 - openai._base_client - DEBUG - request_id: c60d9ca4-e950-9d3a-b7d6-9f6770475087
2025-07-19 12:53:29,327 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: mother holding child hospital
2025-07-19 12:53:29,328 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:29,614 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:53:29,658 - root - INFO - 获取生成历史请求
2025-07-19 12:53:29,658 - httpcore.connection - DEBUG - close.started
2025-07-19 12:53:29,659 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:53:29,659 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:53:29,660 - httpcore.connection - DEBUG - close.started
2025-07-19 12:53:29,660 - httpcore.connection - DEBUG - close.complete
2025-07-19 12:53:29,664 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:53:29,665 - root - INFO - 获取发布历史请求
2025-07-19 12:53:29,665 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:53:30,329 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=mother+holding+child+hospital&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:30,330 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:30,330 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:30,330 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-19 12:53:30,330 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图7_20250719_125330.jpg
2025-07-19 12:53:30,331 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:31,043 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/4041805/pexels-photo-4041805.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 252139
2025-07-19 12:53:31,112 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图7_20250719_125330.jpg
2025-07-19 12:53:31,112 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图7_20250719_125330.jpg
2025-07-19 12:53:31,112 - controllers.article_controller - INFO - 第7张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图7_20250719_125330.jpg
2025-07-19 12:53:31,113 - controllers.article_controller - INFO - 生成第8张配图，使用模型: pexels
2025-07-19 12:53:31,113 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图8, 生图模型: pexels, AI模型: dashscope, 图片索引: 8/10
2025-07-19 12:53:31,113 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图8, AI模型: dashscope, 图片索引: 8/10
2025-07-19 12:53:31,113 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:31,114 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:31,114 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:31,114 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:31,571 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图8\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第8张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:31,572 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:31,572 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:31,604 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073E5820>
2025-07-19 12:53:31,604 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000000073B4550> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:31,617 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073E54C0>
2025-07-19 12:53:31,618 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:31,618 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:31,618 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:31,619 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:31,619 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:32,213 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1389bb94-0460-946c-9483-f75e09805e41'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'583'), (b'req-arrive-time', b'1752900806265'), (b'resp-start-time', b'1752900806848'), (b'x-envoy-upstream-service-time', b'582'), (b'set-cookie', b'acw_tc=1389bb94-0460-946c-9483-f75e09805e41d8b54088feb4c4ac5b11b0d3eb1a7eae;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:26 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:32,214 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:32,214 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:32,215 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:32,215 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:32,215 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:32,215 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1389bb94-0460-946c-9483-f75e09805e41', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '583', 'req-arrive-time': '1752900806265', 'resp-start-time': '1752900806848', 'x-envoy-upstream-service-time': '582', 'set-cookie': 'acw_tc=1389bb94-0460-946c-9483-f75e09805e41d8b54088feb4c4ac5b11b0d3eb1a7eae;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:26 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:32,217 - openai._base_client - DEBUG - request_id: 1389bb94-0460-946c-9483-f75e09805e41
2025-07-19 12:53:32,217 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: hospital recovery medical care
2025-07-19 12:53:32,218 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:33,255 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=hospital+recovery+medical+care&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:33,256 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:33,256 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:33,257 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-19 12:53:33,257 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图8_20250719_125333.jpg
2025-07-19 12:53:33,258 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:34,041 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/8460414/pexels-photo-8460414.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 122755
2025-07-19 12:53:34,071 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图8_20250719_125333.jpg
2025-07-19 12:53:34,072 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图8_20250719_125333.jpg
2025-07-19 12:53:34,073 - controllers.article_controller - INFO - 第8张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图8_20250719_125333.jpg
2025-07-19 12:53:34,073 - controllers.article_controller - INFO - 生成第9张配图，使用模型: pexels
2025-07-19 12:53:34,073 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图9, 生图模型: pexels, AI模型: dashscope, 图片索引: 9/10
2025-07-19 12:53:34,074 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图9, AI模型: dashscope, 图片索引: 9/10
2025-07-19 12:53:34,074 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:34,075 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:34,075 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:34,076 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:34,543 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图9\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第9张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:34,544 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:34,544 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:34,560 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073E6600>
2025-07-19 12:53:34,560 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008B929D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:34,579 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000008A8F380>
2025-07-19 12:53:34,579 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:34,580 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:34,580 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:34,580 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:34,581 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:35,575 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'42983d09-71f6-9011-855f-c8a6d5a93e0d'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'979'), (b'req-arrive-time', b'1752900809228'), (b'resp-start-time', b'1752900810208'), (b'x-envoy-upstream-service-time', b'977'), (b'set-cookie', b'acw_tc=42983d09-71f6-9011-855f-c8a6d5a93e0d472e9f16133414975b703c5fac08aec6;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:30 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:35,576 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:35,576 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:35,577 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:35,578 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:35,578 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:35,579 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '42983d09-71f6-9011-855f-c8a6d5a93e0d', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '979', 'req-arrive-time': '1752900809228', 'resp-start-time': '1752900810208', 'x-envoy-upstream-service-time': '977', 'set-cookie': 'acw_tc=42983d09-71f6-9011-855f-c8a6d5a93e0d472e9f16133414975b703c5fac08aec6;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:30 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:35,579 - openai._base_client - DEBUG - request_id: 42983d09-71f6-9011-855f-c8a6d5a93e0d
2025-07-19 12:53:35,580 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: mother hospital recovery smile
2025-07-19 12:53:35,582 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:36,598 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=mother+hospital+recovery+smile&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:36,598 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:36,599 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:36,599 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-19 12:53:36,600 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图9_20250719_125336.jpg
2025-07-19 12:53:36,601 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:37,353 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/6303619/pexels-photo-6303619.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 126438
2025-07-19 12:53:37,431 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图9_20250719_125336.jpg
2025-07-19 12:53:37,432 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图9_20250719_125336.jpg
2025-07-19 12:53:37,432 - controllers.article_controller - INFO - 第9张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图9_20250719_125336.jpg
2025-07-19 12:53:37,433 - controllers.article_controller - INFO - 生成第10张配图，使用模型: pexels
2025-07-19 12:53:37,433 - services.image_service - INFO - 开始生成文章配图，标题: 河南煤气燃爆烧伤母亲出ICU - 配图10, 生图模型: pexels, AI模型: dashscope, 图片索引: 10/10
2025-07-19 12:53:37,433 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 河南煤气燃爆烧伤母亲出ICU - 配图10, AI模型: dashscope, 图片索引: 10/10
2025-07-19 12:53:37,433 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:37,434 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:37,434 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:53:37,435 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:37,969 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n河南煤气燃爆烧伤母亲出ICU - 配图10\n描述: 河南煤气燃爆事故致母亲重度烧伤，历经抢救终于脱离ICU。文章讲述事件经过，呼吁关注家庭安全与公共责任，展现医疗救助的温暖力量，引发社会对事故防范与家庭关怀的深思。\n文章内容预览: 以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责...\n\n图片信息：\n- 这是第10张图片，总共需要10张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 12:53:37,969 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 12:53:37,970 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 12:53:38,010 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073CDD30>
2025-07-19 12:53:38,010 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008B93ED0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 12:53:38,030 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000000073CE240>
2025-07-19 12:53:38,031 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 12:53:38,032 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 12:53:38,033 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 12:53:38,034 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 12:53:38,034 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 12:53:38,636 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'8e9582bc-0630-9845-93f9-0fc8298acd35'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'589'), (b'req-arrive-time', b'1752900812682'), (b'resp-start-time', b'1752900813272'), (b'x-envoy-upstream-service-time', b'586'), (b'set-cookie', b'acw_tc=8e9582bc-0630-9845-93f9-0fc8298acd355f9fdcff56de4ffed0cd46ed212b258e;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 04:53:33 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 12:53:38,637 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 12:53:38,637 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 12:53:38,638 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 12:53:38,638 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 12:53:38,638 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 12:53:38,638 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '8e9582bc-0630-9845-93f9-0fc8298acd35', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '589', 'req-arrive-time': '1752900812682', 'resp-start-time': '1752900813272', 'x-envoy-upstream-service-time': '586', 'set-cookie': 'acw_tc=8e9582bc-0630-9845-93f9-0fc8298acd355f9fdcff56de4ffed0cd46ed212b258e;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 04:53:33 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 12:53:38,639 - openai._base_client - DEBUG - request_id: 8e9582bc-0630-9845-93f9-0fc8298acd35
2025-07-19 12:53:38,639 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: family safety gas explosion
2025-07-19 12:53:38,640 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 12:53:39,546 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=family+safety+gas+explosion&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 12:53:39,547 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 12:53:39,547 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 12:53:39,548 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-19 12:53:39,548 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125339.jpg
2025-07-19 12:53:39,549 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 12:53:40,336 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/9841443/pexels-photo-9841443.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 136632
2025-07-19 12:53:40,406 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125339.jpg
2025-07-19 12:53:40,406 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125339.jpg
2025-07-19 12:53:40,407 - controllers.article_controller - INFO - 第10张配图处理完成，使用本地路径: cache\article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125339.jpg
2025-07-19 12:53:40,407 - controllers.article_controller - INFO - 在第13段后插入配图
2025-07-19 12:53:40,407 - controllers.article_controller - INFO - 在第11段后插入配图
2025-07-19 12:53:40,407 - controllers.article_controller - INFO - 在第10段后插入配图
2025-07-19 12:53:40,407 - controllers.article_controller - INFO - 在第9段后插入配图
2025-07-19 12:53:40,408 - controllers.article_controller - INFO - 在第8段后插入配图
2025-07-19 12:53:40,408 - controllers.article_controller - INFO - 在第6段后插入配图
2025-07-19 12:53:40,408 - controllers.article_controller - INFO - 在第5段后插入配图
2025-07-19 12:53:40,408 - controllers.article_controller - INFO - 在第4段后插入配图
2025-07-19 12:53:40,408 - controllers.article_controller - INFO - 在第3段后插入配图
2025-07-19 12:53:40,408 - controllers.article_controller - INFO - 在第1段后插入配图
2025-07-19 12:53:40,409 - controllers.article_controller - INFO - 配图处理完成，共插入10张图片
2025-07-19 12:53:40,411 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_河南煤气燃爆烧伤母亲出ICU_20250719_125340.html
2025-07-19 12:53:40,411 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-19 12:53:40,411 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-19 12:53:40,412 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 10037
2025-07-19 12:53:40,415 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-19 12:53:40,415 - controllers.article_controller - INFO - 内容清理完成，移除了 235 个字符，清理后长度: 10037
2025-07-19 12:53:40,417 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_河南煤气燃爆烧伤母亲出ICU_20250719_125340.html
2025-07-19 12:53:40,418 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=河南煤气燃爆烧伤母亲出ICU, 内容前100字=以下为根据您提供的HTML模板格式，生成的关于“河南煤气燃爆烧伤母亲出ICU”主题的微信公众号文章内容。文章风格为**温暖治愈+事实陈述+社会关怀**，旨在传递事件真相的同时唤起公众对家庭安全、公共责, 图片数=10
2025-07-19 12:53:40,418 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:40,418 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:53:40,422 - services.history_service - INFO - 添加生成历史记录: 河南煤气燃爆烧伤母亲出ICU
2025-07-19 12:53:40,423 - controllers.article_controller - INFO - 文章生成完成
2025-07-19 12:53:40,423 - controllers.article_controller - INFO - 生成结果预览: 标题=河南煤气燃爆烧伤母亲出ICU, 内容长度=10037, 配图数量=10
2025-07-19 12:53:40,423 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-19 12:53:40,429 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:53:40,429 - root - INFO - 获取生成历史请求
2025-07-19 12:53:40,430 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:53:40,435 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125311.jpg
2025-07-19 12:53:40,472 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图5_20250719_125323.jpg
2025-07-19 12:53:40,472 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图4_20250719_125320.jpg
2025-07-19 12:53:40,473 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_125317.jpg
2025-07-19 12:53:40,473 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_125314.jpg
2025-07-19 12:53:40,473 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125311.jpg
2025-07-19 12:53:40,473 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图5_20250719_125323.jpg
2025-07-19 12:53:40,474 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图4_20250719_125320.jpg
2025-07-19 12:53:40,474 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图3_20250719_125317.jpg
2025-07-19 12:53:40,474 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图2_20250719_125314.jpg
2025-07-19 12:53:40,474 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图6_20250719_125327.jpg
2025-07-19 12:53:40,475 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图5_20250719_125323.jpg HTTP/1.1" 200 -
2025-07-19 12:53:40,476 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图1_20250719_125311.jpg HTTP/1.1" 200 -
2025-07-19 12:53:40,476 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图4_20250719_125320.jpg HTTP/1.1" 200 -
2025-07-19 12:53:40,476 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图6_20250719_125327.jpg
2025-07-19 12:53:40,477 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图3_20250719_125317.jpg HTTP/1.1" 200 -
2025-07-19 12:53:40,477 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图2_20250719_125314.jpg HTTP/1.1" 200 -
2025-07-19 12:53:40,479 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图6_20250719_125327.jpg HTTP/1.1" 200 -
2025-07-19 12:53:40,490 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图7_20250719_125330.jpg
2025-07-19 12:53:40,490 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图7_20250719_125330.jpg
2025-07-19 12:53:40,492 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图8_20250719_125333.jpg
2025-07-19 12:53:40,493 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图9_20250719_125336.jpg
2025-07-19 12:53:40,494 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图8_20250719_125333.jpg
2025-07-19 12:53:40,494 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图7_20250719_125330.jpg HTTP/1.1" 200 -
2025-07-19 12:53:40,494 - root - INFO - 请求: GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125339.jpg
2025-07-19 12:53:40,494 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图9_20250719_125336.jpg
2025-07-19 12:53:40,495 - root - INFO - 访问缓存文件: article_pexels_河南煤气燃爆烧伤母亲出ICU - 配图1_20250719_125339.jpg
2025-07-19 12:53:40,496 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图8_20250719_125333.jpg HTTP/1.1" 200 -
2025-07-19 12:53:40,498 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图9_20250719_125336.jpg HTTP/1.1" 200 -
2025-07-19 12:53:40,498 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:40] "GET /cache/article_pexels_河南煤气燃爆烧伤母亲出ICU%20-%20配图1_20250719_125339.jpg HTTP/1.1" 200 -
2025-07-19 12:53:46,953 - root - INFO - 请求: POST /api/article-content
2025-07-19 12:53:46,953 - root - INFO - 获取文章内容请求
2025-07-19 12:53:46,954 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:46] "POST /api/article-content HTTP/1.1" 200 -
2025-07-19 12:53:59,614 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:53:59,614 - root - INFO - 获取生成历史请求
2025-07-19 12:53:59,615 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:53:59,615 - root - INFO - 获取发布历史请求
2025-07-19 12:53:59,616 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:53:59,616 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:53:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:54:14,149 - root - INFO - 请求: POST /api/save-draft
2025-07-19 12:54:14,149 - root - INFO - 保存草稿请求
2025-07-19 12:54:14,150 - controllers.article_controller - INFO - 【唯一请求ID】9f7cc77f-d5d5-4b23-88dd-35222c3efb37 - save_draft
2025-07-19 12:54:14,150 - controllers.article_controller - INFO - 开始保存草稿: 河南煤气燃爆烧伤母亲出ICU
2025-07-19 12:54:14,150 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:14,151 - controllers.article_controller - INFO - 获取微信access_token
2025-07-19 12:54:14,151 - services.wechat_service - INFO - 开始获取access_token，AppID: wx913534d3189f509f
2025-07-19 12:54:14,152 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-19 12:54:14,943 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "GET /cgi-bin/token?grant_type=client_credential&appid=wx913534d3189f509f&secret=b2113edc5d34472868e00d0ef911538f HTTP/1.1" 200 133
2025-07-19 12:54:14,944 - services.wechat_service - ERROR - 获取access_token失败，错误码: 40164, 错误信息: invalid ip 111.162.128.168 ipv6 ::ffff:111.162.128.168, not in whitelist rid: 687b24f1-43eb3e17-520aff25
2025-07-19 12:54:14,945 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:14] "POST /api/save-draft HTTP/1.1" 200 -
2025-07-19 12:54:20,456 - root - INFO - 请求: POST /api/test-wechat
2025-07-19 12:54:20,456 - root - INFO - 测试微信API连接
2025-07-19 12:54:20,457 - controllers.config_controller - INFO - 开始测试微信API连接
2025-07-19 12:54:20,457 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:20,457 - controllers.config_controller - INFO - 当前完整配置: {'wechat_appid': 'wx913534d3189f509f', 'wechat_appsecret': 'b2113edc5d34472868e00d0ef911538f', 'gemini_api_key': 'AIzaSyDBbZXB_JnMyTM9QrgOVKpQXgWnjWuvPCA', 'gemini_model': 'gemini-2.5-flash', 'deepseek_api_key': 'sk-613adfa937b5410194b9e70d74b49c94', 'deepseek_model': 'deepseek-chat', 'dashscope_api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'dashscope_model': 'qwen-plus', 'pexels_api_key': 'b549oSd16vnulqwF3kAokUjew9JotgM1tyC9Y1bbSavyHneEBkxBd2vr', 'coze_token': 'pat_2h2zwNvgQ8Bo5NqZw3d1iDC79eAfRI0CAxq3auVOGDSsBP27GklziopZ8NoVAlpr', 'image_model': 'gemini', 'author': 'AI笔记', 'content_source_url': '', 'created_at': '2025-07-14 17:30:07', 'updated_at': '2025-07-14 17:44:09', 'coze_workflow_id': '7526742102417915919', 'wechat_access_token': '94_b4gsr6vi6llUPcfBbqTd8ZpRY7IolmeOlGXdtGpMnnvxykCHjBMee5S9U4_zzXFOn-UdpdCHYDWsV8p-xY_C1i-BTNjaEhqCnuWxYFcmXN8FxNF0E5AueQZI-sgPJJeADAYSS', 'wechat_access_token_expires_in': 7200, 'wechat_access_token_expire_time': 1752493440, 'wechat_access_token_expire_time_str': '2025-07-14 19:44:00', 'wechat_access_token_update_time': '2025-07-14 17:44:00'}
2025-07-19 12:54:20,458 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:20,458 - controllers.config_controller - INFO - 微信配置: appid=wx913534d3..., appsecret=已设置
2025-07-19 12:54:20,458 - services.wechat_service - INFO - 开始获取access_token，AppID: wx913534d3189f509f
2025-07-19 12:54:20,459 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-19 12:54:20,621 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "GET /cgi-bin/token?grant_type=client_credential&appid=wx913534d3189f509f&secret=b2113edc5d34472868e00d0ef911538f HTTP/1.1" 200 133
2025-07-19 12:54:20,622 - services.wechat_service - ERROR - 获取access_token失败，错误码: 40164, 错误信息: invalid ip 111.162.128.168 ipv6 ::ffff:111.162.128.168, not in whitelist rid: 687b24f7-0fec8b82-6854dbde
2025-07-19 12:54:20,622 - controllers.config_controller - ERROR - 微信API连接测试失败，未能获取access_token
2025-07-19 12:54:20,623 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:20] "POST /api/test-wechat HTTP/1.1" 200 -
2025-07-19 12:54:29,629 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:54:29,631 - root - INFO - 获取生成历史请求
2025-07-19 12:54:29,632 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:54:29,633 - root - INFO - 获取发布历史请求
2025-07-19 12:54:29,636 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:54:29,638 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:54:33,281 - root - INFO - 请求: POST /api/test-wechat
2025-07-19 12:54:33,281 - root - INFO - 测试微信API连接
2025-07-19 12:54:33,281 - controllers.config_controller - INFO - 开始测试微信API连接
2025-07-19 12:54:33,281 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:33,282 - controllers.config_controller - INFO - 当前完整配置: {'wechat_appid': 'wx913534d3189f509f', 'wechat_appsecret': 'b2113edc5d34472868e00d0ef911538f', 'gemini_api_key': 'AIzaSyDBbZXB_JnMyTM9QrgOVKpQXgWnjWuvPCA', 'gemini_model': 'gemini-2.5-flash', 'deepseek_api_key': 'sk-613adfa937b5410194b9e70d74b49c94', 'deepseek_model': 'deepseek-chat', 'dashscope_api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'dashscope_model': 'qwen-plus', 'pexels_api_key': 'b549oSd16vnulqwF3kAokUjew9JotgM1tyC9Y1bbSavyHneEBkxBd2vr', 'coze_token': 'pat_2h2zwNvgQ8Bo5NqZw3d1iDC79eAfRI0CAxq3auVOGDSsBP27GklziopZ8NoVAlpr', 'image_model': 'gemini', 'author': 'AI笔记', 'content_source_url': '', 'created_at': '2025-07-14 17:30:07', 'updated_at': '2025-07-14 17:44:09', 'coze_workflow_id': '7526742102417915919', 'wechat_access_token': '94_b4gsr6vi6llUPcfBbqTd8ZpRY7IolmeOlGXdtGpMnnvxykCHjBMee5S9U4_zzXFOn-UdpdCHYDWsV8p-xY_C1i-BTNjaEhqCnuWxYFcmXN8FxNF0E5AueQZI-sgPJJeADAYSS', 'wechat_access_token_expires_in': 7200, 'wechat_access_token_expire_time': 1752493440, 'wechat_access_token_expire_time_str': '2025-07-14 19:44:00', 'wechat_access_token_update_time': '2025-07-14 17:44:00'}
2025-07-19 12:54:33,282 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:33,282 - controllers.config_controller - INFO - 微信配置: appid=wx913534d3..., appsecret=已设置
2025-07-19 12:54:33,282 - services.wechat_service - INFO - 开始获取access_token，AppID: wx913534d3189f509f
2025-07-19 12:54:33,283 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-19 12:54:33,457 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "GET /cgi-bin/token?grant_type=client_credential&appid=wx913534d3189f509f&secret=b2113edc5d34472868e00d0ef911538f HTTP/1.1" 200 133
2025-07-19 12:54:33,459 - services.wechat_service - ERROR - 获取access_token失败，错误码: 40164, 错误信息: invalid ip 111.162.128.168 ipv6 ::ffff:111.162.128.168, not in whitelist rid: 687b2504-58d60cb7-17e723d7
2025-07-19 12:54:33,459 - controllers.config_controller - ERROR - 微信API连接测试失败，未能获取access_token
2025-07-19 12:54:33,460 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:33] "POST /api/test-wechat HTTP/1.1" 200 -
2025-07-19 12:54:39,797 - root - INFO - 请求: POST /api/config
2025-07-19 12:54:39,798 - root - INFO - 处理配置请求: POST
2025-07-19 12:54:39,798 - controllers.config_controller - INFO - 开始保存配置
2025-07-19 12:54:39,798 - controllers.config_controller - INFO - 接收到的配置数据: {'wechat_appid': 'wx913534d3189f509f', 'wechat_appsecret': 'b2113edc5d34472868e00d0ef911538f', 'gemini_api_key': 'AIzaSyDBbZXB_JnMyTM9QrgOVKpQXgWnjWuvPCA', 'gemini_model': 'gemini-2.5-flash', 'deepseek_api_key': 'sk-613adfa937b5410194b9e70d74b49c94', 'deepseek_model': 'deepseek-chat', 'dashscope_api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'dashscope_model': 'qwen-plus', 'pexels_api_key': 'b549oSd16vnulqwF3kAokUjew9JotgM1tyC9Y1bbSavyHneEBkxBd2vr', 'coze_token': 'pat_2h2zwNvgQ8Bo5NqZw3d1iDC79eAfRI0CAxq3auVOGDSsBP27GklziopZ8NoVAlpr', 'coze_workflow_id': '7526742102417915919', 'author': 'AI笔记', 'content_source_url': ''}
2025-07-19 12:54:39,798 - controllers.config_controller - INFO - 开始验证配置数据: {'wechat_appid': 'wx913534d3189f509f', 'wechat_appsecret': 'b2113edc5d34472868e00d0ef911538f', 'gemini_api_key': 'AIzaSyDBbZXB_JnMyTM9QrgOVKpQXgWnjWuvPCA', 'gemini_model': 'gemini-2.5-flash', 'deepseek_api_key': 'sk-613adfa937b5410194b9e70d74b49c94', 'deepseek_model': 'deepseek-chat', 'dashscope_api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'dashscope_model': 'qwen-plus', 'pexels_api_key': 'b549oSd16vnulqwF3kAokUjew9JotgM1tyC9Y1bbSavyHneEBkxBd2vr', 'coze_token': 'pat_2h2zwNvgQ8Bo5NqZw3d1iDC79eAfRI0CAxq3auVOGDSsBP27GklziopZ8NoVAlpr', 'coze_workflow_id': '7526742102417915919', 'author': 'AI笔记', 'content_source_url': ''}
2025-07-19 12:54:39,799 - controllers.config_controller - INFO - 配置数据验证通过
2025-07-19 12:54:39,799 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:39,805 - services.config_service - INFO - 配置保存成功
2025-07-19 12:54:39,805 - controllers.config_controller - INFO - 配置保存结果: True
2025-07-19 12:54:39,806 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:39,806 - controllers.config_controller - INFO - 保存后读取的配置: {'wechat_appid': 'wx913534d3189f509f', 'wechat_appsecret': 'b2113edc5d34472868e00d0ef911538f', 'gemini_api_key': 'AIzaSyDBbZXB_JnMyTM9QrgOVKpQXgWnjWuvPCA', 'gemini_model': 'gemini-2.5-flash', 'deepseek_api_key': 'sk-613adfa937b5410194b9e70d74b49c94', 'deepseek_model': 'deepseek-chat', 'dashscope_api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'dashscope_model': 'qwen-plus', 'pexels_api_key': 'b549oSd16vnulqwF3kAokUjew9JotgM1tyC9Y1bbSavyHneEBkxBd2vr', 'coze_token': 'pat_2h2zwNvgQ8Bo5NqZw3d1iDC79eAfRI0CAxq3auVOGDSsBP27GklziopZ8NoVAlpr', 'image_model': 'gemini', 'author': 'AI笔记', 'content_source_url': '', 'created_at': '2025-07-14 17:30:07', 'updated_at': '2025-07-19 12:54:39', 'coze_workflow_id': '7526742102417915919', 'wechat_access_token': '94_b4gsr6vi6llUPcfBbqTd8ZpRY7IolmeOlGXdtGpMnnvxykCHjBMee5S9U4_zzXFOn-UdpdCHYDWsV8p-xY_C1i-BTNjaEhqCnuWxYFcmXN8FxNF0E5AueQZI-sgPJJeADAYSS', 'wechat_access_token_expires_in': 7200, 'wechat_access_token_expire_time': 1752493440, 'wechat_access_token_expire_time_str': '2025-07-14 19:44:00', 'wechat_access_token_update_time': '2025-07-14 17:44:00'}
2025-07-19 12:54:39,806 - controllers.config_controller - INFO - 配置保存成功
2025-07-19 12:54:39,806 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:39] "POST /api/config HTTP/1.1" 200 -
2025-07-19 12:54:39,810 - root - INFO - 请求: GET /api/config
2025-07-19 12:54:39,811 - root - INFO - 处理配置请求: GET
2025-07-19 12:54:39,811 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-19 12:54:39,811 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:39,811 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-19 12:54:39,812 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:39] "GET /api/config HTTP/1.1" 200 -
2025-07-19 12:54:42,459 - root - INFO - 请求: POST /api/test-wechat
2025-07-19 12:54:42,459 - root - INFO - 测试微信API连接
2025-07-19 12:54:42,459 - controllers.config_controller - INFO - 开始测试微信API连接
2025-07-19 12:54:42,460 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:42,460 - controllers.config_controller - INFO - 当前完整配置: {'wechat_appid': 'wx913534d3189f509f', 'wechat_appsecret': 'b2113edc5d34472868e00d0ef911538f', 'gemini_api_key': 'AIzaSyDBbZXB_JnMyTM9QrgOVKpQXgWnjWuvPCA', 'gemini_model': 'gemini-2.5-flash', 'deepseek_api_key': 'sk-613adfa937b5410194b9e70d74b49c94', 'deepseek_model': 'deepseek-chat', 'dashscope_api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'dashscope_model': 'qwen-plus', 'pexels_api_key': 'b549oSd16vnulqwF3kAokUjew9JotgM1tyC9Y1bbSavyHneEBkxBd2vr', 'coze_token': 'pat_2h2zwNvgQ8Bo5NqZw3d1iDC79eAfRI0CAxq3auVOGDSsBP27GklziopZ8NoVAlpr', 'image_model': 'gemini', 'author': 'AI笔记', 'content_source_url': '', 'created_at': '2025-07-14 17:30:07', 'updated_at': '2025-07-19 12:54:39', 'coze_workflow_id': '7526742102417915919', 'wechat_access_token': '94_b4gsr6vi6llUPcfBbqTd8ZpRY7IolmeOlGXdtGpMnnvxykCHjBMee5S9U4_zzXFOn-UdpdCHYDWsV8p-xY_C1i-BTNjaEhqCnuWxYFcmXN8FxNF0E5AueQZI-sgPJJeADAYSS', 'wechat_access_token_expires_in': 7200, 'wechat_access_token_expire_time': 1752493440, 'wechat_access_token_expire_time_str': '2025-07-14 19:44:00', 'wechat_access_token_update_time': '2025-07-14 17:44:00'}
2025-07-19 12:54:42,460 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:54:42,461 - controllers.config_controller - INFO - 微信配置: appid=wx913534d3..., appsecret=已设置
2025-07-19 12:54:42,461 - services.wechat_service - INFO - 开始获取access_token，AppID: wx913534d3189f509f
2025-07-19 12:54:42,462 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-19 12:54:42,615 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "GET /cgi-bin/token?grant_type=client_credential&appid=wx913534d3189f509f&secret=b2113edc5d34472868e00d0ef911538f HTTP/1.1" 200 133
2025-07-19 12:54:42,616 - services.wechat_service - ERROR - 获取access_token失败，错误码: 40164, 错误信息: invalid ip 111.162.128.168 ipv6 ::ffff:111.162.128.168, not in whitelist rid: 687b250d-130212bf-2ed5c922
2025-07-19 12:54:42,617 - controllers.config_controller - ERROR - 微信API连接测试失败，未能获取access_token
2025-07-19 12:54:42,618 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:42] "POST /api/test-wechat HTTP/1.1" 200 -
2025-07-19 12:54:59,615 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:54:59,615 - root - INFO - 获取生成历史请求
2025-07-19 12:54:59,615 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:54:59,616 - root - INFO - 获取发布历史请求
2025-07-19 12:54:59,616 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:54:59,617 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:54:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:55:23,291 - root - INFO - 请求: POST /api/test-wechat
2025-07-19 12:55:23,291 - root - INFO - 测试微信API连接
2025-07-19 12:55:23,292 - controllers.config_controller - INFO - 开始测试微信API连接
2025-07-19 12:55:23,292 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:55:23,292 - controllers.config_controller - INFO - 当前完整配置: {'wechat_appid': 'wx913534d3189f509f', 'wechat_appsecret': 'b2113edc5d34472868e00d0ef911538f', 'gemini_api_key': 'AIzaSyDBbZXB_JnMyTM9QrgOVKpQXgWnjWuvPCA', 'gemini_model': 'gemini-2.5-flash', 'deepseek_api_key': 'sk-613adfa937b5410194b9e70d74b49c94', 'deepseek_model': 'deepseek-chat', 'dashscope_api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'dashscope_model': 'qwen-plus', 'pexels_api_key': 'b549oSd16vnulqwF3kAokUjew9JotgM1tyC9Y1bbSavyHneEBkxBd2vr', 'coze_token': 'pat_2h2zwNvgQ8Bo5NqZw3d1iDC79eAfRI0CAxq3auVOGDSsBP27GklziopZ8NoVAlpr', 'image_model': 'gemini', 'author': 'AI笔记', 'content_source_url': '', 'created_at': '2025-07-14 17:30:07', 'updated_at': '2025-07-19 12:54:39', 'coze_workflow_id': '7526742102417915919', 'wechat_access_token': '94_b4gsr6vi6llUPcfBbqTd8ZpRY7IolmeOlGXdtGpMnnvxykCHjBMee5S9U4_zzXFOn-UdpdCHYDWsV8p-xY_C1i-BTNjaEhqCnuWxYFcmXN8FxNF0E5AueQZI-sgPJJeADAYSS', 'wechat_access_token_expires_in': 7200, 'wechat_access_token_expire_time': 1752493440, 'wechat_access_token_expire_time_str': '2025-07-14 19:44:00', 'wechat_access_token_update_time': '2025-07-14 17:44:00'}
2025-07-19 12:55:23,293 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 12:55:23,293 - controllers.config_controller - INFO - 微信配置: appid=wx913534d3..., appsecret=已设置
2025-07-19 12:55:23,293 - services.wechat_service - INFO - 开始获取access_token，AppID: wx913534d3189f509f
2025-07-19 12:55:23,294 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-19 12:55:23,447 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "GET /cgi-bin/token?grant_type=client_credential&appid=wx913534d3189f509f&secret=b2113edc5d34472868e00d0ef911538f HTTP/1.1" 200 133
2025-07-19 12:55:23,447 - services.wechat_service - ERROR - 获取access_token失败，错误码: 40164, 错误信息: invalid ip 111.162.128.168 ipv6 ::ffff:111.162.128.168, not in whitelist rid: 687b2536-0e20de35-3b3080ed
2025-07-19 12:55:23,448 - controllers.config_controller - ERROR - 微信API连接测试失败，未能获取access_token
2025-07-19 12:55:23,448 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:55:23] "POST /api/test-wechat HTTP/1.1" 200 -
2025-07-19 12:55:29,619 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:55:29,619 - root - INFO - 获取生成历史请求
2025-07-19 12:55:29,619 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:55:29,620 - root - INFO - 获取发布历史请求
2025-07-19 12:55:29,620 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:55:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:55:29,621 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:55:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:55:59,623 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:55:59,624 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:55:59,624 - root - INFO - 获取生成历史请求
2025-07-19 12:55:59,624 - root - INFO - 获取发布历史请求
2025-07-19 12:55:59,626 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:55:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:55:59,626 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:55:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:56:29,638 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:56:29,640 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:56:29,641 - root - INFO - 获取生成历史请求
2025-07-19 12:56:29,642 - root - INFO - 获取发布历史请求
2025-07-19 12:56:29,646 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:56:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:56:29,648 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:56:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:56:59,641 - root - INFO - 应用目录创建完成
2025-07-19 12:56:59,641 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:56:59,642 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-19 12:56:59,642 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-19 12:56:59,642 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-19 12:56:59,642 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-19 12:56:59,642 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 12:56:59,642 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-19 12:56:59,642 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-19 12:56:59,642 - services.image_service - INFO - 图像服务初始化完成
2025-07-19 12:56:59,643 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-19 12:56:59,643 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-19 12:56:59,643 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-19 12:56:59,643 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-19 12:57:00,515 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-19 12:57:00,516 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-19 12:57:00,624 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:57:00,625 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:57:00,675 - root - INFO - 获取生成历史请求
2025-07-19 12:57:00,676 - root - INFO - 获取发布历史请求
2025-07-19 12:57:00,682 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:57:00] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:57:00,684 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:57:00] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:57:30,186 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:57:30,186 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:57:30,186 - root - INFO - 获取生成历史请求
2025-07-19 12:57:30,186 - root - INFO - 获取发布历史请求
2025-07-19 12:57:30,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:57:30] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:57:30,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:57:30] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:58:00,176 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:58:00,176 - root - INFO - 获取生成历史请求
2025-07-19 12:58:00,176 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:58:00,177 - root - INFO - 获取发布历史请求
2025-07-19 12:58:00,177 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:58:00] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:58:00,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:58:00] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:58:49,177 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:58:49,177 - root - INFO - 获取生成历史请求
2025-07-19 12:58:49,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:58:49,178 - root - INFO - 获取发布历史请求
2025-07-19 12:58:49,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:58:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:58:49,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:58:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:59:11,641 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:59:11,642 - root - INFO - 获取生成历史请求
2025-07-19 12:59:11,642 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:59:11,643 - root - INFO - 获取发布历史请求
2025-07-19 12:59:11,644 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:59:11] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:59:11,644 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:59:11] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:59:29,623 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:59:29,623 - root - INFO - 获取生成历史请求
2025-07-19 12:59:29,624 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:59:29,625 - root - INFO - 获取发布历史请求
2025-07-19 12:59:29,626 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:59:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:59:29,627 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:59:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 12:59:59,630 - root - INFO - 请求: GET /api/generation-history
2025-07-19 12:59:59,630 - root - INFO - 获取生成历史请求
2025-07-19 12:59:59,631 - root - INFO - 请求: GET /api/publish-history
2025-07-19 12:59:59,631 - root - INFO - 获取发布历史请求
2025-07-19 12:59:59,632 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:59:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 12:59:59,632 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 12:59:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:00:29,630 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:00:29,631 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:00:29,632 - root - INFO - 获取生成历史请求
2025-07-19 13:00:29,632 - root - INFO - 获取发布历史请求
2025-07-19 13:00:29,635 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:00:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:00:29,636 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:00:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:00:59,636 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:00:59,636 - root - INFO - 获取生成历史请求
2025-07-19 13:00:59,638 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:00:59,638 - root - INFO - 获取发布历史请求
2025-07-19 13:00:59,640 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:00:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:00:59,642 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:00:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:01:29,626 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:01:29,627 - root - INFO - 获取生成历史请求
2025-07-19 13:01:29,628 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:01:29,629 - root - INFO - 获取发布历史请求
2025-07-19 13:01:29,631 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:01:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:01:29,632 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:01:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:01:59,623 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:01:59,624 - root - INFO - 获取生成历史请求
2025-07-19 13:01:59,626 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:01:59,626 - root - INFO - 获取发布历史请求
2025-07-19 13:01:59,628 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:01:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:01:59,630 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:01:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:02:29,623 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:02:29,623 - root - INFO - 获取生成历史请求
2025-07-19 13:02:29,624 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:02:29,624 - root - INFO - 获取发布历史请求
2025-07-19 13:02:29,624 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:02:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:02:29,625 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:02:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:02:59,623 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:02:59,624 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:02:59,625 - root - INFO - 获取生成历史请求
2025-07-19 13:02:59,625 - root - INFO - 获取发布历史请求
2025-07-19 13:02:59,628 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:02:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:02:59,629 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:02:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:03:29,620 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:03:29,620 - root - INFO - 获取生成历史请求
2025-07-19 13:03:29,621 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:03:29,621 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:03:29] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:03:29,621 - root - INFO - 获取发布历史请求
2025-07-19 13:03:29,622 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:03:29] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:03:59,634 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:03:59,635 - root - INFO - 获取生成历史请求
2025-07-19 13:03:59,636 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:03:59,638 - root - INFO - 获取发布历史请求
2025-07-19 13:03:59,642 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:03:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:03:59,644 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:03:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:04:30,187 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:04:30,188 - root - INFO - 获取生成历史请求
2025-07-19 13:04:30,188 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:04:30,189 - root - INFO - 获取发布历史请求
2025-07-19 13:04:30,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:04:30] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:04:30,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:04:30] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:05:00,175 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:05:00,176 - root - INFO - 获取生成历史请求
2025-07-19 13:05:00,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:05:00,177 - root - INFO - 获取发布历史请求
2025-07-19 13:05:00,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:05:00] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:05:00,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:05:00] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:05:49,184 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:05:49,185 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:05:49,185 - root - INFO - 获取生成历史请求
2025-07-19 13:05:49,185 - root - INFO - 获取发布历史请求
2025-07-19 13:05:49,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:05:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:05:49,188 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:05:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:06:49,193 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:06:49,194 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:06:49,194 - root - INFO - 获取生成历史请求
2025-07-19 13:06:49,195 - root - INFO - 获取发布历史请求
2025-07-19 13:06:49,197 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:06:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:06:49,199 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:06:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:07:49,181 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:07:49,182 - root - INFO - 获取生成历史请求
2025-07-19 13:07:49,182 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:07:49,183 - root - INFO - 获取发布历史请求
2025-07-19 13:07:49,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:07:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:07:49,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:07:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:08:49,178 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:08:49,178 - root - INFO - 获取生成历史请求
2025-07-19 13:08:49,178 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:08:49,179 - root - INFO - 获取发布历史请求
2025-07-19 13:08:49,180 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:08:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:08:49,180 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:08:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:09:49,189 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:09:49,190 - root - INFO - 获取生成历史请求
2025-07-19 13:09:49,191 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:09:49,192 - root - INFO - 获取发布历史请求
2025-07-19 13:09:49,194 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:09:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:09:49,195 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:09:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:10:49,187 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:10:49,188 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:10:49,188 - root - INFO - 获取生成历史请求
2025-07-19 13:10:49,189 - root - INFO - 获取发布历史请求
2025-07-19 13:10:49,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:10:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:10:49,192 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:10:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:11:49,194 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:11:49,196 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:11:49,197 - root - INFO - 获取生成历史请求
2025-07-19 13:11:49,198 - root - INFO - 获取发布历史请求
2025-07-19 13:11:49,202 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:11:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:11:49,205 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:11:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:12:49,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:12:49,182 - root - INFO - 获取生成历史请求
2025-07-19 13:12:49,184 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:12:49,184 - root - INFO - 获取发布历史请求
2025-07-19 13:12:49,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:12:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:12:49,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:12:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:13:49,180 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:13:49,181 - root - INFO - 获取生成历史请求
2025-07-19 13:13:49,182 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:13:49,182 - root - INFO - 获取发布历史请求
2025-07-19 13:13:49,183 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:13:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:13:49,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:13:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:14:49,190 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:14:49,192 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:14:49,192 - root - INFO - 获取生成历史请求
2025-07-19 13:14:49,193 - root - INFO - 获取发布历史请求
2025-07-19 13:14:49,195 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:14:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:14:49,196 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:14:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:15:49,183 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:15:49,184 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:15:49,184 - root - INFO - 获取生成历史请求
2025-07-19 13:15:49,184 - root - INFO - 获取发布历史请求
2025-07-19 13:15:49,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:15:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:15:49,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:15:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:16:49,174 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:16:49,175 - root - INFO - 获取生成历史请求
2025-07-19 13:16:49,175 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:16:49,175 - root - INFO - 获取发布历史请求
2025-07-19 13:16:49,176 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:16:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:16:49,176 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:16:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:17:49,184 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:17:49,185 - root - INFO - 获取生成历史请求
2025-07-19 13:17:49,186 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:17:49,188 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:17:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:17:49,188 - root - INFO - 获取发布历史请求
2025-07-19 13:17:49,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:17:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:18:49,193 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:18:49,193 - root - INFO - 获取生成历史请求
2025-07-19 13:18:49,196 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:18:49,196 - root - INFO - 获取发布历史请求
2025-07-19 13:18:49,199 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:18:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:18:49,200 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:18:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:19:49,199 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:19:49,201 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:19:49,202 - root - INFO - 获取生成历史请求
2025-07-19 13:19:49,202 - root - INFO - 获取发布历史请求
2025-07-19 13:19:49,207 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:19:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:19:49,208 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:19:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:20:49,184 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:20:49,184 - root - INFO - 获取生成历史请求
2025-07-19 13:20:49,185 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:20:49,185 - root - INFO - 获取发布历史请求
2025-07-19 13:20:49,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:20:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:20:49,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:20:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:21:49,181 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:21:49,182 - root - INFO - 获取生成历史请求
2025-07-19 13:21:49,183 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:21:49,184 - root - INFO - 获取发布历史请求
2025-07-19 13:21:49,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:21:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:21:49,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:21:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:22:49,187 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:22:49,188 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:22:49,188 - root - INFO - 获取生成历史请求
2025-07-19 13:22:49,189 - root - INFO - 获取发布历史请求
2025-07-19 13:22:49,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:22:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:22:49,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:22:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:23:49,184 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:23:49,187 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:23:49,188 - root - INFO - 获取生成历史请求
2025-07-19 13:23:49,189 - root - INFO - 获取发布历史请求
2025-07-19 13:23:49,193 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:23:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:23:49,195 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:23:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:24:49,183 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:24:49,183 - root - INFO - 获取生成历史请求
2025-07-19 13:24:49,183 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:24:49,183 - root - INFO - 获取发布历史请求
2025-07-19 13:24:49,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:24:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:24:49,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:24:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:25:49,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:25:49,183 - root - INFO - 获取生成历史请求
2025-07-19 13:25:49,184 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:25:49,185 - root - INFO - 获取发布历史请求
2025-07-19 13:25:49,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:25:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:25:49,188 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:25:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:26:49,193 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:26:49,194 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:26:49,195 - root - INFO - 获取生成历史请求
2025-07-19 13:26:49,195 - root - INFO - 获取发布历史请求
2025-07-19 13:26:49,198 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:26:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:26:49,199 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:26:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:27:49,195 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:27:49,196 - root - INFO - 获取生成历史请求
2025-07-19 13:27:49,197 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:27:49,199 - root - INFO - 获取发布历史请求
2025-07-19 13:27:49,202 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:27:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:27:49,203 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:27:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:28:49,187 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:28:49,187 - root - INFO - 获取生成历史请求
2025-07-19 13:28:49,189 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:28:49,190 - root - INFO - 获取发布历史请求
2025-07-19 13:28:49,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:28:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:28:49,193 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:28:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:29:49,195 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:29:49,197 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:29:49,198 - root - INFO - 获取生成历史请求
2025-07-19 13:29:49,198 - root - INFO - 获取发布历史请求
2025-07-19 13:29:49,203 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:29:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:29:49,205 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:29:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:30:49,185 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:30:49,187 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:30:49,188 - root - INFO - 获取生成历史请求
2025-07-19 13:30:49,189 - root - INFO - 获取发布历史请求
2025-07-19 13:30:49,193 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:30:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:30:49,195 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:30:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:31:49,179 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:31:49,180 - root - INFO - 获取生成历史请求
2025-07-19 13:31:49,181 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:31:49,182 - root - INFO - 获取发布历史请求
2025-07-19 13:31:49,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:31:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:31:49,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:31:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:32:49,196 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:32:49,197 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:32:49,197 - root - INFO - 获取生成历史请求
2025-07-19 13:32:49,198 - root - INFO - 获取发布历史请求
2025-07-19 13:32:49,200 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:32:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:32:49,202 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:32:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:33:49,197 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:33:49,199 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:33:49,200 - root - INFO - 获取生成历史请求
2025-07-19 13:33:49,200 - root - INFO - 获取发布历史请求
2025-07-19 13:33:49,204 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:33:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:33:49,206 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:33:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:34:49,187 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:34:49,187 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:34:49,188 - root - INFO - 获取生成历史请求
2025-07-19 13:34:49,188 - root - INFO - 获取发布历史请求
2025-07-19 13:34:49,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:34:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:34:49,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:34:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:35:49,178 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:35:49,179 - root - INFO - 获取生成历史请求
2025-07-19 13:35:49,180 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:35:49,181 - root - INFO - 获取发布历史请求
2025-07-19 13:35:49,183 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:35:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:35:49,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:35:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:36:49,190 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:36:49,192 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:36:49,193 - root - INFO - 获取生成历史请求
2025-07-19 13:36:49,194 - root - INFO - 获取发布历史请求
2025-07-19 13:36:49,198 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:36:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:36:49,200 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:36:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:37:49,196 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:37:49,197 - root - INFO - 获取生成历史请求
2025-07-19 13:37:49,200 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:37:49,201 - root - INFO - 获取发布历史请求
2025-07-19 13:37:49,204 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:37:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:37:49,207 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:37:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:38:49,185 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:38:49,187 - root - INFO - 获取生成历史请求
2025-07-19 13:38:49,189 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:38:49,190 - root - INFO - 获取发布历史请求
2025-07-19 13:38:49,194 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:38:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:38:49,196 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:38:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:39:49,190 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:39:49,191 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:39:49,192 - root - INFO - 获取生成历史请求
2025-07-19 13:39:49,193 - root - INFO - 获取发布历史请求
2025-07-19 13:39:49,197 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:39:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:39:49,199 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:39:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:40:49,183 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:40:49,183 - root - INFO - 获取生成历史请求
2025-07-19 13:40:49,184 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:40:49,184 - root - INFO - 获取发布历史请求
2025-07-19 13:40:49,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:40:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:40:49,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:40:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:41:49,186 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:41:49,187 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:41:49,188 - root - INFO - 获取生成历史请求
2025-07-19 13:41:49,189 - root - INFO - 获取发布历史请求
2025-07-19 13:41:49,192 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:41:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:41:49,194 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:41:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:42:49,191 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:42:49,192 - root - INFO - 获取生成历史请求
2025-07-19 13:42:49,193 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:42:49,195 - root - INFO - 获取发布历史请求
2025-07-19 13:42:49,197 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:42:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:42:49,199 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:42:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:43:49,192 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:43:49,193 - root - INFO - 获取生成历史请求
2025-07-19 13:43:49,193 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:43:49,194 - root - INFO - 获取发布历史请求
2025-07-19 13:43:49,195 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:43:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:43:49,196 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:43:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:44:49,188 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:44:49,188 - root - INFO - 获取生成历史请求
2025-07-19 13:44:49,190 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:44:49,191 - root - INFO - 获取发布历史请求
2025-07-19 13:44:49,193 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:44:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:44:49,195 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:44:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:45:49,183 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:45:49,184 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:45:49,184 - root - INFO - 获取生成历史请求
2025-07-19 13:45:49,185 - root - INFO - 获取发布历史请求
2025-07-19 13:45:49,188 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:45:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:45:49,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:45:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:46:49,177 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:46:49,177 - root - INFO - 获取生成历史请求
2025-07-19 13:46:49,178 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:46:49,178 - root - INFO - 获取发布历史请求
2025-07-19 13:46:49,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:46:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:46:49,180 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:46:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:47:49,198 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:47:49,200 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:47:49,201 - root - INFO - 获取生成历史请求
2025-07-19 13:47:49,202 - root - INFO - 获取发布历史请求
2025-07-19 13:47:49,206 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:47:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:47:49,208 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:47:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:48:49,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:48:49,183 - root - INFO - 获取生成历史请求
2025-07-19 13:48:49,183 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:48:49,184 - root - INFO - 获取发布历史请求
2025-07-19 13:48:49,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:48:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:48:49,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:48:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:49:49,187 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:49:49,187 - root - INFO - 获取生成历史请求
2025-07-19 13:49:49,188 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:49:49,188 - root - INFO - 获取发布历史请求
2025-07-19 13:49:49,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:49:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:49:49,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:49:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:50:49,186 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:50:49,188 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:50:49,189 - root - INFO - 获取生成历史请求
2025-07-19 13:50:49,189 - root - INFO - 获取发布历史请求
2025-07-19 13:50:49,194 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:50:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:50:49,196 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:50:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:51:49,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:51:49,183 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:51:49,184 - root - INFO - 获取生成历史请求
2025-07-19 13:51:49,185 - root - INFO - 获取发布历史请求
2025-07-19 13:51:49,188 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:51:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:51:49,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:51:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:52:49,185 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:52:49,185 - root - INFO - 获取生成历史请求
2025-07-19 13:52:49,186 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:52:49,187 - root - INFO - 获取发布历史请求
2025-07-19 13:52:49,188 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:52:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:52:49,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:52:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:53:49,186 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:53:49,187 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:53:49,187 - root - INFO - 获取生成历史请求
2025-07-19 13:53:49,188 - root - INFO - 获取发布历史请求
2025-07-19 13:53:49,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:53:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:53:49,192 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:53:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:54:49,200 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:54:49,202 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:54:49,203 - root - INFO - 获取生成历史请求
2025-07-19 13:54:49,203 - root - INFO - 获取发布历史请求
2025-07-19 13:54:49,207 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:54:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:54:49,208 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:54:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:55:49,191 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:55:49,192 - root - INFO - 获取生成历史请求
2025-07-19 13:55:49,194 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:55:49,195 - root - INFO - 获取发布历史请求
2025-07-19 13:55:49,198 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:55:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:55:49,200 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:55:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:56:49,197 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:56:49,198 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:56:49,199 - root - INFO - 获取生成历史请求
2025-07-19 13:56:49,200 - root - INFO - 获取发布历史请求
2025-07-19 13:56:49,204 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:56:49] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:56:49,206 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:56:49] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 13:56:59,627 - root - INFO - 请求: GET /api/generation-history
2025-07-19 13:56:59,628 - root - INFO - 获取生成历史请求
2025-07-19 13:56:59,628 - root - INFO - 请求: GET /api/publish-history
2025-07-19 13:56:59,628 - root - INFO - 获取发布历史请求
2025-07-19 13:56:59,629 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:56:59] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 13:56:59,629 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 13:56:59] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:02:47,622 - apscheduler.scheduler - DEBUG - No jobs; waiting until a job is added
2025-07-19 17:02:47,634 - root - INFO - 应用目录创建完成
2025-07-19 17:02:47,683 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:02:47,683 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-19 17:02:47,683 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-19 17:02:47,683 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-19 17:02:47,683 - controllers.config_controller - INFO - 配置控制器初始化完成
2025-07-19 17:02:47,683 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:02:47,684 - services.gemini_service - INFO - Gemini服务初始化完成
2025-07-19 17:02:47,684 - services.deepseek_service - INFO - DeepSeek服务初始化完成
2025-07-19 17:02:47,684 - services.image_service - INFO - 图像服务初始化完成
2025-07-19 17:02:47,684 - services.wechat_service - INFO - 微信服务初始化完成
2025-07-19 17:02:47,684 - services.draft_service - INFO - 草稿服务初始化完成
2025-07-19 17:02:47,685 - services.history_service - INFO - 历史记录服务初始化完成
2025-07-19 17:02:47,685 - controllers.article_controller - INFO - 文章控制器初始化完成
2025-07-19 17:02:49,418 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.124.16:5000
2025-07-19 17:02:49,419 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-19 17:03:06,423 - root - INFO - 请求: GET /
2025-07-19 17:03:06,423 - root - INFO - 访问主页面
2025-07-19 17:03:06,536 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:06] "GET / HTTP/1.1" 200 -
2025-07-19 17:03:06,591 - root - INFO - 请求: GET /static/css/layout.css
2025-07-19 17:03:06,601 - root - INFO - 请求: GET /static/css/components.css
2025-07-19 17:03:06,602 - root - INFO - 请求: GET /static/js/app.js
2025-07-19 17:03:06,790 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:06] "[36mGET /static/js/app.js HTTP/1.1[0m" 304 -
2025-07-19 17:03:06,796 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:06] "[36mGET /static/css/components.css HTTP/1.1[0m" 304 -
2025-07-19 17:03:06,801 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:06] "[36mGET /static/css/layout.css HTTP/1.1[0m" 304 -
2025-07-19 17:03:06,893 - root - INFO - 请求: GET /api/get_ip
2025-07-19 17:03:06,893 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:06] "GET /api/get_ip HTTP/1.1" 200 -
2025-07-19 17:03:06,912 - root - INFO - 请求: GET /api/style-templates
2025-07-19 17:03:06,947 - root - INFO - 请求: GET /api/config
2025-07-19 17:03:06,948 - root - INFO - 处理配置请求: GET
2025-07-19 17:03:06,948 - controllers.config_controller - INFO - 开始获取配置信息
2025-07-19 17:03:06,975 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:03:06,975 - controllers.config_controller - INFO - 配置信息获取成功
2025-07-19 17:03:06,976 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:06] "GET /api/config HTTP/1.1" 200 -
2025-07-19 17:03:07,107 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:07] "GET /api/style-templates HTTP/1.1" 200 -
2025-07-19 17:03:07,137 - root - INFO - 请求: GET /api/gemini-models
2025-07-19 17:03:07,137 - root - INFO - 获取Gemini可用模型列表
2025-07-19 17:03:07,138 - controllers.config_controller - INFO - 开始获取Gemini可用模型列表
2025-07-19 17:03:07,138 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:03:07,138 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:03:07,139 - services.gemini_service - INFO - Gemini API密钥已更新
2025-07-19 17:03:11,891 - services.gemini_service - INFO - Gemini客户端创建成功
2025-07-19 17:03:11,891 - services.gemini_service - INFO - 开始获取可用模型列表
2025-07-19 17:03:11,909 - httpcore.connection - DEBUG - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
2025-07-19 17:03:36,966 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:03:36,967 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:03:36,968 - root - INFO - 获取发布历史请求
2025-07-19 17:03:36,969 - root - INFO - 获取生成历史请求
2025-07-19 17:03:36,972 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:36] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:03:36,976 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:36] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:03:42,737 - root - INFO - 请求: POST /api/test-wechat
2025-07-19 17:03:42,737 - root - INFO - 测试微信API连接
2025-07-19 17:03:42,737 - controllers.config_controller - INFO - 开始测试微信API连接
2025-07-19 17:03:42,737 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:03:42,737 - controllers.config_controller - INFO - 当前完整配置: {'wechat_appid': 'wx913534d3189f509f', 'wechat_appsecret': 'b2113edc5d34472868e00d0ef911538f', 'gemini_api_key': 'AIzaSyDBbZXB_JnMyTM9QrgOVKpQXgWnjWuvPCA', 'gemini_model': 'gemini-2.5-flash', 'deepseek_api_key': 'sk-613adfa937b5410194b9e70d74b49c94', 'deepseek_model': 'deepseek-chat', 'dashscope_api_key': 'sk-37ab82083e9b46439e65688984dd72f3', 'dashscope_model': 'qwen-plus', 'pexels_api_key': 'b549oSd16vnulqwF3kAokUjew9JotgM1tyC9Y1bbSavyHneEBkxBd2vr', 'coze_token': 'pat_2h2zwNvgQ8Bo5NqZw3d1iDC79eAfRI0CAxq3auVOGDSsBP27GklziopZ8NoVAlpr', 'image_model': 'gemini', 'author': 'AI笔记', 'content_source_url': '', 'created_at': '2025-07-14 17:30:07', 'updated_at': '2025-07-19 12:54:39', 'coze_workflow_id': '7526742102417915919', 'wechat_access_token': '94_b4gsr6vi6llUPcfBbqTd8ZpRY7IolmeOlGXdtGpMnnvxykCHjBMee5S9U4_zzXFOn-UdpdCHYDWsV8p-xY_C1i-BTNjaEhqCnuWxYFcmXN8FxNF0E5AueQZI-sgPJJeADAYSS', 'wechat_access_token_expires_in': 7200, 'wechat_access_token_expire_time': 1752493440, 'wechat_access_token_expire_time_str': '2025-07-14 19:44:00', 'wechat_access_token_update_time': '2025-07-14 17:44:00'}
2025-07-19 17:03:42,737 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:03:42,737 - controllers.config_controller - INFO - 微信配置: appid=wx913534d3..., appsecret=已设置
2025-07-19 17:03:42,737 - services.wechat_service - INFO - 开始获取access_token，AppID: wx913534d3189f509f
2025-07-19 17:03:43,484 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.weixin.qq.com:443
2025-07-19 17:03:44,963 - urllib3.connectionpool - DEBUG - https://api.weixin.qq.com:443 "GET /cgi-bin/token?grant_type=client_credential&appid=wx913534d3189f509f&secret=b2113edc5d34472868e00d0ef911538f HTTP/1.1" 200 173
2025-07-19 17:03:44,964 - services.wechat_service - INFO - access_token获取成功，有效期: 7200秒
2025-07-19 17:03:44,982 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:03:45,005 - services.config_service - INFO - 配置保存成功
2025-07-19 17:03:45,005 - controllers.config_controller - INFO - 微信API连接测试成功，access_token已保存到配置
2025-07-19 17:03:45,005 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:03:45] "POST /api/test-wechat HTTP/1.1" 200 -
2025-07-19 17:04:06,950 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:04:06,951 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:04:06,951 - root - INFO - 获取生成历史请求
2025-07-19 17:04:06,951 - root - INFO - 获取发布历史请求
2025-07-19 17:04:06,953 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:04:06] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:04:06,954 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:04:06] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:04:15,137 - httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectTimeout(TimeoutError(10060, '由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。', None, 10060, None))
2025-07-19 17:04:15,165 - services.gemini_service - ERROR - 获取可用模型列表时发生错误: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。
2025-07-19 17:04:15,166 - controllers.config_controller - INFO - 成功获取到 0 个可用模型
2025-07-19 17:04:15,167 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:04:15] "GET /api/gemini-models HTTP/1.1" 200 -
2025-07-19 17:04:15,181 - root - INFO - 请求: GET /api/deepseek-models
2025-07-19 17:04:15,182 - root - INFO - 获取DeepSeek可用模型列表
2025-07-19 17:04:15,182 - controllers.config_controller - INFO - 开始获取DeepSeek可用模型列表
2025-07-19 17:04:15,183 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:04:15,184 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:04:15,185 - services.deepseek_service - INFO - DeepSeek API密钥已更新
2025-07-19 17:04:15,185 - services.deepseek_service - INFO - 开始获取DeepSeek可用模型列表
2025-07-19 17:04:15,188 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.deepseek.com:443
2025-07-19 17:04:15,349 - urllib3.connectionpool - DEBUG - https://api.deepseek.com:443 "GET /v1/models HTTP/1.1" 200 154
2025-07-19 17:04:15,350 - services.deepseek_service - INFO - DeepSeek API响应状态码: 200
2025-07-19 17:04:15,351 - services.deepseek_service - INFO - DeepSeek API响应内容: {'object': 'list', 'data': [{'id': 'deepseek-chat', 'object': 'model', 'owned_by': 'deepseek'}, {'id': 'deepseek-reasoner', 'object': 'model', 'owned_by': 'deepseek'}]}
2025-07-19 17:04:15,351 - services.deepseek_service - INFO - 发现模型: deepseek-chat
2025-07-19 17:04:15,352 - services.deepseek_service - INFO - 发现模型: deepseek-reasoner
2025-07-19 17:04:15,352 - services.deepseek_service - INFO - 找到 2 个DeepSeek模型: ['deepseek-chat', 'deepseek-reasoner']
2025-07-19 17:04:15,353 - controllers.config_controller - INFO - 成功获取到 2 个可用模型
2025-07-19 17:04:15,354 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:04:15] "GET /api/deepseek-models HTTP/1.1" 200 -
2025-07-19 17:04:15,368 - root - INFO - 请求: GET /api/dashscope-models
2025-07-19 17:04:15,368 - root - INFO - 获取阿里云百炼可用模型列表
2025-07-19 17:04:15,368 - controllers.config_controller - INFO - 开始获取阿里云百炼可用模型列表
2025-07-19 17:04:15,369 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:04:15,370 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:04:15,370 - services.dashscope_service - INFO - 尝试使用OpenAI兼容模式获取模型列表
2025-07-19 17:04:15,918 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x0000000009B6E0C0>, 'json_data': None}
2025-07-19 17:04:15,950 - openai._base_client - DEBUG - Sending HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models
2025-07-19 17:04:15,950 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:04:15,985 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B74800>
2025-07-19 17:04:15,985 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000008B1FF50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:04:16,002 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B74710>
2025-07-19 17:04:16,003 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-19 17:04:16,003 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:04:16,003 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-19 17:04:16,003 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:04:16,003 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-19 17:04:16,042 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ea49df94-88a6-9451-b118-d6855eab9675'), (b'content-type', b'application/json'), (b'req-cost-time', b'27'), (b'req-arrive-time', b'1752915850552'), (b'resp-start-time', b'1752915850579'), (b'x-envoy-upstream-service-time', b'26'), (b'set-cookie', b'acw_tc=ea49df94-88a6-9451-b118-d6855eab96753942f1810cc0a52ed2cc7b114447606d;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:04:10 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:04:16,042 - httpx - INFO - HTTP Request: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "HTTP/1.1 200 OK"
2025-07-19 17:04:16,067 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-19 17:04:16,088 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:04:16,088 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:04:16,088 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:04:16,088 - openai._base_client - DEBUG - HTTP Response: GET https://dashscope.aliyuncs.com/compatible-mode/v1/models "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ea49df94-88a6-9451-b118-d6855eab9675', 'content-type': 'application/json', 'req-cost-time': '27', 'req-arrive-time': '1752915850552', 'resp-start-time': '1752915850579', 'x-envoy-upstream-service-time': '26', 'set-cookie': 'acw_tc=ea49df94-88a6-9451-b118-d6855eab96753942f1810cc0a52ed2cc7b114447606d;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:04:10 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:04:16,089 - openai._base_client - DEBUG - request_id: ea49df94-88a6-9451-b118-d6855eab9675
2025-07-19 17:04:16,092 - services.dashscope_service - INFO - 兼容模式API返回模型数量: 85
2025-07-19 17:04:16,092 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus
2025-07-19 17:04:16,092 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-plus-2025-05-15
2025-07-19 17:04:16,092 - services.dashscope_service - INFO - 过滤掉无效模型ID: qvq-max-2025-05-15
2025-07-19 17:04:16,092 - services.dashscope_service - INFO - 过滤掉未知前缀的模型ID: codeqwen1.5-7b-chat
2025-07-19 17:04:16,093 - services.dashscope_service - INFO - 成功从兼容模式获取到 81 个有效模型
2025-07-19 17:04:16,093 - controllers.config_controller - INFO - 成功获取到 81 个可用模型
2025-07-19 17:04:16,093 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:04:16] "GET /api/dashscope-models HTTP/1.1" 200 -
2025-07-19 17:04:16,102 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:04:16,102 - root - INFO - 获取生成历史请求
2025-07-19 17:04:16,103 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:04:16] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:04:16,110 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:04:16,110 - root - INFO - 获取发布历史请求
2025-07-19 17:04:16,111 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:04:16] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:04:28,980 - root - INFO - 请求: POST /api/generate-article
2025-07-19 17:04:28,980 - root - INFO - 生成文章请求
2025-07-19 17:04:28,981 - controllers.article_controller - INFO - 【唯一请求ID】6a334485-00c1-437f-b0e7-8c276d6e8226 - generate_article
2025-07-19 17:04:28,981 - controllers.article_controller - INFO - 收到文章生成请求: {'title': '通报:杭州臭味自来水不是粪水', 'word_count': 8000, 'image_count': 8, 'format_template': '<div style="font-family: "PingFang SC", "Microsoft YaHei", sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px; font-size: 16px;">\n    \n    <!-- 1. 标题封面区块 (蓝紫色渐变，底部圆角) -->\n    <section style="padding: 28px 20px; background: linear-gradient(160deg, rgb(78, 84, 200) 0%, rgb(143, 148, 251) 100%); color: white; border-radius: 0px 0px 25px 25px; box-shadow: rgba(78, 84, 200, 0.3) 0px 4px 15px; margin-bottom: 25px;">\n      <h1 style="font-size: 35px; margin: 0px; font-weight: 700; letter-spacing: -0.5px; line-height: 1.2;">\n          AI生成主标题<br>\n          <span style="font-size: 40px; font-weight: 800;">AI生成强调副标题</span>\n      </h1>\n      <p style="font-size: 18px; margin: 15px 0px 0px; opacity: 0.9; font-weight: 300; letter-spacing: 0.5px;">AI生成引言或概括语</p>\n    </section>\n\n    <!-- 2. 前言区块 (白色背景，圆角，阴影，带居中图标) -->\n    <section style="padding: 20px; margin: 0px 0px 25px; background: white; border-radius: 18px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <!-- 居中电话图标 (Animated path removed, only static path) -->\n      <svg style="width: 65px; height: 65px; display: block; margin: 0px auto 15px;" viewBox="0 0 24 24" fill="none" stroke="#4e54c8" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z"></path>\n      </svg>\n      <h2 style="font-size: 24px; margin: 0px 0px 15px; text-align: center; color: rgb(78, 84, 200); font-weight: 600;">AI生成前言标题</h2>\n      <p style="margin: 0px 0px 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成前言段落一。此段落带有首行缩进。</p>\n      <p style="margin: 0px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成前言段落二。继续阐述前言内容。</p>\n    </section>\n\n    <!-- 3. 学习认知基础区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0px 0px 25px; background: white; border-radius: 18px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: rgb(78, 84, 200); display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 3L1 9l11 6 11-6-11-6zM1 9v6l11 6 11-6V9"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0px; font-weight: 600; color: rgb(51, 51, 51);">AI生成二级标题</h2>\n      </div>\n      \n      <h3 style="font-size: 19px; margin: 20px 0px 12px; color: rgb(78, 84, 200); font-weight: 600;">AI生成三级标题</h3>\n      <p style="margin: 0px 0px 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成正文段落一，此段落带有首行缩进。</p>\n      \n      <h3 style="font-size: 19px; margin: 20px 0px 12px; color: rgb(78, 84, 200); font-weight: 600;">AI生成三级标题</h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成正文段落二，此段落带有首行缩进。</p>\n      \n      <!-- 引用框 (浅蓝色背景，左侧深蓝边框，圆角) -->\n      <div style="background: #f1f2ff; padding: 15px; border-radius: 12px; margin: 20px 0; border-left: 4px solid #4e54c8;">\n        <p style="margin: 0; font-size: 15px; font-weight: 500; color: #333;">AI生成引用或提示内容，无缩进。</p>\n      </div>\n    </section>\n\n    <!-- 4. 核心策略区块 (白色背景，圆角，阴影，带圆形数字和图标的H3) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #8f94fb; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M17 3H7a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm-1 9h-2v2h-2v-2H9V9h3V7h2v2h3v3z"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <!-- 带有圆形数字的H3列表项 (多个重复) -->\n      <h3 style="font-size: 19px; margin: 25px 0 12px; color: #8f94fb; font-weight: 600; display: flex; align-items: center;">\n        <span style="display: inline-flex; justify-content: center; align-items: center; width: 28px; height: 28px; background: #8f94fb; color: white; border-radius: 50%; margin-right: 10px; font-size: 14px;">1</span>AI生成策略标题\n      </h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落一。</p>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落二。</p>\n      \n      <!-- 引用框 (浅灰色背景，带图标，圆角，Flex布局) -->\n      <div style="background: #f8f9ff; border-radius: 12px; padding: 15px; margin: 20px 0; display: flex; align-items: center;">\n        <svg style="width: 50px; height: 50px; margin-right: 15px;" viewBox="0 0 24 24" fill="none">\n          <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <path d="M16 17l5-5-5-5" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <path d="M21 12H9" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n        </svg>\n        <p style="margin: 0; font-size: 15px; color: #555; font-style: italic;">"AI生成引用或哲学思考内容。" — 引用来源</p>\n      </div>\n\n      <!-- 多个带有圆形数字的H3列表项重复 -->\n      <h3 style="font-size: 19px; margin: 25px 0 12px; color: #8f94fb; font-weight: 600; display: flex; align-items: center;">\n        <span style="display: inline-flex; justify-content: center; align-items: center; width: 28px; height: 28px; background: #8f94fb; color: white; border-radius: 50%; margin-right: 10px; font-size: 14px;">2</span>AI生成策略标题\n      </h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落。</p>\n      \n      <!-- ... (其他类似策略重复) -->\n\n    </section>\n\n    <!-- 5. 构建个人学习系统区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #4e54c8; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成引言段落，带有首行缩进。</p>\n\n      <!-- 灰色背景的系统模块列表容器 -->\n      <div style="background: #f5f7fa; border-radius: 15px; padding: 20px; margin: 20px 0;">\n        <h3 style="font-size: 18px; margin: 0 0 15px; color: #4e54c8; font-weight: 600;">AI生成模块列表标题</h3>\n        \n        <!-- 单个模块项 -->\n        <div style="margin-bottom: 15px;">\n          <h4 style="font-size: 16px; margin: 0 0 8px; color: #333; font-weight: 600;">1. AI生成模块标题</h4>\n          <p style="margin: 0; font-size: 15px; color: #555;">AI生成模块描述内容。</p>\n        </div>\n        <!-- ... (其他模块项重复) -->\n        <div>\n          <h4 style="font-size: 16px; margin: 0 0 8px; color: #333; font-weight: 600;">4. AI生成模块标题</h4>\n          <p style="margin: 0; font-size: 15px; color: #555;">AI生成模块描述内容。</p>\n        </div>\n      </div>\n\n      <h3 style="font-size: 19px; margin: 25px 0 15px; color: #4e54c8; font-weight: 600;">AI生成数字化工具标题</h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成工具引言段落。</p>\n\n      <!-- 工具卡片网格布局容器 -->\n      <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap: 10px; margin: 15px 0;">\n        <!-- 单个工具卡片 -->\n        <div style="padding: 12px; background: #f5f7fa; border-radius: 10px; text-align: center;">\n          <p style="margin: 0 0 5px; font-size: 14px; font-weight: 600; color: #4e54c8;">AI生成工具类别</p>\n          <p style="margin: 0; font-size: 13px; color: #555;">AI生成具体工具名称列表</p>\n        </div>\n        <!-- ... (其他工具卡片重复) -->\n      </div>\n    </section>\n\n    <!-- 6. 克服学习障碍区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #8f94fb; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成引言段落，描述学习障碍。</p>\n\n      <!-- 带背景渐变和边框的障碍卡片容器 (多个重复) -->\n      <div style="background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%); border-radius: 15px; padding: 5px; margin: 20px 0;">\n        <div style="background: white; border-radius: 12px; padding: 15px;">\n          <h3 style="font-size: 18px; margin: 0 0 10px; color: #8f94fb; font-weight: 600;">AI生成障碍标题</h3>\n          <p style="margin: 0 0 10px; font-size: 15px; color: #444;">AI生成障碍描述。</p>\n          <p style="margin: 0; font-size: 15px; color: #444; font-weight: 500;">AI生成解决方案。</p>\n        </div>\n      </div>\n      <!-- ... (其他障碍卡片重复) -->\n\n    </section>\n\n    <!-- 7. 结语区块 (蓝紫色渐变背景，底部圆角，带居中图标) -->\n    <section style="padding: 25px 20px 30px; margin: 0 0 25px; background: linear-gradient(160deg, #4e54c8 0%, #8f94fb 100%); color: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(78, 84, 200, 0.3);">\n      <h2 style="font-size: 24px; margin: 0 0 20px; font-weight: 600; text-align: center;">AI生成结语标题</h2>\n      \n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; opacity: 0.9;">AI生成结语段落一。</p>\n      \n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; opacity: 0.9;">AI生成结语段落二。</p>\n      \n      <!-- 居中加号/圆圈图标 -->\n      <div style="text-align: center; margin-top: 25px;">\n        <svg style="width: 60px; height: 60px;" viewBox="0 0 24 24" fill="none">\n          <path d="M12 2v20M2 12h20" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <circle cx="12" cy="12" r="10" stroke="white" stroke-width="2" fill="none"></circle>\n        </svg>\n        <p style="margin: 15px 0 0; font-size: 18px; font-weight: 600; letter-spacing: 1px;">AI生成结束语文本</p>\n      </div>\n    </section>\n\n</div>', 'ai_model': 'dashscope', 'image_model': 'pexels'}
2025-07-19 17:04:28,981 - controllers.article_controller - INFO - 开始生成文章，标题: 通报:杭州臭味自来水不是粪水
2025-07-19 17:04:28,981 - controllers.article_controller - INFO - 使用AI模型: dashscope, 生图模型: pexels
2025-07-19 17:04:28,982 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:04:28,982 - controllers.article_controller - INFO - 阿里云百炼配置检查: api_key=已设置
2025-07-19 17:04:28,982 - controllers.article_controller - INFO - 第一步：开始生成文章内容，使用模型: qwen-plus
2025-07-19 17:04:29,537 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下HTML格式模板，生成一篇关于‘通报:杭州臭味自来水不是粪水’的公众号文章，排版核心风格要与模板一致，字数约8000字，且最终输出的HTML内容总字符数必须小于等于20000字符。模板如下：\n<div style="font-family: "PingFang SC", "Microsoft YaHei", sans-serif; color: rgb(51, 51, 51); line-height: 1.6; margin: 0px; padding: 0px; font-size: 16px;">\n    \n    <!-- 1. 标题封面区块 (蓝紫色渐变，底部圆角) -->\n    <section style="padding: 28px 20px; background: linear-gradient(160deg, rgb(78, 84, 200) 0%, rgb(143, 148, 251) 100%); color: white; border-radius: 0px 0px 25px 25px; box-shadow: rgba(78, 84, 200, 0.3) 0px 4px 15px; margin-bottom: 25px;">\n      <h1 style="font-size: 35px; margin: 0px; font-weight: 700; letter-spacing: -0.5px; line-height: 1.2;">\n          AI生成主标题<br>\n          <span style="font-size: 40px; font-weight: 800;">AI生成强调副标题</span>\n      </h1>\n      <p style="font-size: 18px; margin: 15px 0px 0px; opacity: 0.9; font-weight: 300; letter-spacing: 0.5px;">AI生成引言或概括语</p>\n    </section>\n\n    <!-- 2. 前言区块 (白色背景，圆角，阴影，带居中图标) -->\n    <section style="padding: 20px; margin: 0px 0px 25px; background: white; border-radius: 18px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <!-- 居中电话图标 (Animated path removed, only static path) -->\n      <svg style="width: 65px; height: 65px; display: block; margin: 0px auto 15px;" viewBox="0 0 24 24" fill="none" stroke="#4e54c8" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z"></path>\n      </svg>\n      <h2 style="font-size: 24px; margin: 0px 0px 15px; text-align: center; color: rgb(78, 84, 200); font-weight: 600;">AI生成前言标题</h2>\n      <p style="margin: 0px 0px 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成前言段落一。此段落带有首行缩进。</p>\n      <p style="margin: 0px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成前言段落二。继续阐述前言内容。</p>\n    </section>\n\n    <!-- 3. 学习认知基础区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0px 0px 25px; background: white; border-radius: 18px; box-shadow: rgba(0, 0, 0, 0.05) 0px 5px 15px;">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: rgb(78, 84, 200); display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 3L1 9l11 6 11-6-11-6zM1 9v6l11 6 11-6V9"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0px; font-weight: 600; color: rgb(51, 51, 51);">AI生成二级标题</h2>\n      </div>\n      \n      <h3 style="font-size: 19px; margin: 20px 0px 12px; color: rgb(78, 84, 200); font-weight: 600;">AI生成三级标题</h3>\n      <p style="margin: 0px 0px 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: rgb(68, 68, 68);">AI生成正文段落一，此段落带有首行缩进。</p>\n      \n      <h3 style="font-size: 19px; margin: 20px 0px 12px; color: rgb(78, 84, 200); font-weight: 600;">AI生成三级标题</h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成正文段落二，此段落带有首行缩进。</p>\n      \n      <!-- 引用框 (浅蓝色背景，左侧深蓝边框，圆角) -->\n      <div style="background: #f1f2ff; padding: 15px; border-radius: 12px; margin: 20px 0; border-left: 4px solid #4e54c8;">\n        <p style="margin: 0; font-size: 15px; font-weight: 500; color: #333;">AI生成引用或提示内容，无缩进。</p>\n      </div>\n    </section>\n\n    <!-- 4. 核心策略区块 (白色背景，圆角，阴影，带圆形数字和图标的H3) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #8f94fb; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M17 3H7a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm-1 9h-2v2h-2v-2H9V9h3V7h2v2h3v3z"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <!-- 带有圆形数字的H3列表项 (多个重复) -->\n      <h3 style="font-size: 19px; margin: 25px 0 12px; color: #8f94fb; font-weight: 600; display: flex; align-items: center;">\n        <span style="display: inline-flex; justify-content: center; align-items: center; width: 28px; height: 28px; background: #8f94fb; color: white; border-radius: 50%; margin-right: 10px; font-size: 14px;">1</span>AI生成策略标题\n      </h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落一。</p>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落二。</p>\n      \n      <!-- 引用框 (浅灰色背景，带图标，圆角，Flex布局) -->\n      <div style="background: #f8f9ff; border-radius: 12px; padding: 15px; margin: 20px 0; display: flex; align-items: center;">\n        <svg style="width: 50px; height: 50px; margin-right: 15px;" viewBox="0 0 24 24" fill="none">\n          <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <path d="M16 17l5-5-5-5" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <path d="M21 12H9" stroke="#4e54c8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n        </svg>\n        <p style="margin: 0; font-size: 15px; color: #555; font-style: italic;">"AI生成引用或哲学思考内容。" — 引用来源</p>\n      </div>\n\n      <!-- 多个带有圆形数字的H3列表项重复 -->\n      <h3 style="font-size: 19px; margin: 25px 0 12px; color: #8f94fb; font-weight: 600; display: flex; align-items: center;">\n        <span style="display: inline-flex; justify-content: center; align-items: center; width: 28px; height: 28px; background: #8f94fb; color: white; border-radius: 50%; margin-right: 10px; font-size: 14px;">2</span>AI生成策略标题\n      </h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成策略描述段落。</p>\n      \n      <!-- ... (其他类似策略重复) -->\n\n    </section>\n\n    <!-- 5. 构建个人学习系统区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #4e54c8; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成引言段落，带有首行缩进。</p>\n\n      <!-- 灰色背景的系统模块列表容器 -->\n      <div style="background: #f5f7fa; border-radius: 15px; padding: 20px; margin: 20px 0;">\n        <h3 style="font-size: 18px; margin: 0 0 15px; color: #4e54c8; font-weight: 600;">AI生成模块列表标题</h3>\n        \n        <!-- 单个模块项 -->\n        <div style="margin-bottom: 15px;">\n          <h4 style="font-size: 16px; margin: 0 0 8px; color: #333; font-weight: 600;">1. AI生成模块标题</h4>\n          <p style="margin: 0; font-size: 15px; color: #555;">AI生成模块描述内容。</p>\n        </div>\n        <!-- ... (其他模块项重复) -->\n        <div>\n          <h4 style="font-size: 16px; margin: 0 0 8px; color: #333; font-weight: 600;">4. AI生成模块标题</h4>\n          <p style="margin: 0; font-size: 15px; color: #555;">AI生成模块描述内容。</p>\n        </div>\n      </div>\n\n      <h3 style="font-size: 19px; margin: 25px 0 15px; color: #4e54c8; font-weight: 600;">AI生成数字化工具标题</h3>\n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成工具引言段落。</p>\n\n      <!-- 工具卡片网格布局容器 -->\n      <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap: 10px; margin: 15px 0;">\n        <!-- 单个工具卡片 -->\n        <div style="padding: 12px; background: #f5f7fa; border-radius: 10px; text-align: center;">\n          <p style="margin: 0 0 5px; font-size: 14px; font-weight: 600; color: #4e54c8;">AI生成工具类别</p>\n          <p style="margin: 0; font-size: 13px; color: #555;">AI生成具体工具名称列表</p>\n        </div>\n        <!-- ... (其他工具卡片重复) -->\n      </div>\n    </section>\n\n    <!-- 6. 克服学习障碍区块 (白色背景，圆角，阴影，带顶部图标) -->\n    <section style="padding: 25px 20px; margin: 0 0 25px; background: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);">\n      <!-- 带有圆形背景的图标H2 -->\n      <div style="display: flex; align-items: center; margin-bottom: 20px;">\n        <div style="width: 40px; height: 40px; border-radius: 50%; background: #8f94fb; display: flex; justify-content: center; align-items: center; margin-right: 15px;">\n          <svg style="width: 24px; height: 24px;" viewBox="0 0 24 24" fill="white">\n            <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>\n          </svg>\n        </div>\n        <h2 style="font-size: 24px; margin: 0; font-weight: 600; color: #333;">AI生成二级标题</h2>\n      </div>\n\n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; color: #444;">AI生成引言段落，描述学习障碍。</p>\n\n      <!-- 带背景渐变和边框的障碍卡片容器 (多个重复) -->\n      <div style="background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%); border-radius: 15px; padding: 5px; margin: 20px 0;">\n        <div style="background: white; border-radius: 12px; padding: 15px;">\n          <h3 style="font-size: 18px; margin: 0 0 10px; color: #8f94fb; font-weight: 600;">AI生成障碍标题</h3>\n          <p style="margin: 0 0 10px; font-size: 15px; color: #444;">AI生成障碍描述。</p>\n          <p style="margin: 0; font-size: 15px; color: #444; font-weight: 500;">AI生成解决方案。</p>\n        </div>\n      </div>\n      <!-- ... (其他障碍卡片重复) -->\n\n    </section>\n\n    <!-- 7. 结语区块 (蓝紫色渐变背景，底部圆角，带居中图标) -->\n    <section style="padding: 25px 20px 30px; margin: 0 0 25px; background: linear-gradient(160deg, #4e54c8 0%, #8f94fb 100%); color: white; border-radius: 18px; box-shadow: 0 5px 15px rgba(78, 84, 200, 0.3);">\n      <h2 style="font-size: 24px; margin: 0 0 20px; font-weight: 600; text-align: center;">AI生成结语标题</h2>\n      \n      <p style="margin: 0 0 15px; font-size: 16px; text-align: justify; text-indent: 2em; opacity: 0.9;">AI生成结语段落一。</p>\n      \n      <p style="margin: 0 0 20px; font-size: 16px; text-align: justify; text-indent: 2em; opacity: 0.9;">AI生成结语段落二。</p>\n      \n      <!-- 居中加号/圆圈图标 -->\n      <div style="text-align: center; margin-top: 25px;">\n        <svg style="width: 60px; height: 60px;" viewBox="0 0 24 24" fill="none">\n          <path d="M12 2v20M2 12h20" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n          <circle cx="12" cy="12" r="10" stroke="white" stroke-width="2" fill="none"></circle>\n        </svg>\n        <p style="margin: 15px 0 0; font-size: 18px; font-weight: 600; letter-spacing: 1px;">AI生成结束语文本</p>\n      </div>\n    </section>\n\n</div>'}], 'model': 'qwen-plus', 'max_tokens': 4000, 'stream': False}}
2025-07-19 17:04:29,538 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:04:29,539 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:04:29,585 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B8DA30>
2025-07-19 17:04:29,586 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B56450> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:04:29,608 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009B8D460>
2025-07-19 17:04:29,609 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:04:29,610 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:04:29,611 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:04:29,612 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:04:29,613 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:04:36,946 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:04:36,947 - root - INFO - 获取生成历史请求
2025-07-19 17:04:36,948 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:04:36,948 - root - INFO - 获取发布历史请求
2025-07-19 17:04:36,950 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:04:36] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:04:36,951 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:04:36] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:05:07,174 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:05:07,174 - root - INFO - 获取生成历史请求
2025-07-19 17:05:07,174 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:05:07,174 - root - INFO - 获取发布历史请求
2025-07-19 17:05:07,175 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:05:07] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:05:07,175 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:05:07] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:05:37,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:05:37,183 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:05:37,183 - root - INFO - 获取生成历史请求
2025-07-19 17:05:37,184 - root - INFO - 获取发布历史请求
2025-07-19 17:05:37,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:05:37] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:05:37,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:05:37] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:05:52,402 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'601b27dd-3d3f-9b25-94d4-17dc56bf40d2'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'82776'), (b'req-arrive-time', b'1752915864162'), (b'resp-start-time', b'1752915946938'), (b'x-envoy-upstream-service-time', b'82760'), (b'set-cookie', b'acw_tc=601b27dd-3d3f-9b25-94d4-17dc56bf40d27a2452bfcaf3d4626af054f3ee9ba458;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:05:46 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:05:52,402 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:05:52,403 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:05:52,403 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:05:52,403 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:05:52,403 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:05:52,404 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '601b27dd-3d3f-9b25-94d4-17dc56bf40d2', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '82776', 'req-arrive-time': '1752915864162', 'resp-start-time': '1752915946938', 'x-envoy-upstream-service-time': '82760', 'set-cookie': 'acw_tc=601b27dd-3d3f-9b25-94d4-17dc56bf40d27a2452bfcaf3d4626af054f3ee9ba458;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:05:46 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:05:52,405 - openai._base_client - DEBUG - request_id: 601b27dd-3d3f-9b25-94d4-17dc56bf40d2
2025-07-19 17:05:52,465 - controllers.article_controller - INFO - 文章内容生成成功，长度: 8781字符
2025-07-19 17:05:52,465 - controllers.article_controller - INFO - 第二步：开始生成文章摘要
2025-07-19 17:05:52,465 - services.dashscope_service - INFO - 开始生成文章摘要，标题: 通报:杭州臭味自来水不是粪水
2025-07-19 17:05:52,932 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请为以下文章生成一个简洁的摘要：\n\n标题：通报:杭州臭味自来水不是粪水\n内容预览：```html 杭州臭味自来水事件 真相与科学解读 近日杭州部分区域自来水出\n\n要求：\n1. 摘要长度不超过100字\n2. 概括文章的核心内容和价值\n3. 语言吸引人，能激发读者的阅读兴趣\n4. 不要包含HTML标签，纯文本即可\n5. 使用中文表达\n\n请直接输出摘要内容，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 17:05:52,933 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:05:52,933 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:05:52,975 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BA8590>
2025-07-19 17:05:52,975 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B82350> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:05:52,994 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BA8170>
2025-07-19 17:05:52,994 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:05:52,995 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:05:52,995 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:05:52,995 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:05:52,995 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:05:54,272 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'13f17309-75c1-9436-8bb4-948d7db4f472'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1259'), (b'req-arrive-time', b'1752915947545'), (b'resp-start-time', b'1752915948805'), (b'x-envoy-upstream-service-time', b'1258'), (b'set-cookie', b'acw_tc=13f17309-75c1-9436-8bb4-948d7db4f472decf003c2363f044bc9b2431fda939a2;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:05:48 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:05:54,272 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:05:54,273 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:05:54,273 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:05:54,273 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:05:54,273 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:05:54,274 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '13f17309-75c1-9436-8bb4-948d7db4f472', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1259', 'req-arrive-time': '1752915947545', 'resp-start-time': '1752915948805', 'x-envoy-upstream-service-time': '1258', 'set-cookie': 'acw_tc=13f17309-75c1-9436-8bb4-948d7db4f472decf003c2363f044bc9b2431fda939a2;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:05:48 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:05:54,274 - openai._base_client - DEBUG - request_id: 13f17309-75c1-9436-8bb4-948d7db4f472
2025-07-19 17:05:54,275 - services.dashscope_service - INFO - 文章摘要生成成功: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递权威信息，帮助读者理性看待水质问题，提升对公共事件的信任度与判断力。
2025-07-19 17:05:54,275 - controllers.article_controller - INFO - 摘要生成完成: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递...
2025-07-19 17:05:54,275 - controllers.article_controller - INFO - 文章字数约: 8000，计划生成配图数量: 8
2025-07-19 17:05:54,275 - controllers.article_controller - INFO - 第四步：开始生成和插入配图
2025-07-19 17:05:54,276 - controllers.article_controller - INFO - 开始处理文章配图，计划生成8张图片（仅本地路径，不上传微信）
2025-07-19 17:05:54,276 - controllers.article_controller - INFO - 计划在第[2, 4, 5, 7, 9, 11, 12, 14]段后插入配图
2025-07-19 17:05:54,276 - controllers.article_controller - INFO - 生成第1张配图，使用模型: pexels
2025-07-19 17:05:54,276 - services.image_service - INFO - 开始生成文章配图，标题: 通报:杭州臭味自来水不是粪水 - 配图1, 生图模型: pexels, AI模型: dashscope, 图片索引: 1/8
2025-07-19 17:05:54,276 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 通报:杭州臭味自来水不是粪水 - 配图1, AI模型: dashscope, 图片索引: 1/8
2025-07-19 17:05:54,277 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:05:54,277 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:05:54,277 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:05:54,278 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:05:54,725 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n通报:杭州臭味自来水不是粪水 - 配图1\n描述: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递权威信息，帮助读者理性看待水质问题，提升对公共事件的信任度与判断力。\n文章内容预览: ```html 杭州臭味自来水事件 真相与科学解读 近日杭州部分区域自来水出现异味，引发市民担忧。官方通报：并非粪水，而是天然有机物所致。 事件回顾与公众关注...\n\n图片信息：\n- 这是第1张图片，总共需要8张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 17:05:54,726 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:05:54,726 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:05:54,774 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BAB080>
2025-07-19 17:05:54,774 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BA1450> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:05:54,790 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BAADE0>
2025-07-19 17:05:54,791 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:05:54,791 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:05:54,791 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:05:54,791 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:05:54,792 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:05:56,139 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'50c2b86e-9dfe-92b8-835d-5af046cfcdc8'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'1334'), (b'req-arrive-time', b'1752915949341'), (b'resp-start-time', b'1752915950675'), (b'x-envoy-upstream-service-time', b'1332'), (b'set-cookie', b'acw_tc=50c2b86e-9dfe-92b8-835d-5af046cfcdc8fb8db90bdedf75d6cf0380c0f30257d4;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:05:50 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:05:56,140 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:05:56,140 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:05:56,141 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:05:56,142 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:05:56,142 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:05:56,143 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '50c2b86e-9dfe-92b8-835d-5af046cfcdc8', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '1334', 'req-arrive-time': '1752915949341', 'resp-start-time': '1752915950675', 'x-envoy-upstream-service-time': '1332', 'set-cookie': 'acw_tc=50c2b86e-9dfe-92b8-835d-5af046cfcdc8fb8db90bdedf75d6cf0380c0f30257d4;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:05:50 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:05:56,143 - openai._base_client - DEBUG - request_id: 50c2b86e-9dfe-92b8-835d-5af046cfcdc8
2025-07-19 17:05:56,173 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: water pollution tap water
2025-07-19 17:05:56,176 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 17:05:57,095 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=water+pollution+tap+water&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 17:05:57,132 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 17:05:57,133 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 17:05:57,133 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-19 17:05:57,133 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图1_20250719_170557.jpg
2025-07-19 17:05:57,134 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 17:05:57,840 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/6207947/pexels-photo-6207947.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 185408
2025-07-19 17:05:57,922 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图1_20250719_170557.jpg
2025-07-19 17:05:57,922 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图1_20250719_170557.jpg
2025-07-19 17:05:57,922 - controllers.article_controller - INFO - 第1张配图处理完成，使用本地路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图1_20250719_170557.jpg
2025-07-19 17:05:57,922 - controllers.article_controller - INFO - 生成第2张配图，使用模型: pexels
2025-07-19 17:05:57,923 - services.image_service - INFO - 开始生成文章配图，标题: 通报:杭州臭味自来水不是粪水 - 配图2, 生图模型: pexels, AI模型: dashscope, 图片索引: 2/8
2025-07-19 17:05:57,923 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 通报:杭州臭味自来水不是粪水 - 配图2, AI模型: dashscope, 图片索引: 2/8
2025-07-19 17:05:57,923 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:05:57,923 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:05:57,924 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:05:57,924 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:05:58,364 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n通报:杭州臭味自来水不是粪水 - 配图2\n描述: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递权威信息，帮助读者理性看待水质问题，提升对公共事件的信任度与判断力。\n文章内容预览: ```html 杭州臭味自来水事件 真相与科学解读 近日杭州部分区域自来水出现异味，引发市民担忧。官方通报：并非粪水，而是天然有机物所致。 事件回顾与公众关注...\n\n图片信息：\n- 这是第2张图片，总共需要8张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 17:05:58,364 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:05:58,365 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:05:58,397 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB5B80>
2025-07-19 17:05:58,426 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BC0250> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:05:58,444 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB5610>
2025-07-19 17:05:58,445 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:05:58,445 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:05:58,445 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:05:58,445 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:05:58,445 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:05:59,059 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'787c85c1-3fb5-92fd-8cca-cfd8b5e82b06'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'599'), (b'req-arrive-time', b'1752915952996'), (b'resp-start-time', b'1752915953596'), (b'x-envoy-upstream-service-time', b'597'), (b'set-cookie', b'acw_tc=787c85c1-3fb5-92fd-8cca-cfd8b5e82b0637feba5d3607d1da9eb55afeb24a8953;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:05:53 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:05:59,060 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:05:59,061 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:05:59,061 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:05:59,062 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:05:59,062 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:05:59,063 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '787c85c1-3fb5-92fd-8cca-cfd8b5e82b06', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '599', 'req-arrive-time': '1752915952996', 'resp-start-time': '1752915953596', 'x-envoy-upstream-service-time': '597', 'set-cookie': 'acw_tc=787c85c1-3fb5-92fd-8cca-cfd8b5e82b0637feba5d3607d1da9eb55afeb24a8953;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:05:53 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:05:59,063 - openai._base_client - DEBUG - request_id: 787c85c1-3fb5-92fd-8cca-cfd8b5e82b06
2025-07-19 17:05:59,064 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: water treatment plant laboratory
2025-07-19 17:05:59,067 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 17:05:59,985 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=water+treatment+plant+laboratory&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 17:06:00,019 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 17:06:00,020 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 17:06:00,021 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-19 17:06:00,021 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图2_20250719_170600.jpg
2025-07-19 17:06:00,024 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 17:06:01,798 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/8376162/pexels-photo-8376162.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 127693
2025-07-19 17:06:01,847 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图2_20250719_170600.jpg
2025-07-19 17:06:01,847 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图2_20250719_170600.jpg
2025-07-19 17:06:01,848 - controllers.article_controller - INFO - 第2张配图处理完成，使用本地路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图2_20250719_170600.jpg
2025-07-19 17:06:01,848 - controllers.article_controller - INFO - 生成第3张配图，使用模型: pexels
2025-07-19 17:06:01,849 - services.image_service - INFO - 开始生成文章配图，标题: 通报:杭州臭味自来水不是粪水 - 配图3, 生图模型: pexels, AI模型: dashscope, 图片索引: 3/8
2025-07-19 17:06:01,849 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 通报:杭州臭味自来水不是粪水 - 配图3, AI模型: dashscope, 图片索引: 3/8
2025-07-19 17:06:01,850 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:01,850 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:01,850 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:01,851 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:02,286 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n通报:杭州臭味自来水不是粪水 - 配图3\n描述: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递权威信息，帮助读者理性看待水质问题，提升对公共事件的信任度与判断力。\n文章内容预览: ```html 杭州臭味自来水事件 真相与科学解读 近日杭州部分区域自来水出现异味，引发市民担忧。官方通报：并非粪水，而是天然有机物所致。 事件回顾与公众关注...\n\n图片信息：\n- 这是第3张图片，总共需要8张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 17:06:02,286 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:06:02,287 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:06:02,321 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BE4680>
2025-07-19 17:06:02,321 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BC2950> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:06:02,337 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB7380>
2025-07-19 17:06:02,337 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:06:02,337 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:06:02,337 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:06:02,338 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:06:02,338 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:06:02,853 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'31435ead-dd9c-9555-90f4-e470fa3eac07'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'501'), (b'req-arrive-time', b'1752915956888'), (b'resp-start-time', b'1752915957390'), (b'x-envoy-upstream-service-time', b'499'), (b'set-cookie', b'acw_tc=31435ead-dd9c-9555-90f4-e470fa3eac07d74fa7903691bd613f931d36509dd62b;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:05:57 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:06:02,853 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:06:02,853 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:06:02,853 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:06:02,853 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:06:02,854 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:06:02,854 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '31435ead-dd9c-9555-90f4-e470fa3eac07', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '501', 'req-arrive-time': '1752915956888', 'resp-start-time': '1752915957390', 'x-envoy-upstream-service-time': '499', 'set-cookie': 'acw_tc=31435ead-dd9c-9555-90f4-e470fa3eac07d74fa7903691bd613f931d36509dd62b;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:05:57 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:06:02,854 - openai._base_client - DEBUG - request_id: 31435ead-dd9c-9555-90f4-e470fa3eac07
2025-07-19 17:06:02,855 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: water treatment science lab
2025-07-19 17:06:02,856 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 17:06:04,198 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=water+treatment+science+lab&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 17:06:04,199 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 17:06:04,200 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 17:06:04,200 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-19 17:06:04,200 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图3_20250719_170604.jpg
2025-07-19 17:06:04,201 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 17:06:05,003 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/5922051/pexels-photo-5922051.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 57536
2025-07-19 17:06:05,049 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图3_20250719_170604.jpg
2025-07-19 17:06:05,049 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图3_20250719_170604.jpg
2025-07-19 17:06:05,050 - controllers.article_controller - INFO - 第3张配图处理完成，使用本地路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图3_20250719_170604.jpg
2025-07-19 17:06:05,050 - controllers.article_controller - INFO - 生成第4张配图，使用模型: pexels
2025-07-19 17:06:05,050 - services.image_service - INFO - 开始生成文章配图，标题: 通报:杭州臭味自来水不是粪水 - 配图4, 生图模型: pexels, AI模型: dashscope, 图片索引: 4/8
2025-07-19 17:06:05,050 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 通报:杭州臭味自来水不是粪水 - 配图4, AI模型: dashscope, 图片索引: 4/8
2025-07-19 17:06:05,051 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:05,051 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:05,051 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:05,052 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:05,488 - httpcore.connection - DEBUG - close.started
2025-07-19 17:06:05,488 - httpcore.connection - DEBUG - close.complete
2025-07-19 17:06:05,489 - httpcore.connection - DEBUG - close.started
2025-07-19 17:06:05,489 - httpcore.connection - DEBUG - close.complete
2025-07-19 17:06:05,489 - httpcore.connection - DEBUG - close.started
2025-07-19 17:06:05,489 - httpcore.connection - DEBUG - close.complete
2025-07-19 17:06:05,490 - httpcore.connection - DEBUG - close.started
2025-07-19 17:06:05,490 - httpcore.connection - DEBUG - close.complete
2025-07-19 17:06:05,494 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n通报:杭州臭味自来水不是粪水 - 配图4\n描述: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递权威信息，帮助读者理性看待水质问题，提升对公共事件的信任度与判断力。\n文章内容预览: ```html 杭州臭味自来水事件 真相与科学解读 近日杭州部分区域自来水出现异味，引发市民担忧。官方通报：并非粪水，而是天然有机物所致。 事件回顾与公众关注...\n\n图片信息：\n- 这是第4张图片，总共需要8张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 17:06:05,495 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:06:05,495 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:06:05,530 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB6F30>
2025-07-19 17:06:05,530 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BC36D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:06:05,544 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB7800>
2025-07-19 17:06:05,545 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:06:05,545 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:06:05,545 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:06:05,545 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:06:05,545 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:06:06,121 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'12570929-3246-9fe3-bf76-a0beabed7052'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'562'), (b'req-arrive-time', b'1752915960094'), (b'resp-start-time', b'1752915960657'), (b'x-envoy-upstream-service-time', b'559'), (b'set-cookie', b'acw_tc=12570929-3246-9fe3-bf76-a0beabed7052bf9aa4f5e82179c32b02a2e976aa7ff2;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:06:00 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:06:06,122 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:06:06,123 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:06:06,123 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:06:06,124 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:06:06,124 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:06:06,125 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '12570929-3246-9fe3-bf76-a0beabed7052', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '562', 'req-arrive-time': '1752915960094', 'resp-start-time': '1752915960657', 'x-envoy-upstream-service-time': '559', 'set-cookie': 'acw_tc=12570929-3246-9fe3-bf76-a0beabed7052bf9aa4f5e82179c32b02a2e976aa7ff2;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:06:00 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:06:06,125 - openai._base_client - DEBUG - request_id: 12570929-3246-9fe3-bf76-a0beabed7052
2025-07-19 17:06:06,126 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: water quality analysis scientific
2025-07-19 17:06:06,129 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 17:06:07,018 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=water+quality+analysis+scientific&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 17:06:07,019 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 17:06:07,019 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 17:06:07,019 - services.image_service - INFO - 选择了第4张图片（共5张）
2025-07-19 17:06:07,019 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图4_20250719_170607.jpg
2025-07-19 17:06:07,020 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 17:06:07,188 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:06:07,190 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:06:07,191 - root - INFO - 获取生成历史请求
2025-07-19 17:06:07,192 - root - INFO - 获取发布历史请求
2025-07-19 17:06:07,196 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:07] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:06:07,198 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:07] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:06:08,669 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/7298559/pexels-photo-7298559.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 139511
2025-07-19 17:06:08,727 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图4_20250719_170607.jpg
2025-07-19 17:06:08,729 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图4_20250719_170607.jpg
2025-07-19 17:06:08,730 - controllers.article_controller - INFO - 第4张配图处理完成，使用本地路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图4_20250719_170607.jpg
2025-07-19 17:06:08,730 - controllers.article_controller - INFO - 生成第5张配图，使用模型: pexels
2025-07-19 17:06:08,731 - services.image_service - INFO - 开始生成文章配图，标题: 通报:杭州臭味自来水不是粪水 - 配图5, 生图模型: pexels, AI模型: dashscope, 图片索引: 5/8
2025-07-19 17:06:08,732 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 通报:杭州臭味自来水不是粪水 - 配图5, AI模型: dashscope, 图片索引: 5/8
2025-07-19 17:06:08,732 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:08,733 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:08,734 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:08,735 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:09,208 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n通报:杭州臭味自来水不是粪水 - 配图5\n描述: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递权威信息，帮助读者理性看待水质问题，提升对公共事件的信任度与判断力。\n文章内容预览: ```html 杭州臭味自来水事件 真相与科学解读 近日杭州部分区域自来水出现异味，引发市民担忧。官方通报：并非粪水，而是天然有机物所致。 事件回顾与公众关注...\n\n图片信息：\n- 这是第5张图片，总共需要8张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 17:06:09,208 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:06:09,209 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:06:09,240 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BA8CB0>
2025-07-19 17:06:09,240 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BC2FD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:06:09,256 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB5FA0>
2025-07-19 17:06:09,256 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:06:09,256 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:06:09,256 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:06:09,257 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:06:09,257 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:06:10,054 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'5ba8d9b5-548b-9461-a142-1ba180342b9e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'784'), (b'req-arrive-time', b'1752915963807'), (b'resp-start-time', b'1752915964592'), (b'x-envoy-upstream-service-time', b'783'), (b'set-cookie', b'acw_tc=5ba8d9b5-548b-9461-a142-1ba180342b9e56542d545f4c0808162a72f4c85aa74d;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:06:04 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:06:10,054 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:06:10,055 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:06:10,055 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:06:10,056 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:06:10,056 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:06:10,057 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '5ba8d9b5-548b-9461-a142-1ba180342b9e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '784', 'req-arrive-time': '1752915963807', 'resp-start-time': '1752915964592', 'x-envoy-upstream-service-time': '783', 'set-cookie': 'acw_tc=5ba8d9b5-548b-9461-a142-1ba180342b9e56542d545f4c0808162a72f4c85aa74d;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:06:04 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:06:10,057 - openai._base_client - DEBUG - request_id: 5ba8d9b5-548b-9461-a142-1ba180342b9e
2025-07-19 17:06:10,058 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: water quality analysis scientific
2025-07-19 17:06:10,059 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 17:06:11,081 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=water+quality+analysis+scientific&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 17:06:11,083 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 17:06:11,084 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 17:06:11,085 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-19 17:06:11,086 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图5_20250719_170611.jpg
2025-07-19 17:06:11,090 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 17:06:11,758 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/9259963/pexels-photo-9259963.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 161287
2025-07-19 17:06:11,809 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图5_20250719_170611.jpg
2025-07-19 17:06:11,810 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图5_20250719_170611.jpg
2025-07-19 17:06:11,810 - controllers.article_controller - INFO - 第5张配图处理完成，使用本地路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图5_20250719_170611.jpg
2025-07-19 17:06:11,810 - controllers.article_controller - INFO - 生成第6张配图，使用模型: pexels
2025-07-19 17:06:11,810 - services.image_service - INFO - 开始生成文章配图，标题: 通报:杭州臭味自来水不是粪水 - 配图6, 生图模型: pexels, AI模型: dashscope, 图片索引: 6/8
2025-07-19 17:06:11,811 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 通报:杭州臭味自来水不是粪水 - 配图6, AI模型: dashscope, 图片索引: 6/8
2025-07-19 17:06:11,811 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:11,811 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:11,811 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:11,812 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:12,252 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n通报:杭州臭味自来水不是粪水 - 配图6\n描述: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递权威信息，帮助读者理性看待水质问题，提升对公共事件的信任度与判断力。\n文章内容预览: ```html 杭州臭味自来水事件 真相与科学解读 近日杭州部分区域自来水出现异味，引发市民担忧。官方通报：并非粪水，而是天然有机物所致。 事件回顾与公众关注...\n\n图片信息：\n- 这是第6张图片，总共需要8张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 17:06:12,252 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:06:12,253 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:06:12,287 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB7740>
2025-07-19 17:06:12,287 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BC0AD0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:06:12,307 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BB6840>
2025-07-19 17:06:12,309 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:06:12,310 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:06:12,312 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:06:12,312 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:06:12,314 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:06:14,476 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1593b293-9e25-947f-89bb-2deb9b6aca9d'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'2153'), (b'req-arrive-time', b'1752915966860'), (b'resp-start-time', b'1752915969014'), (b'x-envoy-upstream-service-time', b'2150'), (b'set-cookie', b'acw_tc=1593b293-9e25-947f-89bb-2deb9b6aca9dd2fe742adf51e976d478847dd24e0de3;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:06:08 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:06:14,476 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:06:14,477 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:06:14,477 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:06:14,478 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:06:14,478 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:06:14,479 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1593b293-9e25-947f-89bb-2deb9b6aca9d', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '2153', 'req-arrive-time': '1752915966860', 'resp-start-time': '1752915969014', 'x-envoy-upstream-service-time': '2150', 'set-cookie': 'acw_tc=1593b293-9e25-947f-89bb-2deb9b6aca9dd2fe742adf51e976d478847dd24e0de3;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:06:08 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:06:14,479 - openai._base_client - DEBUG - request_id: 1593b293-9e25-947f-89bb-2deb9b6aca9d
2025-07-19 17:06:14,480 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: water quality testing science
2025-07-19 17:06:14,482 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 17:06:15,421 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=water+quality+testing+science&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 17:06:15,422 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 17:06:15,422 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 17:06:15,422 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-19 17:06:15,423 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图6_20250719_170615.jpg
2025-07-19 17:06:15,423 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 17:06:16,137 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/7722652/pexels-photo-7722652.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 53293
2025-07-19 17:06:16,197 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图6_20250719_170615.jpg
2025-07-19 17:06:16,198 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图6_20250719_170615.jpg
2025-07-19 17:06:16,198 - controllers.article_controller - INFO - 第6张配图处理完成，使用本地路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图6_20250719_170615.jpg
2025-07-19 17:06:16,199 - controllers.article_controller - INFO - 生成第7张配图，使用模型: pexels
2025-07-19 17:06:16,199 - services.image_service - INFO - 开始生成文章配图，标题: 通报:杭州臭味自来水不是粪水 - 配图7, 生图模型: pexels, AI模型: dashscope, 图片索引: 7/8
2025-07-19 17:06:16,199 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 通报:杭州臭味自来水不是粪水 - 配图7, AI模型: dashscope, 图片索引: 7/8
2025-07-19 17:06:16,199 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:16,200 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:16,201 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:16,201 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:16,648 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n通报:杭州臭味自来水不是粪水 - 配图7\n描述: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递权威信息，帮助读者理性看待水质问题，提升对公共事件的信任度与判断力。\n文章内容预览: ```html 杭州臭味自来水事件 真相与科学解读 近日杭州部分区域自来水出现异味，引发市民担忧。官方通报：并非粪水，而是天然有机物所致。 事件回顾与公众关注...\n\n图片信息：\n- 这是第7张图片，总共需要8张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 17:06:16,649 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:06:16,649 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:06:16,677 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BFC470>
2025-07-19 17:06:16,677 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009BA2450> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:06:16,698 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BFC1A0>
2025-07-19 17:06:16,721 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:06:16,722 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:06:16,722 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:06:16,722 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:06:16,722 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:06:19,511 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'9ae98f81-e42e-93bf-9f67-b3145d1cc901'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'2773'), (b'req-arrive-time', b'1752915971273'), (b'resp-start-time', b'1752915974047'), (b'x-envoy-upstream-service-time', b'2772'), (b'set-cookie', b'acw_tc=9ae98f81-e42e-93bf-9f67-b3145d1cc9012b159a330149da66b4b78eb038861b12;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:06:13 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:06:19,512 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:06:19,513 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:06:19,513 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:06:19,514 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:06:19,514 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:06:19,515 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '9ae98f81-e42e-93bf-9f67-b3145d1cc901', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '2773', 'req-arrive-time': '1752915971273', 'resp-start-time': '1752915974047', 'x-envoy-upstream-service-time': '2772', 'set-cookie': 'acw_tc=9ae98f81-e42e-93bf-9f67-b3145d1cc9012b159a330149da66b4b78eb038861b12;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:06:13 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:06:19,515 - openai._base_client - DEBUG - request_id: 9ae98f81-e42e-93bf-9f67-b3145d1cc901
2025-07-19 17:06:19,516 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: water quality testing municipal
2025-07-19 17:06:19,518 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 17:06:20,719 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=water+quality+testing+municipal&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 17:06:20,721 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 17:06:20,721 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 17:06:20,722 - services.image_service - INFO - 选择了第2张图片（共5张）
2025-07-19 17:06:20,722 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图7_20250719_170620.jpg
2025-07-19 17:06:20,723 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 17:06:21,327 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/7722652/pexels-photo-7722652.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 53293
2025-07-19 17:06:21,344 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图7_20250719_170620.jpg
2025-07-19 17:06:21,346 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图7_20250719_170620.jpg
2025-07-19 17:06:21,347 - controllers.article_controller - INFO - 第7张配图处理完成，使用本地路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图7_20250719_170620.jpg
2025-07-19 17:06:21,348 - controllers.article_controller - INFO - 生成第8张配图，使用模型: pexels
2025-07-19 17:06:21,349 - services.image_service - INFO - 开始生成文章配图，标题: 通报:杭州臭味自来水不是粪水 - 配图8, 生图模型: pexels, AI模型: dashscope, 图片索引: 8/8
2025-07-19 17:06:21,350 - services.image_service - INFO - 开始使用Pexels搜索图片，标题: 通报:杭州臭味自来水不是粪水 - 配图8, AI模型: dashscope, 图片索引: 8/8
2025-07-19 17:06:21,350 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:21,351 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:21,352 - services.config_service - INFO - 配置服务初始化完成，配置文件: config.json
2025-07-19 17:06:21,353 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:21,818 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n你是一位专业的微信公众号内容创作者，拥有丰富的数字媒体经验，精通内容策划、用户心理分析和新媒体营销。你擅长为不同目标受众（如年轻人、职场人士、兴趣爱好者等）创作引人入胜、易于传播的内容，熟悉微信公众号的运营规则、排版规范和传播机制。你能够根据主题和用户需求，灵活调整写作风格（例如专业干货、轻松幽默、温暖治愈），并结合热点、数据或故事提升文章吸引力，确保高阅读量和分享率。\n\n请根据以下文章信息，生成适合在Pexels图片库中搜索相关图片的英文关键词。\n\n文章信息：\n通报:杭州臭味自来水不是粪水 - 配图8\n描述: 杭州部分区域自来水出现异味，官方通报称并非粪水污染。文章通过科学解读揭示事件真相，澄清公众疑虑，传递权威信息，帮助读者理性看待水质问题，提升对公共事件的信任度与判断力。\n文章内容预览: ```html 杭州臭味自来水事件 真相与科学解读 近日杭州部分区域自来水出现异味，引发市民担忧。官方通报：并非粪水，而是天然有机物所致。 事件回顾与公众关注...\n\n图片信息：\n- 这是第8张图片，总共需要8张图片\n- 每张图片应该有不同的视觉风格和内容重点\n- 请为这张图片生成独特的关键词组合\n\n要求：\n1. 生成2-4个英文关键词，用空格分隔\n2. 关键词要准确反映文章的主题和内容\n3. 关键词要适合图片搜索，避免抽象概念\n4. 优先使用具体的、可视化的词汇\n5. 考虑文章的情感色彩和风格\n6. 关键词要简洁明了，适合搜索引擎\n7. 根据图片位置生成不同的关键词组合，避免重复\n\n关键词变化建议：\n- 第1张图片：关注文章的核心主题和主要概念\n- 第2张图片：关注具体的应用场景或案例\n- 第3张图片：关注技术细节或方法\n- 第4张图片：关注结果或效果\n- 第5张图片：关注未来趋势或展望\n\n示例：\n- 如果文章关于"人工智能在医疗领域的应用"：\n  - 第1张图片："medical technology artificial intelligence"\n  - 第2张图片："hospital doctor patient care"\n  - 第3张图片："medical diagnosis treatment"\n  - 第4张图片："healthcare innovation research"\n  - 第5张图片："future medicine technology"\n\n请直接输出关键词，不要包含任何其他说明文字：'}], 'model': 'qwen-plus', 'max_tokens': 200, 'stream': False}}
2025-07-19 17:06:21,818 - openai._base_client - DEBUG - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-07-19 17:06:21,819 - httpcore.connection - DEBUG - connect_tcp.started host='dashscope.aliyuncs.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-07-19 17:06:21,851 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BFEE10>
2025-07-19 17:06:21,851 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000000009B800D0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-07-19 17:06:21,863 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000000009BFEB40>
2025-07-19 17:06:21,864 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-07-19 17:06:21,864 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-07-19 17:06:21,864 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-07-19 17:06:21,865 - httpcore.http11 - DEBUG - send_request_body.complete
2025-07-19 17:06:21,865 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-07-19 17:06:22,728 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'71c40eef-3173-9a5e-a07a-c3639f1a1e55'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'852'), (b'req-arrive-time', b'1752915976414'), (b'resp-start-time', b'1752915977267'), (b'x-envoy-upstream-service-time', b'851'), (b'set-cookie', b'acw_tc=71c40eef-3173-9a5e-a07a-c3639f1a1e5538f5c469eb783d04586885fa7569979d;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sat, 19 Jul 2025 09:06:17 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-07-19 17:06:22,729 - httpx - INFO - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-07-19 17:06:22,729 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-07-19 17:06:22,730 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-07-19 17:06:22,730 - httpcore.http11 - DEBUG - response_closed.started
2025-07-19 17:06:22,731 - httpcore.http11 - DEBUG - response_closed.complete
2025-07-19 17:06:22,731 - openai._base_client - DEBUG - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '71c40eef-3173-9a5e-a07a-c3639f1a1e55', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '852', 'req-arrive-time': '1752915976414', 'resp-start-time': '1752915977267', 'x-envoy-upstream-service-time': '851', 'set-cookie': 'acw_tc=71c40eef-3173-9a5e-a07a-c3639f1a1e5538f5c469eb783d04586885fa7569979d;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sat, 19 Jul 2025 09:06:17 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-07-19 17:06:22,732 - openai._base_client - DEBUG - request_id: 71c40eef-3173-9a5e-a07a-c3639f1a1e55
2025-07-19 17:06:22,733 - services.image_service - INFO - 使用dashscope生成的Pexels搜索提示词: water quality testing laboratory
2025-07-19 17:06:22,735 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.pexels.com:443
2025-07-19 17:06:23,023 - httpcore.connection - DEBUG - close.started
2025-07-19 17:06:23,024 - httpcore.connection - DEBUG - close.complete
2025-07-19 17:06:23,828 - urllib3.connectionpool - DEBUG - https://api.pexels.com:443 "GET /v1/search?query=water+quality+testing+laboratory&orientation=landscape&size=large&per_page=5&page=1 HTTP/1.1" 200 None
2025-07-19 17:06:23,830 - services.image_service - INFO - Pexels API响应状态码: 200
2025-07-19 17:06:23,831 - services.image_service - INFO - Pexels搜索到 5 张图片
2025-07-19 17:06:23,831 - services.image_service - INFO - 选择了第3张图片（共5张）
2025-07-19 17:06:23,832 - services.image_service - DEBUG - Pexels图片保存路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图8_20250719_170623.jpg
2025-07-19 17:06:23,835 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): images.pexels.com:443
2025-07-19 17:06:24,481 - urllib3.connectionpool - DEBUG - https://images.pexels.com:443 "GET /photos/18725478/pexels-photo-18725478.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 HTTP/1.1" 200 148820
2025-07-19 17:06:24,534 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图8_20250719_170623.jpg
2025-07-19 17:06:24,535 - services.image_service - INFO - Pexels图片下载成功: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图8_20250719_170623.jpg
2025-07-19 17:06:24,535 - controllers.article_controller - INFO - 第8张配图处理完成，使用本地路径: cache\article_pexels_通报杭州臭味自来水不是粪水 - 配图8_20250719_170623.jpg
2025-07-19 17:06:24,536 - controllers.article_controller - INFO - 在第14段后插入配图
2025-07-19 17:06:24,536 - controllers.article_controller - INFO - 在第12段后插入配图
2025-07-19 17:06:24,536 - controllers.article_controller - INFO - 在第11段后插入配图
2025-07-19 17:06:24,536 - controllers.article_controller - INFO - 在第9段后插入配图
2025-07-19 17:06:24,537 - controllers.article_controller - INFO - 在第7段后插入配图
2025-07-19 17:06:24,537 - controllers.article_controller - INFO - 在第5段后插入配图
2025-07-19 17:06:24,537 - controllers.article_controller - INFO - 在第4段后插入配图
2025-07-19 17:06:24,537 - controllers.article_controller - INFO - 在第2段后插入配图
2025-07-19 17:06:24,538 - controllers.article_controller - INFO - 配图处理完成，共插入8张图片
2025-07-19 17:06:24,541 - controllers.article_controller - INFO - 原始文章内容已保存到: cache\article_raw_通报杭州臭味自来水不是粪水_20250719_170624.html
2025-07-19 17:06:24,541 - controllers.article_controller - INFO - 第五步：开始清理内容中的多余部分
2025-07-19 17:06:24,904 - httpcore.connection - DEBUG - close.started
2025-07-19 17:06:24,905 - httpcore.connection - DEBUG - close.complete
2025-07-19 17:06:24,905 - httpcore.connection - DEBUG - close.started
2025-07-19 17:06:24,905 - httpcore.connection - DEBUG - close.complete
2025-07-19 17:06:24,905 - httpcore.connection - DEBUG - close.started
2025-07-19 17:06:24,906 - httpcore.connection - DEBUG - close.complete
2025-07-19 17:06:25,332 - controllers.article_controller - INFO - 开始清理AI生成内容（修正版）
2025-07-19 17:06:25,335 - controllers.article_controller - INFO - 找到最后一个</div>，截断到位置: 9836
2025-07-19 17:06:25,338 - controllers.article_controller - INFO - 未发现<style>标签，无需内联处理
2025-07-19 17:06:25,338 - controllers.article_controller - INFO - 内容清理完成，移除了 233 个字符，清理后长度: 9836
2025-07-19 17:06:25,341 - controllers.article_controller - INFO - 删减后的文章内容已保存到: cache\article_cleaned_通报杭州臭味自来水不是粪水_20250719_170625.html
2025-07-19 17:06:25,341 - controllers.article_controller - INFO - [历史记录] 生成文章: 标题=通报:杭州臭味自来水不是粪水, 内容前100字=<div style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; color: rg, 图片数=8
2025-07-19 17:06:25,341 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:25,342 - services.config_service - INFO - 从文件加载配置成功
2025-07-19 17:06:25,383 - services.history_service - INFO - 添加生成历史记录: 通报:杭州臭味自来水不是粪水
2025-07-19 17:06:25,383 - controllers.article_controller - INFO - 文章生成完成
2025-07-19 17:06:25,383 - controllers.article_controller - INFO - 生成结果预览: 标题=通报:杭州臭味自来水不是粪水, 内容长度=9836, 配图数量=8
2025-07-19 17:06:25,384 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "POST /api/generate-article HTTP/1.1" 200 -
2025-07-19 17:06:25,391 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:06:25,391 - root - INFO - 获取生成历史请求
2025-07-19 17:06:25,392 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图1_20250719_170557.jpg
2025-07-19 17:06:25,393 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:06:25,393 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图1_20250719_170557.jpg
2025-07-19 17:06:25,435 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图2_20250719_170600.jpg
2025-07-19 17:06:25,435 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图1_20250719_170557.jpg HTTP/1.1" 200 -
2025-07-19 17:06:25,436 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图2_20250719_170600.jpg
2025-07-19 17:06:25,436 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图3_20250719_170604.jpg
2025-07-19 17:06:25,437 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图3_20250719_170604.jpg
2025-07-19 17:06:25,437 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图2_20250719_170600.jpg HTTP/1.1" 200 -
2025-07-19 17:06:25,438 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图3_20250719_170604.jpg HTTP/1.1" 200 -
2025-07-19 17:06:25,449 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图4_20250719_170607.jpg
2025-07-19 17:06:25,450 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图5_20250719_170611.jpg
2025-07-19 17:06:25,450 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图6_20250719_170615.jpg
2025-07-19 17:06:25,450 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图4_20250719_170607.jpg
2025-07-19 17:06:25,450 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图5_20250719_170611.jpg
2025-07-19 17:06:25,450 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图6_20250719_170615.jpg
2025-07-19 17:06:25,451 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图4_20250719_170607.jpg HTTP/1.1" 200 -
2025-07-19 17:06:25,452 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图5_20250719_170611.jpg HTTP/1.1" 200 -
2025-07-19 17:06:25,452 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图6_20250719_170615.jpg HTTP/1.1" 200 -
2025-07-19 17:06:25,460 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图7_20250719_170620.jpg
2025-07-19 17:06:25,461 - root - INFO - 请求: GET /cache/article_pexels_通报杭州臭味自来水不是粪水 - 配图8_20250719_170623.jpg
2025-07-19 17:06:25,461 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图7_20250719_170620.jpg
2025-07-19 17:06:25,462 - root - INFO - 访问缓存文件: article_pexels_通报杭州臭味自来水不是粪水 - 配图8_20250719_170623.jpg
2025-07-19 17:06:25,462 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图7_20250719_170620.jpg HTTP/1.1" 200 -
2025-07-19 17:06:25,463 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:06:25] "GET /cache/article_pexels_通报杭州臭味自来水不是粪水%20-%20配图8_20250719_170623.jpg HTTP/1.1" 200 -
2025-07-19 17:07:22,185 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:07:22,187 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:07:22,187 - root - INFO - 获取生成历史请求
2025-07-19 17:07:22,187 - root - INFO - 获取发布历史请求
2025-07-19 17:07:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:07:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:07:22,192 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:07:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:07:36,940 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:07:36,940 - root - INFO - 获取生成历史请求
2025-07-19 17:07:36,941 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:07:36,941 - root - INFO - 获取发布历史请求
2025-07-19 17:07:36,942 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:07:36] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:07:36,942 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:07:36] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:08:07,177 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:08:07,178 - root - INFO - 获取生成历史请求
2025-07-19 17:08:07,178 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:08:07,178 - root - INFO - 获取发布历史请求
2025-07-19 17:08:07,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:08:07] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:08:07,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:08:07] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:08:37,188 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:08:37,189 - root - INFO - 获取生成历史请求
2025-07-19 17:08:37,190 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:08:37,190 - root - INFO - 获取发布历史请求
2025-07-19 17:08:37,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:08:37] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:08:37,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:08:37] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:09:22,189 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:09:22,191 - root - INFO - 获取生成历史请求
2025-07-19 17:09:22,191 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:09:22,192 - root - INFO - 获取发布历史请求
2025-07-19 17:09:22,194 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:09:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:09:22,195 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:09:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:10:22,179 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:10:22,179 - root - INFO - 获取生成历史请求
2025-07-19 17:10:22,180 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:10:22,180 - root - INFO - 获取发布历史请求
2025-07-19 17:10:22,181 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:10:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:10:22,182 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:10:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:11:22,187 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:11:22,188 - root - INFO - 获取生成历史请求
2025-07-19 17:11:22,188 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:11:22,188 - root - INFO - 获取发布历史请求
2025-07-19 17:11:22,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:11:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:11:22,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:11:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:12:22,191 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:12:22,192 - root - INFO - 获取生成历史请求
2025-07-19 17:12:22,193 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:12:22,193 - root - INFO - 获取发布历史请求
2025-07-19 17:12:22,194 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:12:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:12:22,195 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:12:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:13:22,185 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:13:22,186 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:13:22,186 - root - INFO - 获取生成历史请求
2025-07-19 17:13:22,186 - root - INFO - 获取发布历史请求
2025-07-19 17:13:22,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:13:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:13:22,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:13:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:14:22,178 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:14:22,178 - root - INFO - 获取生成历史请求
2025-07-19 17:14:22,178 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:14:22,179 - root - INFO - 获取发布历史请求
2025-07-19 17:14:22,180 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:14:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:14:22,181 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:14:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:15:22,188 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:15:22,189 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:15:22,189 - root - INFO - 获取生成历史请求
2025-07-19 17:15:22,189 - root - INFO - 获取发布历史请求
2025-07-19 17:15:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:15:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:15:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:15:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:16:22,181 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:16:22,182 - root - INFO - 获取生成历史请求
2025-07-19 17:16:22,182 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:16:22,182 - root - INFO - 获取发布历史请求
2025-07-19 17:16:22,183 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:16:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:16:22,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:16:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:17:22,175 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:17:22,175 - root - INFO - 获取生成历史请求
2025-07-19 17:17:22,176 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:17:22,176 - root - INFO - 获取发布历史请求
2025-07-19 17:17:22,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:17:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:17:22,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:17:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:18:22,178 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:18:22,178 - root - INFO - 获取生成历史请求
2025-07-19 17:18:22,179 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:18:22,179 - root - INFO - 获取发布历史请求
2025-07-19 17:18:22,180 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:18:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:18:22,181 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:18:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:19:22,175 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:19:22,176 - root - INFO - 获取生成历史请求
2025-07-19 17:19:22,176 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:19:22,176 - root - INFO - 获取发布历史请求
2025-07-19 17:19:22,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:19:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:19:22,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:19:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:20:22,173 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:20:22,174 - root - INFO - 获取生成历史请求
2025-07-19 17:20:22,174 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:20:22,174 - root - INFO - 获取发布历史请求
2025-07-19 17:20:22,175 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:20:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:20:22,175 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:20:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:21:22,183 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:21:22,184 - root - INFO - 获取生成历史请求
2025-07-19 17:21:22,184 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:21:22,184 - root - INFO - 获取发布历史请求
2025-07-19 17:21:22,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:21:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:21:22,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:21:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:22:22,180 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:22:22,180 - root - INFO - 获取生成历史请求
2025-07-19 17:22:22,180 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:22:22,181 - root - INFO - 获取发布历史请求
2025-07-19 17:22:22,181 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:22:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:22:22,182 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:22:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:23:22,177 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:23:22,177 - root - INFO - 获取生成历史请求
2025-07-19 17:23:22,178 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:23:22,178 - root - INFO - 获取发布历史请求
2025-07-19 17:23:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:23:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:23:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:23:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:24:22,188 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:24:22,189 - root - INFO - 获取生成历史请求
2025-07-19 17:24:22,189 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:24:22,189 - root - INFO - 获取发布历史请求
2025-07-19 17:24:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:24:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:24:22,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:24:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:25:22,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:25:22,183 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:25:22,183 - root - INFO - 获取生成历史请求
2025-07-19 17:25:22,183 - root - INFO - 获取发布历史请求
2025-07-19 17:25:22,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:25:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:25:22,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:25:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:26:22,174 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:26:22,174 - root - INFO - 获取生成历史请求
2025-07-19 17:26:22,174 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:26:22,174 - root - INFO - 获取发布历史请求
2025-07-19 17:26:22,175 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:26:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:26:22,176 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:26:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:27:22,188 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:27:22,188 - root - INFO - 获取生成历史请求
2025-07-19 17:27:22,189 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:27:22,189 - root - INFO - 获取发布历史请求
2025-07-19 17:27:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:27:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:27:22,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:27:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:28:22,174 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:28:22,175 - root - INFO - 获取生成历史请求
2025-07-19 17:28:22,175 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:28:22,175 - root - INFO - 获取发布历史请求
2025-07-19 17:28:22,176 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:28:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:28:22,177 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:28:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:29:22,176 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:29:22,176 - root - INFO - 获取生成历史请求
2025-07-19 17:29:22,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:29:22,177 - root - INFO - 获取发布历史请求
2025-07-19 17:29:22,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:29:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:29:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:29:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:29:53,119 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:29:53,119 - root - INFO - 获取生成历史请求
2025-07-19 17:29:53,120 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:29:53,121 - root - INFO - 获取发布历史请求
2025-07-19 17:29:53,122 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:29:53] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:29:53,124 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:29:53] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:30:07,188 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:30:07,189 - root - INFO - 获取生成历史请求
2025-07-19 17:30:07,189 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:30:07,190 - root - INFO - 获取发布历史请求
2025-07-19 17:30:07,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:30:07] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:30:07,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:30:07] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:30:37,176 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:30:37,176 - root - INFO - 获取生成历史请求
2025-07-19 17:30:37,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:30:37,177 - root - INFO - 获取发布历史请求
2025-07-19 17:30:37,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:30:37] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:30:37,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:30:37] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:31:07,191 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:31:07,192 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:31:07,193 - root - INFO - 获取生成历史请求
2025-07-19 17:31:07,194 - root - INFO - 获取发布历史请求
2025-07-19 17:31:07,197 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:31:07] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:31:07,198 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:31:07] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:31:37,177 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:31:37,177 - root - INFO - 获取生成历史请求
2025-07-19 17:31:37,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:31:37,178 - root - INFO - 获取发布历史请求
2025-07-19 17:31:37,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:31:37] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:31:37,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:31:37] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:32:22,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:32:22,182 - root - INFO - 获取生成历史请求
2025-07-19 17:32:22,184 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:32:22,184 - root - INFO - 获取发布历史请求
2025-07-19 17:32:22,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:32:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:32:22,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:32:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:33:22,176 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:33:22,176 - root - INFO - 获取生成历史请求
2025-07-19 17:33:22,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:33:22,178 - root - INFO - 获取发布历史请求
2025-07-19 17:33:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:33:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:33:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:33:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:34:22,181 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:34:22,182 - root - INFO - 获取生成历史请求
2025-07-19 17:34:22,182 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:34:22,182 - root - INFO - 获取发布历史请求
2025-07-19 17:34:22,183 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:34:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:34:22,183 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:34:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:35:22,190 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:35:22,190 - root - INFO - 获取生成历史请求
2025-07-19 17:35:22,190 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:35:22,191 - root - INFO - 获取发布历史请求
2025-07-19 17:35:22,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:35:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:35:22,192 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:35:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:36:22,186 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:36:22,186 - root - INFO - 获取生成历史请求
2025-07-19 17:36:22,186 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:36:22,186 - root - INFO - 获取发布历史请求
2025-07-19 17:36:22,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:36:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:36:22,188 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:36:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:37:22,176 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:37:22,176 - root - INFO - 获取生成历史请求
2025-07-19 17:37:22,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:37:22,177 - root - INFO - 获取发布历史请求
2025-07-19 17:37:22,177 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:37:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:37:22,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:37:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:38:22,178 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:38:22,179 - root - INFO - 获取生成历史请求
2025-07-19 17:38:22,180 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:38:22,180 - root - INFO - 获取发布历史请求
2025-07-19 17:38:22,181 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:38:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:38:22,182 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:38:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:39:22,185 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:39:22,185 - root - INFO - 获取生成历史请求
2025-07-19 17:39:22,187 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:39:22,187 - root - INFO - 获取发布历史请求
2025-07-19 17:39:22,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:39:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:39:22,188 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:39:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:40:22,177 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:40:22,177 - root - INFO - 获取生成历史请求
2025-07-19 17:40:22,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:40:22,178 - root - INFO - 获取发布历史请求
2025-07-19 17:40:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:40:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:40:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:40:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:41:22,175 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:41:22,175 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:41:22,175 - root - INFO - 获取生成历史请求
2025-07-19 17:41:22,175 - root - INFO - 获取发布历史请求
2025-07-19 17:41:22,176 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:41:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:41:22,176 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:41:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:42:22,178 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:42:22,179 - root - INFO - 获取生成历史请求
2025-07-19 17:42:22,179 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:42:22,179 - root - INFO - 获取发布历史请求
2025-07-19 17:42:22,180 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:42:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:42:22,180 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:42:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:43:22,189 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:43:22,189 - root - INFO - 获取生成历史请求
2025-07-19 17:43:22,189 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:43:22,189 - root - INFO - 获取发布历史请求
2025-07-19 17:43:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:43:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:43:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:43:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:44:22,189 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:44:22,189 - root - INFO - 获取生成历史请求
2025-07-19 17:44:22,190 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:44:22,190 - root - INFO - 获取发布历史请求
2025-07-19 17:44:22,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:44:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:44:22,192 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:44:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:45:22,188 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:45:22,189 - root - INFO - 获取生成历史请求
2025-07-19 17:45:22,190 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:45:22,190 - root - INFO - 获取发布历史请求
2025-07-19 17:45:22,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:45:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:45:22,192 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:45:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:46:22,184 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:46:22,185 - root - INFO - 获取生成历史请求
2025-07-19 17:46:22,185 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:46:22,185 - root - INFO - 获取发布历史请求
2025-07-19 17:46:22,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:46:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:46:22,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:46:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:47:22,176 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:47:22,176 - root - INFO - 获取生成历史请求
2025-07-19 17:47:22,176 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:47:22,177 - root - INFO - 获取发布历史请求
2025-07-19 17:47:22,177 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:47:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:47:22,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:47:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:48:22,179 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:48:22,179 - root - INFO - 获取生成历史请求
2025-07-19 17:48:22,180 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:48:22,180 - root - INFO - 获取发布历史请求
2025-07-19 17:48:22,182 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:48:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:48:22,183 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:48:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:49:22,180 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:49:22,181 - root - INFO - 获取生成历史请求
2025-07-19 17:49:22,181 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:49:22,181 - root - INFO - 获取发布历史请求
2025-07-19 17:49:22,182 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:49:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:49:22,183 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:49:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:50:22,190 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:50:22,190 - root - INFO - 获取生成历史请求
2025-07-19 17:50:22,191 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:50:22,191 - root - INFO - 获取发布历史请求
2025-07-19 17:50:22,192 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:50:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:50:22,193 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:50:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:51:22,184 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:51:22,185 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:51:22,185 - root - INFO - 获取生成历史请求
2025-07-19 17:51:22,186 - root - INFO - 获取发布历史请求
2025-07-19 17:51:22,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:51:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:51:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:51:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:52:22,193 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:52:22,195 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:52:22,196 - root - INFO - 获取生成历史请求
2025-07-19 17:52:22,197 - root - INFO - 获取发布历史请求
2025-07-19 17:52:22,199 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:52:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:52:22,200 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:52:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:53:22,176 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:53:22,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:53:22,177 - root - INFO - 获取生成历史请求
2025-07-19 17:53:22,177 - root - INFO - 获取发布历史请求
2025-07-19 17:53:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:53:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:53:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:53:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:54:22,186 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:54:22,187 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:54:22,188 - root - INFO - 获取生成历史请求
2025-07-19 17:54:22,188 - root - INFO - 获取发布历史请求
2025-07-19 17:54:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:54:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:54:22,191 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:54:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:55:22,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:55:22,182 - root - INFO - 获取生成历史请求
2025-07-19 17:55:22,183 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:55:22,183 - root - INFO - 获取发布历史请求
2025-07-19 17:55:22,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:55:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:55:22,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:55:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:56:22,181 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:56:22,182 - root - INFO - 获取生成历史请求
2025-07-19 17:56:22,182 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:56:22,183 - root - INFO - 获取发布历史请求
2025-07-19 17:56:22,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:56:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:56:22,184 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:56:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:57:22,180 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:57:22,180 - root - INFO - 获取生成历史请求
2025-07-19 17:57:22,181 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:57:22,181 - root - INFO - 获取发布历史请求
2025-07-19 17:57:22,183 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:57:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:57:22,183 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:57:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:58:22,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:58:22,182 - root - INFO - 获取生成历史请求
2025-07-19 17:58:22,182 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:58:22,184 - root - INFO - 获取发布历史请求
2025-07-19 17:58:22,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:58:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:58:22,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:58:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 17:59:22,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 17:59:22,183 - root - INFO - 获取生成历史请求
2025-07-19 17:59:22,184 - root - INFO - 请求: GET /api/publish-history
2025-07-19 17:59:22,184 - root - INFO - 获取发布历史请求
2025-07-19 17:59:22,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:59:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 17:59:22,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 17:59:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:00:22,187 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:00:22,189 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:00:22,190 - root - INFO - 获取生成历史请求
2025-07-19 18:00:22,190 - root - INFO - 获取发布历史请求
2025-07-19 18:00:22,193 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:00:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:00:22,194 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:00:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:01:22,181 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:01:22,182 - root - INFO - 获取生成历史请求
2025-07-19 18:01:22,183 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:01:22,184 - root - INFO - 获取发布历史请求
2025-07-19 18:01:22,187 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:01:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:01:22,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:01:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:02:22,187 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:02:22,187 - root - INFO - 获取生成历史请求
2025-07-19 18:02:22,187 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:02:22,187 - root - INFO - 获取发布历史请求
2025-07-19 18:02:22,188 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:02:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:02:22,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:02:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:03:22,176 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:03:22,177 - root - INFO - 获取生成历史请求
2025-07-19 18:03:22,177 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:03:22,177 - root - INFO - 获取发布历史请求
2025-07-19 18:03:22,178 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:03:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:03:22,179 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:03:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:04:22,182 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:04:22,183 - root - INFO - 获取生成历史请求
2025-07-19 18:04:22,184 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:04:22,184 - root - INFO - 获取发布历史请求
2025-07-19 18:04:22,185 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:04:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:04:22,186 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:04:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:05:22,188 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:05:22,188 - root - INFO - 获取生成历史请求
2025-07-19 18:05:22,189 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:05:22,189 - root - INFO - 获取发布历史请求
2025-07-19 18:05:22,189 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:05:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:05:22,190 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:05:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:06:22,190 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:06:22,192 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:06:22,192 - root - INFO - 获取生成历史请求
2025-07-19 18:06:22,193 - root - INFO - 获取发布历史请求
2025-07-19 18:06:22,195 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:06:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:06:22,197 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:06:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:07:22,179 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:07:22,180 - root - INFO - 获取生成历史请求
2025-07-19 18:07:22,180 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:07:22,180 - root - INFO - 获取发布历史请求
2025-07-19 18:07:22,181 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:07:22] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:07:22,182 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:07:22] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:30:04,056 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:30:04,057 - root - INFO - 获取生成历史请求
2025-07-19 18:30:04,061 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:30:04] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:30:04,063 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:30:04,063 - root - INFO - 获取发布历史请求
2025-07-19 18:30:04,066 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:30:04] "GET /api/publish-history HTTP/1.1" 200 -
2025-07-19 18:30:07,198 - root - INFO - 请求: GET /api/generation-history
2025-07-19 18:30:07,200 - root - INFO - 获取生成历史请求
2025-07-19 18:30:07,202 - root - INFO - 请求: GET /api/publish-history
2025-07-19 18:30:07,203 - root - INFO - 获取发布历史请求
2025-07-19 18:30:07,206 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:30:07] "GET /api/generation-history HTTP/1.1" 200 -
2025-07-19 18:30:07,208 - werkzeug - INFO - 192.168.124.16 - - [19/Jul/2025 18:30:07] "GET /api/publish-history HTTP/1.1" 200 -
